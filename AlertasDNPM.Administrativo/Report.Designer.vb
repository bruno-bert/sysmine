'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4984
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("Report"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class Report
    Inherits Global.System.Data.DataSet
    
    Private tableGERAL_PROCESSO As GERAL_PROCESSODataTable
    
    Private tableDNPM_ASSOCIADOS As DNPM_ASSOCIADOSDataTable
    
    Private tableDNPM_CONDICAO As DNPM_CONDICAODataTable
    
    Private tableINFO_DAEE As INFO_DAEEDataTable
    
    Private tableDNPM_MUNICIPIO As DNPM_MUNICIPIODataTable
    
    Private tableCETESB_GERAL As CETESB_GERALDataTable
    
    Private tableINFO_ICMBIO As INFO_ICMBIODataTable
    
    Private tableINFO_PETROBRAS As INFO_PETROBRASDataTable
    
    Private tableINFO_PREFEITURA As INFO_PREFEITURADataTable
    
    Private tableGERAL_EVENTOS As GERAL_EVENTOSDataTable
    
    Private tableCETESB_MPRIMA_PRODUTO As CETESB_MPRIMA_PRODUTODataTable
    
    Private tableDNPM_SUBSTANCIA As DNPM_SUBSTANCIADataTable
    
    Private tableDNPM_TITULO As DNPM_TITULODataTable
    
    Private tableDAEE_TITULO As DAEE_TITULODataTable
    
    Private tableICMBIO_TITULO As ICMBIO_TITULODataTable
    
    Private tablePETROBRAS_TITULO As PETROBRAS_TITULODataTable
    
    Private tablePREFEITURA_TITULO As PREFEITURA_TITULODataTable
    
    Private tableCETESB_SD As CETESB_SDDataTable
    
    Private tableDNPM_DOC As DNPM_DOCDataTable
    
    Private tableCETESB_DOC As CETESB_DOCDataTable
    
    Private tableDAEE_DOC As DAEE_DOCDataTable
    
    Private tableICMBIO_DOC As ICMBIO_DOCDataTable
    
    Private tablePETROBRAS_DOC As PETROBRAS_DOCDataTable
    
    Private tablePREFEITURA_DOC As PREFEITURA_DOCDataTable
    
    Private tableCETESB_NOTA As CETESB_NOTADataTable
    
    Private tableDAEE_NOTA As DAEE_NOTADataTable
    
    Private tableICMBIO_NOTA As ICMBIO_NOTADataTable
    
    Private tablePETROBRAS_NOTA As PETROBRAS_NOTADataTable
    
    Private tablePREFEITURA_NOTA As PREFEITURA_NOTADataTable
    
    Private tableTABELA_DOC As TABELA_DOCDataTable
    
    Private tableTabelaFiltro As TabelaFiltroDataTable
    
    Private tableGRAFICO_DOC As GRAFICO_DOCDataTable
    
    Private tableTABELA_PROC As TABELA_PROCDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("GERAL_PROCESSO")) Is Nothing) Then
                MyBase.Tables.Add(New GERAL_PROCESSODataTable(ds.Tables("GERAL_PROCESSO")))
            End If
            If (Not (ds.Tables("DNPM_ASSOCIADOS")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_ASSOCIADOSDataTable(ds.Tables("DNPM_ASSOCIADOS")))
            End If
            If (Not (ds.Tables("DNPM_CONDICAO")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_CONDICAODataTable(ds.Tables("DNPM_CONDICAO")))
            End If
            If (Not (ds.Tables("INFO_DAEE")) Is Nothing) Then
                MyBase.Tables.Add(New INFO_DAEEDataTable(ds.Tables("INFO_DAEE")))
            End If
            If (Not (ds.Tables("DNPM_MUNICIPIO")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_MUNICIPIODataTable(ds.Tables("DNPM_MUNICIPIO")))
            End If
            If (Not (ds.Tables("CETESB_GERAL")) Is Nothing) Then
                MyBase.Tables.Add(New CETESB_GERALDataTable(ds.Tables("CETESB_GERAL")))
            End If
            If (Not (ds.Tables("INFO_ICMBIO")) Is Nothing) Then
                MyBase.Tables.Add(New INFO_ICMBIODataTable(ds.Tables("INFO_ICMBIO")))
            End If
            If (Not (ds.Tables("INFO_PETROBRAS")) Is Nothing) Then
                MyBase.Tables.Add(New INFO_PETROBRASDataTable(ds.Tables("INFO_PETROBRAS")))
            End If
            If (Not (ds.Tables("INFO_PREFEITURA")) Is Nothing) Then
                MyBase.Tables.Add(New INFO_PREFEITURADataTable(ds.Tables("INFO_PREFEITURA")))
            End If
            If (Not (ds.Tables("GERAL_EVENTOS")) Is Nothing) Then
                MyBase.Tables.Add(New GERAL_EVENTOSDataTable(ds.Tables("GERAL_EVENTOS")))
            End If
            If (Not (ds.Tables("CETESB_MPRIMA_PRODUTO")) Is Nothing) Then
                MyBase.Tables.Add(New CETESB_MPRIMA_PRODUTODataTable(ds.Tables("CETESB_MPRIMA_PRODUTO")))
            End If
            If (Not (ds.Tables("DNPM_SUBSTANCIA")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_SUBSTANCIADataTable(ds.Tables("DNPM_SUBSTANCIA")))
            End If
            If (Not (ds.Tables("DNPM_TITULO")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_TITULODataTable(ds.Tables("DNPM_TITULO")))
            End If
            If (Not (ds.Tables("DAEE_TITULO")) Is Nothing) Then
                MyBase.Tables.Add(New DAEE_TITULODataTable(ds.Tables("DAEE_TITULO")))
            End If
            If (Not (ds.Tables("ICMBIO_TITULO")) Is Nothing) Then
                MyBase.Tables.Add(New ICMBIO_TITULODataTable(ds.Tables("ICMBIO_TITULO")))
            End If
            If (Not (ds.Tables("PETROBRAS_TITULO")) Is Nothing) Then
                MyBase.Tables.Add(New PETROBRAS_TITULODataTable(ds.Tables("PETROBRAS_TITULO")))
            End If
            If (Not (ds.Tables("PREFEITURA_TITULO")) Is Nothing) Then
                MyBase.Tables.Add(New PREFEITURA_TITULODataTable(ds.Tables("PREFEITURA_TITULO")))
            End If
            If (Not (ds.Tables("CETESB_SD")) Is Nothing) Then
                MyBase.Tables.Add(New CETESB_SDDataTable(ds.Tables("CETESB_SD")))
            End If
            If (Not (ds.Tables("DNPM_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_DOCDataTable(ds.Tables("DNPM_DOC")))
            End If
            If (Not (ds.Tables("CETESB_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New CETESB_DOCDataTable(ds.Tables("CETESB_DOC")))
            End If
            If (Not (ds.Tables("DAEE_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New DAEE_DOCDataTable(ds.Tables("DAEE_DOC")))
            End If
            If (Not (ds.Tables("ICMBIO_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New ICMBIO_DOCDataTable(ds.Tables("ICMBIO_DOC")))
            End If
            If (Not (ds.Tables("PETROBRAS_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New PETROBRAS_DOCDataTable(ds.Tables("PETROBRAS_DOC")))
            End If
            If (Not (ds.Tables("PREFEITURA_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New PREFEITURA_DOCDataTable(ds.Tables("PREFEITURA_DOC")))
            End If
            If (Not (ds.Tables("CETESB_NOTA")) Is Nothing) Then
                MyBase.Tables.Add(New CETESB_NOTADataTable(ds.Tables("CETESB_NOTA")))
            End If
            If (Not (ds.Tables("DAEE_NOTA")) Is Nothing) Then
                MyBase.Tables.Add(New DAEE_NOTADataTable(ds.Tables("DAEE_NOTA")))
            End If
            If (Not (ds.Tables("ICMBIO_NOTA")) Is Nothing) Then
                MyBase.Tables.Add(New ICMBIO_NOTADataTable(ds.Tables("ICMBIO_NOTA")))
            End If
            If (Not (ds.Tables("PETROBRAS_NOTA")) Is Nothing) Then
                MyBase.Tables.Add(New PETROBRAS_NOTADataTable(ds.Tables("PETROBRAS_NOTA")))
            End If
            If (Not (ds.Tables("PREFEITURA_NOTA")) Is Nothing) Then
                MyBase.Tables.Add(New PREFEITURA_NOTADataTable(ds.Tables("PREFEITURA_NOTA")))
            End If
            If (Not (ds.Tables("TABELA_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New TABELA_DOCDataTable(ds.Tables("TABELA_DOC")))
            End If
            If (Not (ds.Tables("TabelaFiltro")) Is Nothing) Then
                MyBase.Tables.Add(New TabelaFiltroDataTable(ds.Tables("TabelaFiltro")))
            End If
            If (Not (ds.Tables("GRAFICO_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New GRAFICO_DOCDataTable(ds.Tables("GRAFICO_DOC")))
            End If
            If (Not (ds.Tables("TABELA_PROC")) Is Nothing) Then
                MyBase.Tables.Add(New TABELA_PROCDataTable(ds.Tables("TABELA_PROC")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GERAL_PROCESSO() As GERAL_PROCESSODataTable
        Get
            Return Me.tableGERAL_PROCESSO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DNPM_ASSOCIADOS() As DNPM_ASSOCIADOSDataTable
        Get
            Return Me.tableDNPM_ASSOCIADOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DNPM_CONDICAO() As DNPM_CONDICAODataTable
        Get
            Return Me.tableDNPM_CONDICAO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INFO_DAEE() As INFO_DAEEDataTable
        Get
            Return Me.tableINFO_DAEE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DNPM_MUNICIPIO() As DNPM_MUNICIPIODataTable
        Get
            Return Me.tableDNPM_MUNICIPIO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CETESB_GERAL() As CETESB_GERALDataTable
        Get
            Return Me.tableCETESB_GERAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INFO_ICMBIO() As INFO_ICMBIODataTable
        Get
            Return Me.tableINFO_ICMBIO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INFO_PETROBRAS() As INFO_PETROBRASDataTable
        Get
            Return Me.tableINFO_PETROBRAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INFO_PREFEITURA() As INFO_PREFEITURADataTable
        Get
            Return Me.tableINFO_PREFEITURA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GERAL_EVENTOS() As GERAL_EVENTOSDataTable
        Get
            Return Me.tableGERAL_EVENTOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CETESB_MPRIMA_PRODUTO() As CETESB_MPRIMA_PRODUTODataTable
        Get
            Return Me.tableCETESB_MPRIMA_PRODUTO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DNPM_SUBSTANCIA() As DNPM_SUBSTANCIADataTable
        Get
            Return Me.tableDNPM_SUBSTANCIA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DNPM_TITULO() As DNPM_TITULODataTable
        Get
            Return Me.tableDNPM_TITULO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DAEE_TITULO() As DAEE_TITULODataTable
        Get
            Return Me.tableDAEE_TITULO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ICMBIO_TITULO() As ICMBIO_TITULODataTable
        Get
            Return Me.tableICMBIO_TITULO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PETROBRAS_TITULO() As PETROBRAS_TITULODataTable
        Get
            Return Me.tablePETROBRAS_TITULO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PREFEITURA_TITULO() As PREFEITURA_TITULODataTable
        Get
            Return Me.tablePREFEITURA_TITULO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CETESB_SD() As CETESB_SDDataTable
        Get
            Return Me.tableCETESB_SD
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DNPM_DOC() As DNPM_DOCDataTable
        Get
            Return Me.tableDNPM_DOC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CETESB_DOC() As CETESB_DOCDataTable
        Get
            Return Me.tableCETESB_DOC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DAEE_DOC() As DAEE_DOCDataTable
        Get
            Return Me.tableDAEE_DOC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ICMBIO_DOC() As ICMBIO_DOCDataTable
        Get
            Return Me.tableICMBIO_DOC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PETROBRAS_DOC() As PETROBRAS_DOCDataTable
        Get
            Return Me.tablePETROBRAS_DOC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PREFEITURA_DOC() As PREFEITURA_DOCDataTable
        Get
            Return Me.tablePREFEITURA_DOC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CETESB_NOTA() As CETESB_NOTADataTable
        Get
            Return Me.tableCETESB_NOTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DAEE_NOTA() As DAEE_NOTADataTable
        Get
            Return Me.tableDAEE_NOTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ICMBIO_NOTA() As ICMBIO_NOTADataTable
        Get
            Return Me.tableICMBIO_NOTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PETROBRAS_NOTA() As PETROBRAS_NOTADataTable
        Get
            Return Me.tablePETROBRAS_NOTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PREFEITURA_NOTA() As PREFEITURA_NOTADataTable
        Get
            Return Me.tablePREFEITURA_NOTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TABELA_DOC() As TABELA_DOCDataTable
        Get
            Return Me.tableTABELA_DOC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TabelaFiltro() As TabelaFiltroDataTable
        Get
            Return Me.tableTabelaFiltro
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GRAFICO_DOC() As GRAFICO_DOCDataTable
        Get
            Return Me.tableGRAFICO_DOC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TABELA_PROC() As TABELA_PROCDataTable
        Get
            Return Me.tableTABELA_PROC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As Report = CType(MyBase.Clone,Report)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("GERAL_PROCESSO")) Is Nothing) Then
                MyBase.Tables.Add(New GERAL_PROCESSODataTable(ds.Tables("GERAL_PROCESSO")))
            End If
            If (Not (ds.Tables("DNPM_ASSOCIADOS")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_ASSOCIADOSDataTable(ds.Tables("DNPM_ASSOCIADOS")))
            End If
            If (Not (ds.Tables("DNPM_CONDICAO")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_CONDICAODataTable(ds.Tables("DNPM_CONDICAO")))
            End If
            If (Not (ds.Tables("INFO_DAEE")) Is Nothing) Then
                MyBase.Tables.Add(New INFO_DAEEDataTable(ds.Tables("INFO_DAEE")))
            End If
            If (Not (ds.Tables("DNPM_MUNICIPIO")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_MUNICIPIODataTable(ds.Tables("DNPM_MUNICIPIO")))
            End If
            If (Not (ds.Tables("CETESB_GERAL")) Is Nothing) Then
                MyBase.Tables.Add(New CETESB_GERALDataTable(ds.Tables("CETESB_GERAL")))
            End If
            If (Not (ds.Tables("INFO_ICMBIO")) Is Nothing) Then
                MyBase.Tables.Add(New INFO_ICMBIODataTable(ds.Tables("INFO_ICMBIO")))
            End If
            If (Not (ds.Tables("INFO_PETROBRAS")) Is Nothing) Then
                MyBase.Tables.Add(New INFO_PETROBRASDataTable(ds.Tables("INFO_PETROBRAS")))
            End If
            If (Not (ds.Tables("INFO_PREFEITURA")) Is Nothing) Then
                MyBase.Tables.Add(New INFO_PREFEITURADataTable(ds.Tables("INFO_PREFEITURA")))
            End If
            If (Not (ds.Tables("GERAL_EVENTOS")) Is Nothing) Then
                MyBase.Tables.Add(New GERAL_EVENTOSDataTable(ds.Tables("GERAL_EVENTOS")))
            End If
            If (Not (ds.Tables("CETESB_MPRIMA_PRODUTO")) Is Nothing) Then
                MyBase.Tables.Add(New CETESB_MPRIMA_PRODUTODataTable(ds.Tables("CETESB_MPRIMA_PRODUTO")))
            End If
            If (Not (ds.Tables("DNPM_SUBSTANCIA")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_SUBSTANCIADataTable(ds.Tables("DNPM_SUBSTANCIA")))
            End If
            If (Not (ds.Tables("DNPM_TITULO")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_TITULODataTable(ds.Tables("DNPM_TITULO")))
            End If
            If (Not (ds.Tables("DAEE_TITULO")) Is Nothing) Then
                MyBase.Tables.Add(New DAEE_TITULODataTable(ds.Tables("DAEE_TITULO")))
            End If
            If (Not (ds.Tables("ICMBIO_TITULO")) Is Nothing) Then
                MyBase.Tables.Add(New ICMBIO_TITULODataTable(ds.Tables("ICMBIO_TITULO")))
            End If
            If (Not (ds.Tables("PETROBRAS_TITULO")) Is Nothing) Then
                MyBase.Tables.Add(New PETROBRAS_TITULODataTable(ds.Tables("PETROBRAS_TITULO")))
            End If
            If (Not (ds.Tables("PREFEITURA_TITULO")) Is Nothing) Then
                MyBase.Tables.Add(New PREFEITURA_TITULODataTable(ds.Tables("PREFEITURA_TITULO")))
            End If
            If (Not (ds.Tables("CETESB_SD")) Is Nothing) Then
                MyBase.Tables.Add(New CETESB_SDDataTable(ds.Tables("CETESB_SD")))
            End If
            If (Not (ds.Tables("DNPM_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New DNPM_DOCDataTable(ds.Tables("DNPM_DOC")))
            End If
            If (Not (ds.Tables("CETESB_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New CETESB_DOCDataTable(ds.Tables("CETESB_DOC")))
            End If
            If (Not (ds.Tables("DAEE_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New DAEE_DOCDataTable(ds.Tables("DAEE_DOC")))
            End If
            If (Not (ds.Tables("ICMBIO_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New ICMBIO_DOCDataTable(ds.Tables("ICMBIO_DOC")))
            End If
            If (Not (ds.Tables("PETROBRAS_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New PETROBRAS_DOCDataTable(ds.Tables("PETROBRAS_DOC")))
            End If
            If (Not (ds.Tables("PREFEITURA_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New PREFEITURA_DOCDataTable(ds.Tables("PREFEITURA_DOC")))
            End If
            If (Not (ds.Tables("CETESB_NOTA")) Is Nothing) Then
                MyBase.Tables.Add(New CETESB_NOTADataTable(ds.Tables("CETESB_NOTA")))
            End If
            If (Not (ds.Tables("DAEE_NOTA")) Is Nothing) Then
                MyBase.Tables.Add(New DAEE_NOTADataTable(ds.Tables("DAEE_NOTA")))
            End If
            If (Not (ds.Tables("ICMBIO_NOTA")) Is Nothing) Then
                MyBase.Tables.Add(New ICMBIO_NOTADataTable(ds.Tables("ICMBIO_NOTA")))
            End If
            If (Not (ds.Tables("PETROBRAS_NOTA")) Is Nothing) Then
                MyBase.Tables.Add(New PETROBRAS_NOTADataTable(ds.Tables("PETROBRAS_NOTA")))
            End If
            If (Not (ds.Tables("PREFEITURA_NOTA")) Is Nothing) Then
                MyBase.Tables.Add(New PREFEITURA_NOTADataTable(ds.Tables("PREFEITURA_NOTA")))
            End If
            If (Not (ds.Tables("TABELA_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New TABELA_DOCDataTable(ds.Tables("TABELA_DOC")))
            End If
            If (Not (ds.Tables("TabelaFiltro")) Is Nothing) Then
                MyBase.Tables.Add(New TabelaFiltroDataTable(ds.Tables("TabelaFiltro")))
            End If
            If (Not (ds.Tables("GRAFICO_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New GRAFICO_DOCDataTable(ds.Tables("GRAFICO_DOC")))
            End If
            If (Not (ds.Tables("TABELA_PROC")) Is Nothing) Then
                MyBase.Tables.Add(New TABELA_PROCDataTable(ds.Tables("TABELA_PROC")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableGERAL_PROCESSO = CType(MyBase.Tables("GERAL_PROCESSO"),GERAL_PROCESSODataTable)
        If (initTable = true) Then
            If (Not (Me.tableGERAL_PROCESSO) Is Nothing) Then
                Me.tableGERAL_PROCESSO.InitVars
            End If
        End If
        Me.tableDNPM_ASSOCIADOS = CType(MyBase.Tables("DNPM_ASSOCIADOS"),DNPM_ASSOCIADOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDNPM_ASSOCIADOS) Is Nothing) Then
                Me.tableDNPM_ASSOCIADOS.InitVars
            End If
        End If
        Me.tableDNPM_CONDICAO = CType(MyBase.Tables("DNPM_CONDICAO"),DNPM_CONDICAODataTable)
        If (initTable = true) Then
            If (Not (Me.tableDNPM_CONDICAO) Is Nothing) Then
                Me.tableDNPM_CONDICAO.InitVars
            End If
        End If
        Me.tableINFO_DAEE = CType(MyBase.Tables("INFO_DAEE"),INFO_DAEEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableINFO_DAEE) Is Nothing) Then
                Me.tableINFO_DAEE.InitVars
            End If
        End If
        Me.tableDNPM_MUNICIPIO = CType(MyBase.Tables("DNPM_MUNICIPIO"),DNPM_MUNICIPIODataTable)
        If (initTable = true) Then
            If (Not (Me.tableDNPM_MUNICIPIO) Is Nothing) Then
                Me.tableDNPM_MUNICIPIO.InitVars
            End If
        End If
        Me.tableCETESB_GERAL = CType(MyBase.Tables("CETESB_GERAL"),CETESB_GERALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCETESB_GERAL) Is Nothing) Then
                Me.tableCETESB_GERAL.InitVars
            End If
        End If
        Me.tableINFO_ICMBIO = CType(MyBase.Tables("INFO_ICMBIO"),INFO_ICMBIODataTable)
        If (initTable = true) Then
            If (Not (Me.tableINFO_ICMBIO) Is Nothing) Then
                Me.tableINFO_ICMBIO.InitVars
            End If
        End If
        Me.tableINFO_PETROBRAS = CType(MyBase.Tables("INFO_PETROBRAS"),INFO_PETROBRASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableINFO_PETROBRAS) Is Nothing) Then
                Me.tableINFO_PETROBRAS.InitVars
            End If
        End If
        Me.tableINFO_PREFEITURA = CType(MyBase.Tables("INFO_PREFEITURA"),INFO_PREFEITURADataTable)
        If (initTable = true) Then
            If (Not (Me.tableINFO_PREFEITURA) Is Nothing) Then
                Me.tableINFO_PREFEITURA.InitVars
            End If
        End If
        Me.tableGERAL_EVENTOS = CType(MyBase.Tables("GERAL_EVENTOS"),GERAL_EVENTOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGERAL_EVENTOS) Is Nothing) Then
                Me.tableGERAL_EVENTOS.InitVars
            End If
        End If
        Me.tableCETESB_MPRIMA_PRODUTO = CType(MyBase.Tables("CETESB_MPRIMA_PRODUTO"),CETESB_MPRIMA_PRODUTODataTable)
        If (initTable = true) Then
            If (Not (Me.tableCETESB_MPRIMA_PRODUTO) Is Nothing) Then
                Me.tableCETESB_MPRIMA_PRODUTO.InitVars
            End If
        End If
        Me.tableDNPM_SUBSTANCIA = CType(MyBase.Tables("DNPM_SUBSTANCIA"),DNPM_SUBSTANCIADataTable)
        If (initTable = true) Then
            If (Not (Me.tableDNPM_SUBSTANCIA) Is Nothing) Then
                Me.tableDNPM_SUBSTANCIA.InitVars
            End If
        End If
        Me.tableDNPM_TITULO = CType(MyBase.Tables("DNPM_TITULO"),DNPM_TITULODataTable)
        If (initTable = true) Then
            If (Not (Me.tableDNPM_TITULO) Is Nothing) Then
                Me.tableDNPM_TITULO.InitVars
            End If
        End If
        Me.tableDAEE_TITULO = CType(MyBase.Tables("DAEE_TITULO"),DAEE_TITULODataTable)
        If (initTable = true) Then
            If (Not (Me.tableDAEE_TITULO) Is Nothing) Then
                Me.tableDAEE_TITULO.InitVars
            End If
        End If
        Me.tableICMBIO_TITULO = CType(MyBase.Tables("ICMBIO_TITULO"),ICMBIO_TITULODataTable)
        If (initTable = true) Then
            If (Not (Me.tableICMBIO_TITULO) Is Nothing) Then
                Me.tableICMBIO_TITULO.InitVars
            End If
        End If
        Me.tablePETROBRAS_TITULO = CType(MyBase.Tables("PETROBRAS_TITULO"),PETROBRAS_TITULODataTable)
        If (initTable = true) Then
            If (Not (Me.tablePETROBRAS_TITULO) Is Nothing) Then
                Me.tablePETROBRAS_TITULO.InitVars
            End If
        End If
        Me.tablePREFEITURA_TITULO = CType(MyBase.Tables("PREFEITURA_TITULO"),PREFEITURA_TITULODataTable)
        If (initTable = true) Then
            If (Not (Me.tablePREFEITURA_TITULO) Is Nothing) Then
                Me.tablePREFEITURA_TITULO.InitVars
            End If
        End If
        Me.tableCETESB_SD = CType(MyBase.Tables("CETESB_SD"),CETESB_SDDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCETESB_SD) Is Nothing) Then
                Me.tableCETESB_SD.InitVars
            End If
        End If
        Me.tableDNPM_DOC = CType(MyBase.Tables("DNPM_DOC"),DNPM_DOCDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDNPM_DOC) Is Nothing) Then
                Me.tableDNPM_DOC.InitVars
            End If
        End If
        Me.tableCETESB_DOC = CType(MyBase.Tables("CETESB_DOC"),CETESB_DOCDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCETESB_DOC) Is Nothing) Then
                Me.tableCETESB_DOC.InitVars
            End If
        End If
        Me.tableDAEE_DOC = CType(MyBase.Tables("DAEE_DOC"),DAEE_DOCDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDAEE_DOC) Is Nothing) Then
                Me.tableDAEE_DOC.InitVars
            End If
        End If
        Me.tableICMBIO_DOC = CType(MyBase.Tables("ICMBIO_DOC"),ICMBIO_DOCDataTable)
        If (initTable = true) Then
            If (Not (Me.tableICMBIO_DOC) Is Nothing) Then
                Me.tableICMBIO_DOC.InitVars
            End If
        End If
        Me.tablePETROBRAS_DOC = CType(MyBase.Tables("PETROBRAS_DOC"),PETROBRAS_DOCDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePETROBRAS_DOC) Is Nothing) Then
                Me.tablePETROBRAS_DOC.InitVars
            End If
        End If
        Me.tablePREFEITURA_DOC = CType(MyBase.Tables("PREFEITURA_DOC"),PREFEITURA_DOCDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePREFEITURA_DOC) Is Nothing) Then
                Me.tablePREFEITURA_DOC.InitVars
            End If
        End If
        Me.tableCETESB_NOTA = CType(MyBase.Tables("CETESB_NOTA"),CETESB_NOTADataTable)
        If (initTable = true) Then
            If (Not (Me.tableCETESB_NOTA) Is Nothing) Then
                Me.tableCETESB_NOTA.InitVars
            End If
        End If
        Me.tableDAEE_NOTA = CType(MyBase.Tables("DAEE_NOTA"),DAEE_NOTADataTable)
        If (initTable = true) Then
            If (Not (Me.tableDAEE_NOTA) Is Nothing) Then
                Me.tableDAEE_NOTA.InitVars
            End If
        End If
        Me.tableICMBIO_NOTA = CType(MyBase.Tables("ICMBIO_NOTA"),ICMBIO_NOTADataTable)
        If (initTable = true) Then
            If (Not (Me.tableICMBIO_NOTA) Is Nothing) Then
                Me.tableICMBIO_NOTA.InitVars
            End If
        End If
        Me.tablePETROBRAS_NOTA = CType(MyBase.Tables("PETROBRAS_NOTA"),PETROBRAS_NOTADataTable)
        If (initTable = true) Then
            If (Not (Me.tablePETROBRAS_NOTA) Is Nothing) Then
                Me.tablePETROBRAS_NOTA.InitVars
            End If
        End If
        Me.tablePREFEITURA_NOTA = CType(MyBase.Tables("PREFEITURA_NOTA"),PREFEITURA_NOTADataTable)
        If (initTable = true) Then
            If (Not (Me.tablePREFEITURA_NOTA) Is Nothing) Then
                Me.tablePREFEITURA_NOTA.InitVars
            End If
        End If
        Me.tableTABELA_DOC = CType(MyBase.Tables("TABELA_DOC"),TABELA_DOCDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTABELA_DOC) Is Nothing) Then
                Me.tableTABELA_DOC.InitVars
            End If
        End If
        Me.tableTabelaFiltro = CType(MyBase.Tables("TabelaFiltro"),TabelaFiltroDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTabelaFiltro) Is Nothing) Then
                Me.tableTabelaFiltro.InitVars
            End If
        End If
        Me.tableGRAFICO_DOC = CType(MyBase.Tables("GRAFICO_DOC"),GRAFICO_DOCDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGRAFICO_DOC) Is Nothing) Then
                Me.tableGRAFICO_DOC.InitVars
            End If
        End If
        Me.tableTABELA_PROC = CType(MyBase.Tables("TABELA_PROC"),TABELA_PROCDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTABELA_PROC) Is Nothing) Then
                Me.tableTABELA_PROC.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "Report"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Report.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableGERAL_PROCESSO = New GERAL_PROCESSODataTable
        MyBase.Tables.Add(Me.tableGERAL_PROCESSO)
        Me.tableDNPM_ASSOCIADOS = New DNPM_ASSOCIADOSDataTable
        MyBase.Tables.Add(Me.tableDNPM_ASSOCIADOS)
        Me.tableDNPM_CONDICAO = New DNPM_CONDICAODataTable
        MyBase.Tables.Add(Me.tableDNPM_CONDICAO)
        Me.tableINFO_DAEE = New INFO_DAEEDataTable
        MyBase.Tables.Add(Me.tableINFO_DAEE)
        Me.tableDNPM_MUNICIPIO = New DNPM_MUNICIPIODataTable
        MyBase.Tables.Add(Me.tableDNPM_MUNICIPIO)
        Me.tableCETESB_GERAL = New CETESB_GERALDataTable
        MyBase.Tables.Add(Me.tableCETESB_GERAL)
        Me.tableINFO_ICMBIO = New INFO_ICMBIODataTable
        MyBase.Tables.Add(Me.tableINFO_ICMBIO)
        Me.tableINFO_PETROBRAS = New INFO_PETROBRASDataTable
        MyBase.Tables.Add(Me.tableINFO_PETROBRAS)
        Me.tableINFO_PREFEITURA = New INFO_PREFEITURADataTable
        MyBase.Tables.Add(Me.tableINFO_PREFEITURA)
        Me.tableGERAL_EVENTOS = New GERAL_EVENTOSDataTable
        MyBase.Tables.Add(Me.tableGERAL_EVENTOS)
        Me.tableCETESB_MPRIMA_PRODUTO = New CETESB_MPRIMA_PRODUTODataTable
        MyBase.Tables.Add(Me.tableCETESB_MPRIMA_PRODUTO)
        Me.tableDNPM_SUBSTANCIA = New DNPM_SUBSTANCIADataTable
        MyBase.Tables.Add(Me.tableDNPM_SUBSTANCIA)
        Me.tableDNPM_TITULO = New DNPM_TITULODataTable
        MyBase.Tables.Add(Me.tableDNPM_TITULO)
        Me.tableDAEE_TITULO = New DAEE_TITULODataTable
        MyBase.Tables.Add(Me.tableDAEE_TITULO)
        Me.tableICMBIO_TITULO = New ICMBIO_TITULODataTable
        MyBase.Tables.Add(Me.tableICMBIO_TITULO)
        Me.tablePETROBRAS_TITULO = New PETROBRAS_TITULODataTable
        MyBase.Tables.Add(Me.tablePETROBRAS_TITULO)
        Me.tablePREFEITURA_TITULO = New PREFEITURA_TITULODataTable
        MyBase.Tables.Add(Me.tablePREFEITURA_TITULO)
        Me.tableCETESB_SD = New CETESB_SDDataTable
        MyBase.Tables.Add(Me.tableCETESB_SD)
        Me.tableDNPM_DOC = New DNPM_DOCDataTable
        MyBase.Tables.Add(Me.tableDNPM_DOC)
        Me.tableCETESB_DOC = New CETESB_DOCDataTable
        MyBase.Tables.Add(Me.tableCETESB_DOC)
        Me.tableDAEE_DOC = New DAEE_DOCDataTable
        MyBase.Tables.Add(Me.tableDAEE_DOC)
        Me.tableICMBIO_DOC = New ICMBIO_DOCDataTable
        MyBase.Tables.Add(Me.tableICMBIO_DOC)
        Me.tablePETROBRAS_DOC = New PETROBRAS_DOCDataTable
        MyBase.Tables.Add(Me.tablePETROBRAS_DOC)
        Me.tablePREFEITURA_DOC = New PREFEITURA_DOCDataTable
        MyBase.Tables.Add(Me.tablePREFEITURA_DOC)
        Me.tableCETESB_NOTA = New CETESB_NOTADataTable
        MyBase.Tables.Add(Me.tableCETESB_NOTA)
        Me.tableDAEE_NOTA = New DAEE_NOTADataTable
        MyBase.Tables.Add(Me.tableDAEE_NOTA)
        Me.tableICMBIO_NOTA = New ICMBIO_NOTADataTable
        MyBase.Tables.Add(Me.tableICMBIO_NOTA)
        Me.tablePETROBRAS_NOTA = New PETROBRAS_NOTADataTable
        MyBase.Tables.Add(Me.tablePETROBRAS_NOTA)
        Me.tablePREFEITURA_NOTA = New PREFEITURA_NOTADataTable
        MyBase.Tables.Add(Me.tablePREFEITURA_NOTA)
        Me.tableTABELA_DOC = New TABELA_DOCDataTable
        MyBase.Tables.Add(Me.tableTABELA_DOC)
        Me.tableTabelaFiltro = New TabelaFiltroDataTable
        MyBase.Tables.Add(Me.tableTabelaFiltro)
        Me.tableGRAFICO_DOC = New GRAFICO_DOCDataTable
        MyBase.Tables.Add(Me.tableGRAFICO_DOC)
        Me.tableTABELA_PROC = New TABELA_PROCDataTable
        MyBase.Tables.Add(Me.tableTABELA_PROC)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeGERAL_PROCESSO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDNPM_ASSOCIADOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDNPM_CONDICAO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeINFO_DAEE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDNPM_MUNICIPIO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCETESB_GERAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeINFO_ICMBIO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeINFO_PETROBRAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeINFO_PREFEITURA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeGERAL_EVENTOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCETESB_MPRIMA_PRODUTO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDNPM_SUBSTANCIA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDNPM_TITULO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDAEE_TITULO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeICMBIO_TITULO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePETROBRAS_TITULO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePREFEITURA_TITULO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCETESB_SD() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDNPM_DOC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCETESB_DOC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDAEE_DOC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeICMBIO_DOC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePETROBRAS_DOC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePREFEITURA_DOC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCETESB_NOTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDAEE_NOTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeICMBIO_NOTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePETROBRAS_NOTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePREFEITURA_NOTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTABELA_DOC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTabelaFiltro() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeGRAFICO_DOC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTABELA_PROC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As Report = New Report
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub GERAL_PROCESSORowChangeEventHandler(ByVal sender As Object, ByVal e As GERAL_PROCESSORowChangeEvent)
    
    Public Delegate Sub DNPM_ASSOCIADOSRowChangeEventHandler(ByVal sender As Object, ByVal e As DNPM_ASSOCIADOSRowChangeEvent)
    
    Public Delegate Sub DNPM_CONDICAORowChangeEventHandler(ByVal sender As Object, ByVal e As DNPM_CONDICAORowChangeEvent)
    
    Public Delegate Sub INFO_DAEERowChangeEventHandler(ByVal sender As Object, ByVal e As INFO_DAEERowChangeEvent)
    
    Public Delegate Sub DNPM_MUNICIPIORowChangeEventHandler(ByVal sender As Object, ByVal e As DNPM_MUNICIPIORowChangeEvent)
    
    Public Delegate Sub CETESB_GERALRowChangeEventHandler(ByVal sender As Object, ByVal e As CETESB_GERALRowChangeEvent)
    
    Public Delegate Sub INFO_ICMBIORowChangeEventHandler(ByVal sender As Object, ByVal e As INFO_ICMBIORowChangeEvent)
    
    Public Delegate Sub INFO_PETROBRASRowChangeEventHandler(ByVal sender As Object, ByVal e As INFO_PETROBRASRowChangeEvent)
    
    Public Delegate Sub INFO_PREFEITURARowChangeEventHandler(ByVal sender As Object, ByVal e As INFO_PREFEITURARowChangeEvent)
    
    Public Delegate Sub GERAL_EVENTOSRowChangeEventHandler(ByVal sender As Object, ByVal e As GERAL_EVENTOSRowChangeEvent)
    
    Public Delegate Sub CETESB_MPRIMA_PRODUTORowChangeEventHandler(ByVal sender As Object, ByVal e As CETESB_MPRIMA_PRODUTORowChangeEvent)
    
    Public Delegate Sub DNPM_SUBSTANCIARowChangeEventHandler(ByVal sender As Object, ByVal e As DNPM_SUBSTANCIARowChangeEvent)
    
    Public Delegate Sub DNPM_TITULORowChangeEventHandler(ByVal sender As Object, ByVal e As DNPM_TITULORowChangeEvent)
    
    Public Delegate Sub DAEE_TITULORowChangeEventHandler(ByVal sender As Object, ByVal e As DAEE_TITULORowChangeEvent)
    
    Public Delegate Sub ICMBIO_TITULORowChangeEventHandler(ByVal sender As Object, ByVal e As ICMBIO_TITULORowChangeEvent)
    
    Public Delegate Sub PETROBRAS_TITULORowChangeEventHandler(ByVal sender As Object, ByVal e As PETROBRAS_TITULORowChangeEvent)
    
    Public Delegate Sub PREFEITURA_TITULORowChangeEventHandler(ByVal sender As Object, ByVal e As PREFEITURA_TITULORowChangeEvent)
    
    Public Delegate Sub CETESB_SDRowChangeEventHandler(ByVal sender As Object, ByVal e As CETESB_SDRowChangeEvent)
    
    Public Delegate Sub DNPM_DOCRowChangeEventHandler(ByVal sender As Object, ByVal e As DNPM_DOCRowChangeEvent)
    
    Public Delegate Sub CETESB_DOCRowChangeEventHandler(ByVal sender As Object, ByVal e As CETESB_DOCRowChangeEvent)
    
    Public Delegate Sub DAEE_DOCRowChangeEventHandler(ByVal sender As Object, ByVal e As DAEE_DOCRowChangeEvent)
    
    Public Delegate Sub ICMBIO_DOCRowChangeEventHandler(ByVal sender As Object, ByVal e As ICMBIO_DOCRowChangeEvent)
    
    Public Delegate Sub PETROBRAS_DOCRowChangeEventHandler(ByVal sender As Object, ByVal e As PETROBRAS_DOCRowChangeEvent)
    
    Public Delegate Sub PREFEITURA_DOCRowChangeEventHandler(ByVal sender As Object, ByVal e As PREFEITURA_DOCRowChangeEvent)
    
    Public Delegate Sub CETESB_NOTARowChangeEventHandler(ByVal sender As Object, ByVal e As CETESB_NOTARowChangeEvent)
    
    Public Delegate Sub DAEE_NOTARowChangeEventHandler(ByVal sender As Object, ByVal e As DAEE_NOTARowChangeEvent)
    
    Public Delegate Sub ICMBIO_NOTARowChangeEventHandler(ByVal sender As Object, ByVal e As ICMBIO_NOTARowChangeEvent)
    
    Public Delegate Sub PETROBRAS_NOTARowChangeEventHandler(ByVal sender As Object, ByVal e As PETROBRAS_NOTARowChangeEvent)
    
    Public Delegate Sub PREFEITURA_NOTARowChangeEventHandler(ByVal sender As Object, ByVal e As PREFEITURA_NOTARowChangeEvent)
    
    Public Delegate Sub TABELA_DOCRowChangeEventHandler(ByVal sender As Object, ByVal e As TABELA_DOCRowChangeEvent)
    
    Public Delegate Sub TabelaFiltroRowChangeEventHandler(ByVal sender As Object, ByVal e As TabelaFiltroRowChangeEvent)
    
    Public Delegate Sub GRAFICO_DOCRowChangeEventHandler(ByVal sender As Object, ByVal e As GRAFICO_DOCRowChangeEvent)
    
    Public Delegate Sub TABELA_PROCRowChangeEventHandler(ByVal sender As Object, ByVal e As TABELA_PROCRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GERAL_PROCESSODataTable
        Inherits Global.System.Data.TypedTableBase(Of GERAL_PROCESSORow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnPROC_ds_titular As Global.System.Data.DataColumn
        
        Private columnPROC_vl_ano As Global.System.Data.DataColumn
        
        Private columnPROC_nm_processo As Global.System.Data.DataColumn
        
        Private columnPROC_id_processo As Global.System.Data.DataColumn
        
        Private columnFASE_cd_fase As Global.System.Data.DataColumn
        
        Private columnPROC_ds_ultimo_evento As Global.System.Data.DataColumn
        
        Private columnPROC_ds_substancia As Global.System.Data.DataColumn
        
        Private columnPROC_ds_area As Global.System.Data.DataColumn
        
        Private columnPROC_ds_uso As Global.System.Data.DataColumn
        
        Private columnPROC_ds_link As Global.System.Data.DataColumn
        
        Private columnUNFE_cd_unidade_federativa As Global.System.Data.DataColumn
        
        Private columnPROC_fl_tipo_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        Private columnFASE_nm_fase As Global.System.Data.DataColumn
        
        Private columnUNFE_nm_unidade_federativa As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GERAL_PROCESSO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_titularColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_titular
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_vl_anoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_vl_ano
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_nm_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_nm_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_id_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_id_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FASE_cd_faseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFASE_cd_fase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_ultimo_eventoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_ultimo_evento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_substanciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_substancia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_areaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_area
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_usoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_uso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_linkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_link
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UNFE_cd_unidade_federativaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNFE_cd_unidade_federativa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_fl_tipo_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_fl_tipo_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FASE_nm_faseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFASE_nm_fase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UNFE_nm_unidade_federativaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNFE_nm_unidade_federativa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GERAL_PROCESSORow
            Get
                Return CType(Me.Rows(index),GERAL_PROCESSORow)
            End Get
        End Property
        
        Public Event GERAL_PROCESSORowChanging As GERAL_PROCESSORowChangeEventHandler
        
        Public Event GERAL_PROCESSORowChanged As GERAL_PROCESSORowChangeEventHandler
        
        Public Event GERAL_PROCESSORowDeleting As GERAL_PROCESSORowChangeEventHandler
        
        Public Event GERAL_PROCESSORowDeleted As GERAL_PROCESSORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddGERAL_PROCESSORow(ByVal row As GERAL_PROCESSORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddGERAL_PROCESSORow( _
                    ByVal PROC_cd_processo As String,  _
                    ByVal PROC_ds_titular As String,  _
                    ByVal PROC_vl_ano As Integer,  _
                    ByVal PROC_nm_processo As String,  _
                    ByVal PROC_id_processo As String,  _
                    ByVal FASE_cd_fase As Integer,  _
                    ByVal PROC_ds_ultimo_evento As String,  _
                    ByVal PROC_ds_substancia As String,  _
                    ByVal PROC_ds_area As String,  _
                    ByVal PROC_ds_uso As String,  _
                    ByVal PROC_ds_link As String,  _
                    ByVal UNFE_cd_unidade_federativa As String,  _
                    ByVal PROC_fl_tipo_inclusao As String,  _
                    ByVal AUDT_dt_inclusao As Date,  _
                    ByVal AUDT_nm_usuario_inclusao As String,  _
                    ByVal AUDT_dt_alteracao As Date,  _
                    ByVal AUDT_nm_usuario_alteracao As String,  _
                    ByVal FASE_nm_fase As String,  _
                    ByVal UNFE_nm_unidade_federativa As String) As GERAL_PROCESSORow
            Dim rowGERAL_PROCESSORow As GERAL_PROCESSORow = CType(Me.NewRow,GERAL_PROCESSORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, PROC_ds_titular, PROC_vl_ano, PROC_nm_processo, PROC_id_processo, FASE_cd_fase, PROC_ds_ultimo_evento, PROC_ds_substancia, PROC_ds_area, PROC_ds_uso, PROC_ds_link, UNFE_cd_unidade_federativa, PROC_fl_tipo_inclusao, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao, FASE_nm_fase, UNFE_nm_unidade_federativa}
            rowGERAL_PROCESSORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGERAL_PROCESSORow)
            Return rowGERAL_PROCESSORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As GERAL_PROCESSORow
            Return CType(Me.Rows.Find(New Object() {id}),GERAL_PROCESSORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GERAL_PROCESSODataTable = CType(MyBase.Clone,GERAL_PROCESSODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GERAL_PROCESSODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnPROC_ds_titular = MyBase.Columns("PROC_ds_titular")
            Me.columnPROC_vl_ano = MyBase.Columns("PROC_vl_ano")
            Me.columnPROC_nm_processo = MyBase.Columns("PROC_nm_processo")
            Me.columnPROC_id_processo = MyBase.Columns("PROC_id_processo")
            Me.columnFASE_cd_fase = MyBase.Columns("FASE_cd_fase")
            Me.columnPROC_ds_ultimo_evento = MyBase.Columns("PROC_ds_ultimo_evento")
            Me.columnPROC_ds_substancia = MyBase.Columns("PROC_ds_substancia")
            Me.columnPROC_ds_area = MyBase.Columns("PROC_ds_area")
            Me.columnPROC_ds_uso = MyBase.Columns("PROC_ds_uso")
            Me.columnPROC_ds_link = MyBase.Columns("PROC_ds_link")
            Me.columnUNFE_cd_unidade_federativa = MyBase.Columns("UNFE_cd_unidade_federativa")
            Me.columnPROC_fl_tipo_inclusao = MyBase.Columns("PROC_fl_tipo_inclusao")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
            Me.columnFASE_nm_fase = MyBase.Columns("FASE_nm_fase")
            Me.columnUNFE_nm_unidade_federativa = MyBase.Columns("UNFE_nm_unidade_federativa")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnPROC_ds_titular = New Global.System.Data.DataColumn("PROC_ds_titular", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_titular)
            Me.columnPROC_vl_ano = New Global.System.Data.DataColumn("PROC_vl_ano", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_vl_ano)
            Me.columnPROC_nm_processo = New Global.System.Data.DataColumn("PROC_nm_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_nm_processo)
            Me.columnPROC_id_processo = New Global.System.Data.DataColumn("PROC_id_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_id_processo)
            Me.columnFASE_cd_fase = New Global.System.Data.DataColumn("FASE_cd_fase", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFASE_cd_fase)
            Me.columnPROC_ds_ultimo_evento = New Global.System.Data.DataColumn("PROC_ds_ultimo_evento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_ultimo_evento)
            Me.columnPROC_ds_substancia = New Global.System.Data.DataColumn("PROC_ds_substancia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_substancia)
            Me.columnPROC_ds_area = New Global.System.Data.DataColumn("PROC_ds_area", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_area)
            Me.columnPROC_ds_uso = New Global.System.Data.DataColumn("PROC_ds_uso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_uso)
            Me.columnPROC_ds_link = New Global.System.Data.DataColumn("PROC_ds_link", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_link)
            Me.columnUNFE_cd_unidade_federativa = New Global.System.Data.DataColumn("UNFE_cd_unidade_federativa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNFE_cd_unidade_federativa)
            Me.columnPROC_fl_tipo_inclusao = New Global.System.Data.DataColumn("PROC_fl_tipo_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_fl_tipo_inclusao)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.columnFASE_nm_fase = New Global.System.Data.DataColumn("FASE_nm_fase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFASE_nm_fase)
            Me.columnUNFE_nm_unidade_federativa = New Global.System.Data.DataColumn("UNFE_nm_unidade_federativa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNFE_nm_unidade_federativa)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnPROC_ds_titular.AllowDBNull = false
            Me.columnPROC_ds_titular.MaxLength = 300
            Me.columnPROC_nm_processo.MaxLength = 50
            Me.columnPROC_id_processo.MaxLength = 300
            Me.columnPROC_ds_ultimo_evento.MaxLength = 3000
            Me.columnPROC_ds_substancia.MaxLength = 100
            Me.columnPROC_ds_area.MaxLength = 30
            Me.columnPROC_ds_uso.MaxLength = 200
            Me.columnPROC_ds_link.MaxLength = 150
            Me.columnUNFE_cd_unidade_federativa.MaxLength = 2
            Me.columnPROC_fl_tipo_inclusao.AllowDBNull = false
            Me.columnPROC_fl_tipo_inclusao.MaxLength = 1
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
            Me.columnFASE_nm_fase.AllowDBNull = false
            Me.columnFASE_nm_fase.MaxLength = 100
            Me.columnUNFE_nm_unidade_federativa.AllowDBNull = false
            Me.columnUNFE_nm_unidade_federativa.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewGERAL_PROCESSORow() As GERAL_PROCESSORow
            Return CType(Me.NewRow,GERAL_PROCESSORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GERAL_PROCESSORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GERAL_PROCESSORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GERAL_PROCESSORowChangedEvent) Is Nothing) Then
                RaiseEvent GERAL_PROCESSORowChanged(Me, New GERAL_PROCESSORowChangeEvent(CType(e.Row,GERAL_PROCESSORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GERAL_PROCESSORowChangingEvent) Is Nothing) Then
                RaiseEvent GERAL_PROCESSORowChanging(Me, New GERAL_PROCESSORowChangeEvent(CType(e.Row,GERAL_PROCESSORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GERAL_PROCESSORowDeletedEvent) Is Nothing) Then
                RaiseEvent GERAL_PROCESSORowDeleted(Me, New GERAL_PROCESSORowChangeEvent(CType(e.Row,GERAL_PROCESSORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GERAL_PROCESSORowDeletingEvent) Is Nothing) Then
                RaiseEvent GERAL_PROCESSORowDeleting(Me, New GERAL_PROCESSORowChangeEvent(CType(e.Row,GERAL_PROCESSORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveGERAL_PROCESSORow(ByVal row As GERAL_PROCESSORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GERAL_PROCESSODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DNPM_ASSOCIADOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of DNPM_ASSOCIADOSRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnPASO_cd_processo As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DNPM_ASSOCIADOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PASO_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASO_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DNPM_ASSOCIADOSRow
            Get
                Return CType(Me.Rows(index),DNPM_ASSOCIADOSRow)
            End Get
        End Property
        
        Public Event DNPM_ASSOCIADOSRowChanging As DNPM_ASSOCIADOSRowChangeEventHandler
        
        Public Event DNPM_ASSOCIADOSRowChanged As DNPM_ASSOCIADOSRowChangeEventHandler
        
        Public Event DNPM_ASSOCIADOSRowDeleting As DNPM_ASSOCIADOSRowChangeEventHandler
        
        Public Event DNPM_ASSOCIADOSRowDeleted As DNPM_ASSOCIADOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDNPM_ASSOCIADOSRow(ByVal row As DNPM_ASSOCIADOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDNPM_ASSOCIADOSRow(ByVal PROC_cd_processo As String, ByVal PASO_cd_processo As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As DNPM_ASSOCIADOSRow
            Dim rowDNPM_ASSOCIADOSRow As DNPM_ASSOCIADOSRow = CType(Me.NewRow,DNPM_ASSOCIADOSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, PASO_cd_processo, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowDNPM_ASSOCIADOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDNPM_ASSOCIADOSRow)
            Return rowDNPM_ASSOCIADOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As DNPM_ASSOCIADOSRow
            Return CType(Me.Rows.Find(New Object() {id}),DNPM_ASSOCIADOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DNPM_ASSOCIADOSDataTable = CType(MyBase.Clone,DNPM_ASSOCIADOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DNPM_ASSOCIADOSDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnPASO_cd_processo = MyBase.Columns("PASO_cd_processo")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnPASO_cd_processo = New Global.System.Data.DataColumn("PASO_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASO_cd_processo)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnPASO_cd_processo.AllowDBNull = false
            Me.columnPASO_cd_processo.MaxLength = 50
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDNPM_ASSOCIADOSRow() As DNPM_ASSOCIADOSRow
            Return CType(Me.NewRow,DNPM_ASSOCIADOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DNPM_ASSOCIADOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DNPM_ASSOCIADOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DNPM_ASSOCIADOSRowChangedEvent) Is Nothing) Then
                RaiseEvent DNPM_ASSOCIADOSRowChanged(Me, New DNPM_ASSOCIADOSRowChangeEvent(CType(e.Row,DNPM_ASSOCIADOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DNPM_ASSOCIADOSRowChangingEvent) Is Nothing) Then
                RaiseEvent DNPM_ASSOCIADOSRowChanging(Me, New DNPM_ASSOCIADOSRowChangeEvent(CType(e.Row,DNPM_ASSOCIADOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DNPM_ASSOCIADOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent DNPM_ASSOCIADOSRowDeleted(Me, New DNPM_ASSOCIADOSRowChangeEvent(CType(e.Row,DNPM_ASSOCIADOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DNPM_ASSOCIADOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent DNPM_ASSOCIADOSRowDeleting(Me, New DNPM_ASSOCIADOSRowChangeEvent(CType(e.Row,DNPM_ASSOCIADOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDNPM_ASSOCIADOSRow(ByVal row As DNPM_ASSOCIADOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DNPM_ASSOCIADOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DNPM_CONDICAODataTable
        Inherits Global.System.Data.TypedTableBase(Of DNPM_CONDICAORow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnPCON_cd_condicao As Global.System.Data.DataColumn
        
        Private columnCOND_nm_condicao As Global.System.Data.DataColumn
        
        Private columnSCON_ds_situacao_condicao As Global.System.Data.DataColumn
        
        Private columnPCON_ds_condicao As Global.System.Data.DataColumn
        
        Private columnPCON_dt_ini As Global.System.Data.DataColumn
        
        Private columnPCON_dt_fim As Global.System.Data.DataColumn
        
        Private columnPCON_ds_nome_documento As Global.System.Data.DataColumn
        
        Private columnPCON_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPCON_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPCON_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DNPM_CONDICAO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PCON_cd_condicaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCON_cd_condicao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COND_nm_condicaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOND_nm_condicao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCON_ds_situacao_condicaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCON_ds_situacao_condicao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PCON_ds_condicaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCON_ds_condicao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PCON_dt_iniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCON_dt_ini
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PCON_dt_fimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCON_dt_fim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PCON_ds_nome_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCON_ds_nome_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PCON_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCON_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PCON_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCON_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PCON_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCON_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DNPM_CONDICAORow
            Get
                Return CType(Me.Rows(index),DNPM_CONDICAORow)
            End Get
        End Property
        
        Public Event DNPM_CONDICAORowChanging As DNPM_CONDICAORowChangeEventHandler
        
        Public Event DNPM_CONDICAORowChanged As DNPM_CONDICAORowChangeEventHandler
        
        Public Event DNPM_CONDICAORowDeleting As DNPM_CONDICAORowChangeEventHandler
        
        Public Event DNPM_CONDICAORowDeleted As DNPM_CONDICAORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDNPM_CONDICAORow(ByVal row As DNPM_CONDICAORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDNPM_CONDICAORow(ByVal PROC_cd_processo As String, ByVal PCON_cd_condicao As Integer, ByVal COND_nm_condicao As String, ByVal SCON_ds_situacao_condicao As String, ByVal PCON_ds_condicao As String, ByVal PCON_dt_ini As Date, ByVal PCON_dt_fim As Date, ByVal PCON_ds_nome_documento As String, ByVal PCON_ds_local_documento As String, ByVal PCON_ds_rede_documento As String, ByVal PCON_ds_path_documento As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As DNPM_CONDICAORow
            Dim rowDNPM_CONDICAORow As DNPM_CONDICAORow = CType(Me.NewRow,DNPM_CONDICAORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, PCON_cd_condicao, COND_nm_condicao, SCON_ds_situacao_condicao, PCON_ds_condicao, PCON_dt_ini, PCON_dt_fim, PCON_ds_nome_documento, PCON_ds_local_documento, PCON_ds_rede_documento, PCON_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowDNPM_CONDICAORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDNPM_CONDICAORow)
            Return rowDNPM_CONDICAORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As DNPM_CONDICAORow
            Return CType(Me.Rows.Find(New Object() {id}),DNPM_CONDICAORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DNPM_CONDICAODataTable = CType(MyBase.Clone,DNPM_CONDICAODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DNPM_CONDICAODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnPCON_cd_condicao = MyBase.Columns("PCON_cd_condicao")
            Me.columnCOND_nm_condicao = MyBase.Columns("COND_nm_condicao")
            Me.columnSCON_ds_situacao_condicao = MyBase.Columns("SCON_ds_situacao_condicao")
            Me.columnPCON_ds_condicao = MyBase.Columns("PCON_ds_condicao")
            Me.columnPCON_dt_ini = MyBase.Columns("PCON_dt_ini")
            Me.columnPCON_dt_fim = MyBase.Columns("PCON_dt_fim")
            Me.columnPCON_ds_nome_documento = MyBase.Columns("PCON_ds_nome_documento")
            Me.columnPCON_ds_local_documento = MyBase.Columns("PCON_ds_local_documento")
            Me.columnPCON_ds_rede_documento = MyBase.Columns("PCON_ds_rede_documento")
            Me.columnPCON_ds_path_documento = MyBase.Columns("PCON_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnPCON_cd_condicao = New Global.System.Data.DataColumn("PCON_cd_condicao", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCON_cd_condicao)
            Me.columnCOND_nm_condicao = New Global.System.Data.DataColumn("COND_nm_condicao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOND_nm_condicao)
            Me.columnSCON_ds_situacao_condicao = New Global.System.Data.DataColumn("SCON_ds_situacao_condicao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCON_ds_situacao_condicao)
            Me.columnPCON_ds_condicao = New Global.System.Data.DataColumn("PCON_ds_condicao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCON_ds_condicao)
            Me.columnPCON_dt_ini = New Global.System.Data.DataColumn("PCON_dt_ini", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCON_dt_ini)
            Me.columnPCON_dt_fim = New Global.System.Data.DataColumn("PCON_dt_fim", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCON_dt_fim)
            Me.columnPCON_ds_nome_documento = New Global.System.Data.DataColumn("PCON_ds_nome_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCON_ds_nome_documento)
            Me.columnPCON_ds_local_documento = New Global.System.Data.DataColumn("PCON_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCON_ds_local_documento)
            Me.columnPCON_ds_rede_documento = New Global.System.Data.DataColumn("PCON_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCON_ds_rede_documento)
            Me.columnPCON_ds_path_documento = New Global.System.Data.DataColumn("PCON_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCON_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnPCON_cd_condicao.AllowDBNull = false
            Me.columnCOND_nm_condicao.AllowDBNull = false
            Me.columnCOND_nm_condicao.MaxLength = 500
            Me.columnSCON_ds_situacao_condicao.MaxLength = 100
            Me.columnPCON_ds_condicao.MaxLength = 500
            Me.columnPCON_ds_nome_documento.MaxLength = 100
            Me.columnPCON_ds_local_documento.MaxLength = 500
            Me.columnPCON_ds_rede_documento.MaxLength = 500
            Me.columnPCON_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDNPM_CONDICAORow() As DNPM_CONDICAORow
            Return CType(Me.NewRow,DNPM_CONDICAORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DNPM_CONDICAORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DNPM_CONDICAORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DNPM_CONDICAORowChangedEvent) Is Nothing) Then
                RaiseEvent DNPM_CONDICAORowChanged(Me, New DNPM_CONDICAORowChangeEvent(CType(e.Row,DNPM_CONDICAORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DNPM_CONDICAORowChangingEvent) Is Nothing) Then
                RaiseEvent DNPM_CONDICAORowChanging(Me, New DNPM_CONDICAORowChangeEvent(CType(e.Row,DNPM_CONDICAORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DNPM_CONDICAORowDeletedEvent) Is Nothing) Then
                RaiseEvent DNPM_CONDICAORowDeleted(Me, New DNPM_CONDICAORowChangeEvent(CType(e.Row,DNPM_CONDICAORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DNPM_CONDICAORowDeletingEvent) Is Nothing) Then
                RaiseEvent DNPM_CONDICAORowDeleting(Me, New DNPM_CONDICAORowChangeEvent(CType(e.Row,DNPM_CONDICAORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDNPM_CONDICAORow(ByVal row As DNPM_CONDICAORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DNPM_CONDICAODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INFO_DAEEDataTable
        Inherits Global.System.Data.TypedTableBase(Of INFO_DAEERow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPINF_cd_info As Global.System.Data.DataColumn
        
        Private columnPINF_ds_info As Global.System.Data.DataColumn
        
        Private columnTINF_nm_tipo_info As Global.System.Data.DataColumn
        
        Private columnSINF_ds_situacao_info As Global.System.Data.DataColumn
        
        Private columnPINF_dt_ini As Global.System.Data.DataColumn
        
        Private columnPINF_dt_fim As Global.System.Data.DataColumn
        
        Private columnPINF_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPINF_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPINF_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INFO_DAEE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_cd_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_cd_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TINF_nm_tipo_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTINF_nm_tipo_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SINF_ds_situacao_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSINF_ds_situacao_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_dt_iniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_dt_ini
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_dt_fimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_dt_fim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INFO_DAEERow
            Get
                Return CType(Me.Rows(index),INFO_DAEERow)
            End Get
        End Property
        
        Public Event INFO_DAEERowChanging As INFO_DAEERowChangeEventHandler
        
        Public Event INFO_DAEERowChanged As INFO_DAEERowChangeEventHandler
        
        Public Event INFO_DAEERowDeleting As INFO_DAEERowChangeEventHandler
        
        Public Event INFO_DAEERowDeleted As INFO_DAEERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddINFO_DAEERow(ByVal row As INFO_DAEERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddINFO_DAEERow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PINF_cd_info As Integer, ByVal PINF_ds_info As String, ByVal TINF_nm_tipo_info As String, ByVal SINF_ds_situacao_info As String, ByVal PINF_dt_ini As Date, ByVal PINF_dt_fim As Date, ByVal PINF_ds_local_documento As String, ByVal PINF_ds_rede_documento As String, ByVal PINF_ds_path_documento As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As INFO_DAEERow
            Dim rowINFO_DAEERow As INFO_DAEERow = CType(Me.NewRow,INFO_DAEERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PINF_cd_info, PINF_ds_info, TINF_nm_tipo_info, SINF_ds_situacao_info, PINF_dt_ini, PINF_dt_fim, PINF_ds_local_documento, PINF_ds_rede_documento, PINF_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowINFO_DAEERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINFO_DAEERow)
            Return rowINFO_DAEERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As INFO_DAEERow
            Return CType(Me.Rows.Find(New Object() {id}),INFO_DAEERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INFO_DAEEDataTable = CType(MyBase.Clone,INFO_DAEEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INFO_DAEEDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPINF_cd_info = MyBase.Columns("PINF_cd_info")
            Me.columnPINF_ds_info = MyBase.Columns("PINF_ds_info")
            Me.columnTINF_nm_tipo_info = MyBase.Columns("TINF_nm_tipo_info")
            Me.columnSINF_ds_situacao_info = MyBase.Columns("SINF_ds_situacao_info")
            Me.columnPINF_dt_ini = MyBase.Columns("PINF_dt_ini")
            Me.columnPINF_dt_fim = MyBase.Columns("PINF_dt_fim")
            Me.columnPINF_ds_local_documento = MyBase.Columns("PINF_ds_local_documento")
            Me.columnPINF_ds_rede_documento = MyBase.Columns("PINF_ds_rede_documento")
            Me.columnPINF_ds_path_documento = MyBase.Columns("PINF_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPINF_cd_info = New Global.System.Data.DataColumn("PINF_cd_info", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_cd_info)
            Me.columnPINF_ds_info = New Global.System.Data.DataColumn("PINF_ds_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_info)
            Me.columnTINF_nm_tipo_info = New Global.System.Data.DataColumn("TINF_nm_tipo_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTINF_nm_tipo_info)
            Me.columnSINF_ds_situacao_info = New Global.System.Data.DataColumn("SINF_ds_situacao_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSINF_ds_situacao_info)
            Me.columnPINF_dt_ini = New Global.System.Data.DataColumn("PINF_dt_ini", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_dt_ini)
            Me.columnPINF_dt_fim = New Global.System.Data.DataColumn("PINF_dt_fim", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_dt_fim)
            Me.columnPINF_ds_local_documento = New Global.System.Data.DataColumn("PINF_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_local_documento)
            Me.columnPINF_ds_rede_documento = New Global.System.Data.DataColumn("PINF_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_rede_documento)
            Me.columnPINF_ds_path_documento = New Global.System.Data.DataColumn("PINF_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPINF_cd_info.AllowDBNull = false
            Me.columnPINF_ds_info.MaxLength = 500
            Me.columnTINF_nm_tipo_info.MaxLength = 100
            Me.columnSINF_ds_situacao_info.MaxLength = 100
            Me.columnPINF_ds_local_documento.AllowDBNull = false
            Me.columnPINF_ds_local_documento.MaxLength = 500
            Me.columnPINF_ds_rede_documento.AllowDBNull = false
            Me.columnPINF_ds_rede_documento.MaxLength = 500
            Me.columnPINF_ds_path_documento.AllowDBNull = false
            Me.columnPINF_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewINFO_DAEERow() As INFO_DAEERow
            Return CType(Me.NewRow,INFO_DAEERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INFO_DAEERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INFO_DAEERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INFO_DAEERowChangedEvent) Is Nothing) Then
                RaiseEvent INFO_DAEERowChanged(Me, New INFO_DAEERowChangeEvent(CType(e.Row,INFO_DAEERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INFO_DAEERowChangingEvent) Is Nothing) Then
                RaiseEvent INFO_DAEERowChanging(Me, New INFO_DAEERowChangeEvent(CType(e.Row,INFO_DAEERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INFO_DAEERowDeletedEvent) Is Nothing) Then
                RaiseEvent INFO_DAEERowDeleted(Me, New INFO_DAEERowChangeEvent(CType(e.Row,INFO_DAEERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INFO_DAEERowDeletingEvent) Is Nothing) Then
                RaiseEvent INFO_DAEERowDeleting(Me, New INFO_DAEERowChangeEvent(CType(e.Row,INFO_DAEERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveINFO_DAEERow(ByVal row As INFO_DAEERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INFO_DAEEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DNPM_MUNICIPIODataTable
        Inherits Global.System.Data.TypedTableBase(Of DNPM_MUNICIPIORow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnMUNI_nm_municipio As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DNPM_MUNICIPIO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MUNI_nm_municipioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNI_nm_municipio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DNPM_MUNICIPIORow
            Get
                Return CType(Me.Rows(index),DNPM_MUNICIPIORow)
            End Get
        End Property
        
        Public Event DNPM_MUNICIPIORowChanging As DNPM_MUNICIPIORowChangeEventHandler
        
        Public Event DNPM_MUNICIPIORowChanged As DNPM_MUNICIPIORowChangeEventHandler
        
        Public Event DNPM_MUNICIPIORowDeleting As DNPM_MUNICIPIORowChangeEventHandler
        
        Public Event DNPM_MUNICIPIORowDeleted As DNPM_MUNICIPIORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDNPM_MUNICIPIORow(ByVal row As DNPM_MUNICIPIORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDNPM_MUNICIPIORow(ByVal PROC_cd_processo As String, ByVal MUNI_nm_municipio As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As DNPM_MUNICIPIORow
            Dim rowDNPM_MUNICIPIORow As DNPM_MUNICIPIORow = CType(Me.NewRow,DNPM_MUNICIPIORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, MUNI_nm_municipio, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowDNPM_MUNICIPIORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDNPM_MUNICIPIORow)
            Return rowDNPM_MUNICIPIORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As DNPM_MUNICIPIORow
            Return CType(Me.Rows.Find(New Object() {id}),DNPM_MUNICIPIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DNPM_MUNICIPIODataTable = CType(MyBase.Clone,DNPM_MUNICIPIODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DNPM_MUNICIPIODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnMUNI_nm_municipio = MyBase.Columns("MUNI_nm_municipio")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnMUNI_nm_municipio = New Global.System.Data.DataColumn("MUNI_nm_municipio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNI_nm_municipio)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnMUNI_nm_municipio.AllowDBNull = false
            Me.columnMUNI_nm_municipio.MaxLength = 150
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDNPM_MUNICIPIORow() As DNPM_MUNICIPIORow
            Return CType(Me.NewRow,DNPM_MUNICIPIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DNPM_MUNICIPIORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DNPM_MUNICIPIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DNPM_MUNICIPIORowChangedEvent) Is Nothing) Then
                RaiseEvent DNPM_MUNICIPIORowChanged(Me, New DNPM_MUNICIPIORowChangeEvent(CType(e.Row,DNPM_MUNICIPIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DNPM_MUNICIPIORowChangingEvent) Is Nothing) Then
                RaiseEvent DNPM_MUNICIPIORowChanging(Me, New DNPM_MUNICIPIORowChangeEvent(CType(e.Row,DNPM_MUNICIPIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DNPM_MUNICIPIORowDeletedEvent) Is Nothing) Then
                RaiseEvent DNPM_MUNICIPIORowDeleted(Me, New DNPM_MUNICIPIORowChangeEvent(CType(e.Row,DNPM_MUNICIPIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DNPM_MUNICIPIORowDeletingEvent) Is Nothing) Then
                RaiseEvent DNPM_MUNICIPIORowDeleting(Me, New DNPM_MUNICIPIORowChangeEvent(CType(e.Row,DNPM_MUNICIPIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDNPM_MUNICIPIORow(ByVal row As DNPM_MUNICIPIORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DNPM_MUNICIPIODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CETESB_GERALDataTable
        Inherits Global.System.Data.TypedTableBase(Of CETESB_GERALRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPORG_nm_cadastro As Global.System.Data.DataColumn
        
        Private columnPORG_ds_atividade As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CETESB_GERAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PORG_nm_cadastroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORG_nm_cadastro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PORG_ds_atividadeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORG_ds_atividade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CETESB_GERALRow
            Get
                Return CType(Me.Rows(index),CETESB_GERALRow)
            End Get
        End Property
        
        Public Event CETESB_GERALRowChanging As CETESB_GERALRowChangeEventHandler
        
        Public Event CETESB_GERALRowChanged As CETESB_GERALRowChangeEventHandler
        
        Public Event CETESB_GERALRowDeleting As CETESB_GERALRowChangeEventHandler
        
        Public Event CETESB_GERALRowDeleted As CETESB_GERALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCETESB_GERALRow(ByVal row As CETESB_GERALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCETESB_GERALRow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PORG_nm_cadastro As String, ByVal PORG_ds_atividade As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As CETESB_GERALRow
            Dim rowCETESB_GERALRow As CETESB_GERALRow = CType(Me.NewRow,CETESB_GERALRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PORG_nm_cadastro, PORG_ds_atividade, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowCETESB_GERALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCETESB_GERALRow)
            Return rowCETESB_GERALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As CETESB_GERALRow
            Return CType(Me.Rows.Find(New Object() {id}),CETESB_GERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CETESB_GERALDataTable = CType(MyBase.Clone,CETESB_GERALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CETESB_GERALDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPORG_nm_cadastro = MyBase.Columns("PORG_nm_cadastro")
            Me.columnPORG_ds_atividade = MyBase.Columns("PORG_ds_atividade")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPORG_nm_cadastro = New Global.System.Data.DataColumn("PORG_nm_cadastro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORG_nm_cadastro)
            Me.columnPORG_ds_atividade = New Global.System.Data.DataColumn("PORG_ds_atividade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORG_ds_atividade)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPORG_nm_cadastro.MaxLength = 30
            Me.columnPORG_ds_atividade.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCETESB_GERALRow() As CETESB_GERALRow
            Return CType(Me.NewRow,CETESB_GERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CETESB_GERALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CETESB_GERALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CETESB_GERALRowChangedEvent) Is Nothing) Then
                RaiseEvent CETESB_GERALRowChanged(Me, New CETESB_GERALRowChangeEvent(CType(e.Row,CETESB_GERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CETESB_GERALRowChangingEvent) Is Nothing) Then
                RaiseEvent CETESB_GERALRowChanging(Me, New CETESB_GERALRowChangeEvent(CType(e.Row,CETESB_GERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CETESB_GERALRowDeletedEvent) Is Nothing) Then
                RaiseEvent CETESB_GERALRowDeleted(Me, New CETESB_GERALRowChangeEvent(CType(e.Row,CETESB_GERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CETESB_GERALRowDeletingEvent) Is Nothing) Then
                RaiseEvent CETESB_GERALRowDeleting(Me, New CETESB_GERALRowChangeEvent(CType(e.Row,CETESB_GERALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCETESB_GERALRow(ByVal row As CETESB_GERALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CETESB_GERALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INFO_ICMBIODataTable
        Inherits Global.System.Data.TypedTableBase(Of INFO_ICMBIORow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPINF_cd_info As Global.System.Data.DataColumn
        
        Private columnPINF_ds_info As Global.System.Data.DataColumn
        
        Private columnTINF_nm_tipo_info As Global.System.Data.DataColumn
        
        Private columnSINF_ds_situacao_info As Global.System.Data.DataColumn
        
        Private columnPINF_dt_ini As Global.System.Data.DataColumn
        
        Private columnPINF_dt_fim As Global.System.Data.DataColumn
        
        Private columnPINF_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPINF_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPINF_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INFO_ICMBIO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_cd_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_cd_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TINF_nm_tipo_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTINF_nm_tipo_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SINF_ds_situacao_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSINF_ds_situacao_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_dt_iniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_dt_ini
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_dt_fimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_dt_fim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INFO_ICMBIORow
            Get
                Return CType(Me.Rows(index),INFO_ICMBIORow)
            End Get
        End Property
        
        Public Event INFO_ICMBIORowChanging As INFO_ICMBIORowChangeEventHandler
        
        Public Event INFO_ICMBIORowChanged As INFO_ICMBIORowChangeEventHandler
        
        Public Event INFO_ICMBIORowDeleting As INFO_ICMBIORowChangeEventHandler
        
        Public Event INFO_ICMBIORowDeleted As INFO_ICMBIORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddINFO_ICMBIORow(ByVal row As INFO_ICMBIORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddINFO_ICMBIORow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PINF_cd_info As Integer, ByVal PINF_ds_info As String, ByVal TINF_nm_tipo_info As String, ByVal SINF_ds_situacao_info As String, ByVal PINF_dt_ini As Date, ByVal PINF_dt_fim As Date, ByVal PINF_ds_local_documento As String, ByVal PINF_ds_rede_documento As String, ByVal PINF_ds_path_documento As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As INFO_ICMBIORow
            Dim rowINFO_ICMBIORow As INFO_ICMBIORow = CType(Me.NewRow,INFO_ICMBIORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PINF_cd_info, PINF_ds_info, TINF_nm_tipo_info, SINF_ds_situacao_info, PINF_dt_ini, PINF_dt_fim, PINF_ds_local_documento, PINF_ds_rede_documento, PINF_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowINFO_ICMBIORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINFO_ICMBIORow)
            Return rowINFO_ICMBIORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As INFO_ICMBIORow
            Return CType(Me.Rows.Find(New Object() {id}),INFO_ICMBIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INFO_ICMBIODataTable = CType(MyBase.Clone,INFO_ICMBIODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INFO_ICMBIODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPINF_cd_info = MyBase.Columns("PINF_cd_info")
            Me.columnPINF_ds_info = MyBase.Columns("PINF_ds_info")
            Me.columnTINF_nm_tipo_info = MyBase.Columns("TINF_nm_tipo_info")
            Me.columnSINF_ds_situacao_info = MyBase.Columns("SINF_ds_situacao_info")
            Me.columnPINF_dt_ini = MyBase.Columns("PINF_dt_ini")
            Me.columnPINF_dt_fim = MyBase.Columns("PINF_dt_fim")
            Me.columnPINF_ds_local_documento = MyBase.Columns("PINF_ds_local_documento")
            Me.columnPINF_ds_rede_documento = MyBase.Columns("PINF_ds_rede_documento")
            Me.columnPINF_ds_path_documento = MyBase.Columns("PINF_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPINF_cd_info = New Global.System.Data.DataColumn("PINF_cd_info", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_cd_info)
            Me.columnPINF_ds_info = New Global.System.Data.DataColumn("PINF_ds_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_info)
            Me.columnTINF_nm_tipo_info = New Global.System.Data.DataColumn("TINF_nm_tipo_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTINF_nm_tipo_info)
            Me.columnSINF_ds_situacao_info = New Global.System.Data.DataColumn("SINF_ds_situacao_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSINF_ds_situacao_info)
            Me.columnPINF_dt_ini = New Global.System.Data.DataColumn("PINF_dt_ini", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_dt_ini)
            Me.columnPINF_dt_fim = New Global.System.Data.DataColumn("PINF_dt_fim", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_dt_fim)
            Me.columnPINF_ds_local_documento = New Global.System.Data.DataColumn("PINF_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_local_documento)
            Me.columnPINF_ds_rede_documento = New Global.System.Data.DataColumn("PINF_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_rede_documento)
            Me.columnPINF_ds_path_documento = New Global.System.Data.DataColumn("PINF_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPINF_cd_info.AllowDBNull = false
            Me.columnPINF_ds_info.MaxLength = 500
            Me.columnTINF_nm_tipo_info.MaxLength = 100
            Me.columnSINF_ds_situacao_info.MaxLength = 100
            Me.columnPINF_ds_local_documento.AllowDBNull = false
            Me.columnPINF_ds_local_documento.MaxLength = 500
            Me.columnPINF_ds_rede_documento.AllowDBNull = false
            Me.columnPINF_ds_rede_documento.MaxLength = 500
            Me.columnPINF_ds_path_documento.AllowDBNull = false
            Me.columnPINF_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewINFO_ICMBIORow() As INFO_ICMBIORow
            Return CType(Me.NewRow,INFO_ICMBIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INFO_ICMBIORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INFO_ICMBIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INFO_ICMBIORowChangedEvent) Is Nothing) Then
                RaiseEvent INFO_ICMBIORowChanged(Me, New INFO_ICMBIORowChangeEvent(CType(e.Row,INFO_ICMBIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INFO_ICMBIORowChangingEvent) Is Nothing) Then
                RaiseEvent INFO_ICMBIORowChanging(Me, New INFO_ICMBIORowChangeEvent(CType(e.Row,INFO_ICMBIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INFO_ICMBIORowDeletedEvent) Is Nothing) Then
                RaiseEvent INFO_ICMBIORowDeleted(Me, New INFO_ICMBIORowChangeEvent(CType(e.Row,INFO_ICMBIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INFO_ICMBIORowDeletingEvent) Is Nothing) Then
                RaiseEvent INFO_ICMBIORowDeleting(Me, New INFO_ICMBIORowChangeEvent(CType(e.Row,INFO_ICMBIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveINFO_ICMBIORow(ByVal row As INFO_ICMBIORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INFO_ICMBIODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INFO_PETROBRASDataTable
        Inherits Global.System.Data.TypedTableBase(Of INFO_PETROBRASRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPINF_cd_info As Global.System.Data.DataColumn
        
        Private columnPINF_ds_info As Global.System.Data.DataColumn
        
        Private columnTINF_nm_tipo_info As Global.System.Data.DataColumn
        
        Private columnSINF_ds_situacao_info As Global.System.Data.DataColumn
        
        Private columnPINF_dt_ini As Global.System.Data.DataColumn
        
        Private columnPINF_dt_fim As Global.System.Data.DataColumn
        
        Private columnPINF_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPINF_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPINF_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INFO_PETROBRAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_cd_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_cd_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TINF_nm_tipo_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTINF_nm_tipo_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SINF_ds_situacao_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSINF_ds_situacao_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_dt_iniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_dt_ini
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_dt_fimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_dt_fim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INFO_PETROBRASRow
            Get
                Return CType(Me.Rows(index),INFO_PETROBRASRow)
            End Get
        End Property
        
        Public Event INFO_PETROBRASRowChanging As INFO_PETROBRASRowChangeEventHandler
        
        Public Event INFO_PETROBRASRowChanged As INFO_PETROBRASRowChangeEventHandler
        
        Public Event INFO_PETROBRASRowDeleting As INFO_PETROBRASRowChangeEventHandler
        
        Public Event INFO_PETROBRASRowDeleted As INFO_PETROBRASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddINFO_PETROBRASRow(ByVal row As INFO_PETROBRASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddINFO_PETROBRASRow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PINF_cd_info As Integer, ByVal PINF_ds_info As String, ByVal TINF_nm_tipo_info As String, ByVal SINF_ds_situacao_info As String, ByVal PINF_dt_ini As Date, ByVal PINF_dt_fim As Date, ByVal PINF_ds_local_documento As String, ByVal PINF_ds_rede_documento As String, ByVal PINF_ds_path_documento As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As INFO_PETROBRASRow
            Dim rowINFO_PETROBRASRow As INFO_PETROBRASRow = CType(Me.NewRow,INFO_PETROBRASRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PINF_cd_info, PINF_ds_info, TINF_nm_tipo_info, SINF_ds_situacao_info, PINF_dt_ini, PINF_dt_fim, PINF_ds_local_documento, PINF_ds_rede_documento, PINF_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowINFO_PETROBRASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINFO_PETROBRASRow)
            Return rowINFO_PETROBRASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As INFO_PETROBRASRow
            Return CType(Me.Rows.Find(New Object() {id}),INFO_PETROBRASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INFO_PETROBRASDataTable = CType(MyBase.Clone,INFO_PETROBRASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INFO_PETROBRASDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPINF_cd_info = MyBase.Columns("PINF_cd_info")
            Me.columnPINF_ds_info = MyBase.Columns("PINF_ds_info")
            Me.columnTINF_nm_tipo_info = MyBase.Columns("TINF_nm_tipo_info")
            Me.columnSINF_ds_situacao_info = MyBase.Columns("SINF_ds_situacao_info")
            Me.columnPINF_dt_ini = MyBase.Columns("PINF_dt_ini")
            Me.columnPINF_dt_fim = MyBase.Columns("PINF_dt_fim")
            Me.columnPINF_ds_local_documento = MyBase.Columns("PINF_ds_local_documento")
            Me.columnPINF_ds_rede_documento = MyBase.Columns("PINF_ds_rede_documento")
            Me.columnPINF_ds_path_documento = MyBase.Columns("PINF_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPINF_cd_info = New Global.System.Data.DataColumn("PINF_cd_info", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_cd_info)
            Me.columnPINF_ds_info = New Global.System.Data.DataColumn("PINF_ds_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_info)
            Me.columnTINF_nm_tipo_info = New Global.System.Data.DataColumn("TINF_nm_tipo_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTINF_nm_tipo_info)
            Me.columnSINF_ds_situacao_info = New Global.System.Data.DataColumn("SINF_ds_situacao_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSINF_ds_situacao_info)
            Me.columnPINF_dt_ini = New Global.System.Data.DataColumn("PINF_dt_ini", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_dt_ini)
            Me.columnPINF_dt_fim = New Global.System.Data.DataColumn("PINF_dt_fim", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_dt_fim)
            Me.columnPINF_ds_local_documento = New Global.System.Data.DataColumn("PINF_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_local_documento)
            Me.columnPINF_ds_rede_documento = New Global.System.Data.DataColumn("PINF_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_rede_documento)
            Me.columnPINF_ds_path_documento = New Global.System.Data.DataColumn("PINF_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPINF_cd_info.AllowDBNull = false
            Me.columnPINF_ds_info.MaxLength = 500
            Me.columnTINF_nm_tipo_info.MaxLength = 100
            Me.columnSINF_ds_situacao_info.MaxLength = 100
            Me.columnPINF_ds_local_documento.AllowDBNull = false
            Me.columnPINF_ds_local_documento.MaxLength = 500
            Me.columnPINF_ds_rede_documento.AllowDBNull = false
            Me.columnPINF_ds_rede_documento.MaxLength = 500
            Me.columnPINF_ds_path_documento.AllowDBNull = false
            Me.columnPINF_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewINFO_PETROBRASRow() As INFO_PETROBRASRow
            Return CType(Me.NewRow,INFO_PETROBRASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INFO_PETROBRASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INFO_PETROBRASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INFO_PETROBRASRowChangedEvent) Is Nothing) Then
                RaiseEvent INFO_PETROBRASRowChanged(Me, New INFO_PETROBRASRowChangeEvent(CType(e.Row,INFO_PETROBRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INFO_PETROBRASRowChangingEvent) Is Nothing) Then
                RaiseEvent INFO_PETROBRASRowChanging(Me, New INFO_PETROBRASRowChangeEvent(CType(e.Row,INFO_PETROBRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INFO_PETROBRASRowDeletedEvent) Is Nothing) Then
                RaiseEvent INFO_PETROBRASRowDeleted(Me, New INFO_PETROBRASRowChangeEvent(CType(e.Row,INFO_PETROBRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INFO_PETROBRASRowDeletingEvent) Is Nothing) Then
                RaiseEvent INFO_PETROBRASRowDeleting(Me, New INFO_PETROBRASRowChangeEvent(CType(e.Row,INFO_PETROBRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveINFO_PETROBRASRow(ByVal row As INFO_PETROBRASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INFO_PETROBRASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INFO_PREFEITURADataTable
        Inherits Global.System.Data.TypedTableBase(Of INFO_PREFEITURARow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPINF_cd_info As Global.System.Data.DataColumn
        
        Private columnPINF_ds_info As Global.System.Data.DataColumn
        
        Private columnTINF_nm_tipo_info As Global.System.Data.DataColumn
        
        Private columnSINF_ds_situacao_info As Global.System.Data.DataColumn
        
        Private columnPINF_dt_ini As Global.System.Data.DataColumn
        
        Private columnPINF_dt_fim As Global.System.Data.DataColumn
        
        Private columnPINF_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPINF_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPINF_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INFO_PREFEITURA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_cd_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_cd_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TINF_nm_tipo_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTINF_nm_tipo_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SINF_ds_situacao_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSINF_ds_situacao_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_dt_iniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_dt_ini
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_dt_fimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_dt_fim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINF_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINF_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INFO_PREFEITURARow
            Get
                Return CType(Me.Rows(index),INFO_PREFEITURARow)
            End Get
        End Property
        
        Public Event INFO_PREFEITURARowChanging As INFO_PREFEITURARowChangeEventHandler
        
        Public Event INFO_PREFEITURARowChanged As INFO_PREFEITURARowChangeEventHandler
        
        Public Event INFO_PREFEITURARowDeleting As INFO_PREFEITURARowChangeEventHandler
        
        Public Event INFO_PREFEITURARowDeleted As INFO_PREFEITURARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddINFO_PREFEITURARow(ByVal row As INFO_PREFEITURARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddINFO_PREFEITURARow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PINF_cd_info As Integer, ByVal PINF_ds_info As String, ByVal TINF_nm_tipo_info As String, ByVal SINF_ds_situacao_info As String, ByVal PINF_dt_ini As Date, ByVal PINF_dt_fim As Date, ByVal PINF_ds_local_documento As String, ByVal PINF_ds_rede_documento As String, ByVal PINF_ds_path_documento As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As INFO_PREFEITURARow
            Dim rowINFO_PREFEITURARow As INFO_PREFEITURARow = CType(Me.NewRow,INFO_PREFEITURARow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PINF_cd_info, PINF_ds_info, TINF_nm_tipo_info, SINF_ds_situacao_info, PINF_dt_ini, PINF_dt_fim, PINF_ds_local_documento, PINF_ds_rede_documento, PINF_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowINFO_PREFEITURARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINFO_PREFEITURARow)
            Return rowINFO_PREFEITURARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As INFO_PREFEITURARow
            Return CType(Me.Rows.Find(New Object() {id}),INFO_PREFEITURARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INFO_PREFEITURADataTable = CType(MyBase.Clone,INFO_PREFEITURADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INFO_PREFEITURADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPINF_cd_info = MyBase.Columns("PINF_cd_info")
            Me.columnPINF_ds_info = MyBase.Columns("PINF_ds_info")
            Me.columnTINF_nm_tipo_info = MyBase.Columns("TINF_nm_tipo_info")
            Me.columnSINF_ds_situacao_info = MyBase.Columns("SINF_ds_situacao_info")
            Me.columnPINF_dt_ini = MyBase.Columns("PINF_dt_ini")
            Me.columnPINF_dt_fim = MyBase.Columns("PINF_dt_fim")
            Me.columnPINF_ds_local_documento = MyBase.Columns("PINF_ds_local_documento")
            Me.columnPINF_ds_rede_documento = MyBase.Columns("PINF_ds_rede_documento")
            Me.columnPINF_ds_path_documento = MyBase.Columns("PINF_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPINF_cd_info = New Global.System.Data.DataColumn("PINF_cd_info", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_cd_info)
            Me.columnPINF_ds_info = New Global.System.Data.DataColumn("PINF_ds_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_info)
            Me.columnTINF_nm_tipo_info = New Global.System.Data.DataColumn("TINF_nm_tipo_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTINF_nm_tipo_info)
            Me.columnSINF_ds_situacao_info = New Global.System.Data.DataColumn("SINF_ds_situacao_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSINF_ds_situacao_info)
            Me.columnPINF_dt_ini = New Global.System.Data.DataColumn("PINF_dt_ini", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_dt_ini)
            Me.columnPINF_dt_fim = New Global.System.Data.DataColumn("PINF_dt_fim", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_dt_fim)
            Me.columnPINF_ds_local_documento = New Global.System.Data.DataColumn("PINF_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_local_documento)
            Me.columnPINF_ds_rede_documento = New Global.System.Data.DataColumn("PINF_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_rede_documento)
            Me.columnPINF_ds_path_documento = New Global.System.Data.DataColumn("PINF_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINF_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPINF_cd_info.AllowDBNull = false
            Me.columnPINF_ds_info.MaxLength = 500
            Me.columnTINF_nm_tipo_info.MaxLength = 100
            Me.columnSINF_ds_situacao_info.MaxLength = 100
            Me.columnPINF_ds_local_documento.AllowDBNull = false
            Me.columnPINF_ds_local_documento.MaxLength = 500
            Me.columnPINF_ds_rede_documento.AllowDBNull = false
            Me.columnPINF_ds_rede_documento.MaxLength = 500
            Me.columnPINF_ds_path_documento.AllowDBNull = false
            Me.columnPINF_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewINFO_PREFEITURARow() As INFO_PREFEITURARow
            Return CType(Me.NewRow,INFO_PREFEITURARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INFO_PREFEITURARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INFO_PREFEITURARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INFO_PREFEITURARowChangedEvent) Is Nothing) Then
                RaiseEvent INFO_PREFEITURARowChanged(Me, New INFO_PREFEITURARowChangeEvent(CType(e.Row,INFO_PREFEITURARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INFO_PREFEITURARowChangingEvent) Is Nothing) Then
                RaiseEvent INFO_PREFEITURARowChanging(Me, New INFO_PREFEITURARowChangeEvent(CType(e.Row,INFO_PREFEITURARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INFO_PREFEITURARowDeletedEvent) Is Nothing) Then
                RaiseEvent INFO_PREFEITURARowDeleted(Me, New INFO_PREFEITURARowChangeEvent(CType(e.Row,INFO_PREFEITURARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INFO_PREFEITURARowDeletingEvent) Is Nothing) Then
                RaiseEvent INFO_PREFEITURARowDeleting(Me, New INFO_PREFEITURARowChangeEvent(CType(e.Row,INFO_PREFEITURARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveINFO_PREFEITURARow(ByVal row As INFO_PREFEITURARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INFO_PREFEITURADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GERAL_EVENTOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of GERAL_EVENTOSRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnPREV_cd_evento As Global.System.Data.DataColumn
        
        Private columnPREV_ds_evento As Global.System.Data.DataColumn
        
        Private columnPREV_dt_ocorrencia As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        Private columnPROC_ds_titular As Global.System.Data.DataColumn
        
        Private columnPROC_vl_ano As Global.System.Data.DataColumn
        
        Private columnPROC_nm_processo As Global.System.Data.DataColumn
        
        Private columnPROC_id_processo As Global.System.Data.DataColumn
        
        Private columnFASE_cd_fase As Global.System.Data.DataColumn
        
        Private columnPROC_ds_ultimo_evento As Global.System.Data.DataColumn
        
        Private columnPROC_ds_substancia As Global.System.Data.DataColumn
        
        Private columnPROC_ds_area As Global.System.Data.DataColumn
        
        Private columnPROC_ds_uso As Global.System.Data.DataColumn
        
        Private columnPROC_ds_link As Global.System.Data.DataColumn
        
        Private columnUNFE_cd_unidade_federativa As Global.System.Data.DataColumn
        
        Private columnPROC_fl_tipo_inclusao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GERAL_EVENTOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PREV_cd_eventoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREV_cd_evento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PREV_ds_eventoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREV_ds_evento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PREV_dt_ocorrenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREV_dt_ocorrencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_titularColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_titular
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_vl_anoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_vl_ano
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_nm_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_nm_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_id_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_id_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FASE_cd_faseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFASE_cd_fase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_ultimo_eventoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_ultimo_evento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_substanciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_substancia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_areaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_area
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_usoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_uso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_linkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_link
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UNFE_cd_unidade_federativaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNFE_cd_unidade_federativa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_fl_tipo_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_fl_tipo_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GERAL_EVENTOSRow
            Get
                Return CType(Me.Rows(index),GERAL_EVENTOSRow)
            End Get
        End Property
        
        Public Event GERAL_EVENTOSRowChanging As GERAL_EVENTOSRowChangeEventHandler
        
        Public Event GERAL_EVENTOSRowChanged As GERAL_EVENTOSRowChangeEventHandler
        
        Public Event GERAL_EVENTOSRowDeleting As GERAL_EVENTOSRowChangeEventHandler
        
        Public Event GERAL_EVENTOSRowDeleted As GERAL_EVENTOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddGERAL_EVENTOSRow(ByVal row As GERAL_EVENTOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddGERAL_EVENTOSRow( _
                    ByVal PROC_cd_processo As String,  _
                    ByVal PREV_cd_evento As String,  _
                    ByVal PREV_ds_evento As String,  _
                    ByVal PREV_dt_ocorrencia As Date,  _
                    ByVal AUDT_dt_inclusao As Date,  _
                    ByVal AUDT_nm_usuario_inclusao As String,  _
                    ByVal AUDT_dt_alteracao As Date,  _
                    ByVal AUDT_nm_usuario_alteracao As String,  _
                    ByVal PROC_ds_titular As String,  _
                    ByVal PROC_vl_ano As Integer,  _
                    ByVal PROC_nm_processo As String,  _
                    ByVal PROC_id_processo As String,  _
                    ByVal FASE_cd_fase As Integer,  _
                    ByVal PROC_ds_ultimo_evento As String,  _
                    ByVal PROC_ds_substancia As String,  _
                    ByVal PROC_ds_area As String,  _
                    ByVal PROC_ds_uso As String,  _
                    ByVal PROC_ds_link As String,  _
                    ByVal UNFE_cd_unidade_federativa As String,  _
                    ByVal PROC_fl_tipo_inclusao As String) As GERAL_EVENTOSRow
            Dim rowGERAL_EVENTOSRow As GERAL_EVENTOSRow = CType(Me.NewRow,GERAL_EVENTOSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, PREV_cd_evento, PREV_ds_evento, PREV_dt_ocorrencia, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao, PROC_ds_titular, PROC_vl_ano, PROC_nm_processo, PROC_id_processo, FASE_cd_fase, PROC_ds_ultimo_evento, PROC_ds_substancia, PROC_ds_area, PROC_ds_uso, PROC_ds_link, UNFE_cd_unidade_federativa, PROC_fl_tipo_inclusao}
            rowGERAL_EVENTOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGERAL_EVENTOSRow)
            Return rowGERAL_EVENTOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As GERAL_EVENTOSRow
            Return CType(Me.Rows.Find(New Object() {id}),GERAL_EVENTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GERAL_EVENTOSDataTable = CType(MyBase.Clone,GERAL_EVENTOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GERAL_EVENTOSDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnPREV_cd_evento = MyBase.Columns("PREV_cd_evento")
            Me.columnPREV_ds_evento = MyBase.Columns("PREV_ds_evento")
            Me.columnPREV_dt_ocorrencia = MyBase.Columns("PREV_dt_ocorrencia")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
            Me.columnPROC_ds_titular = MyBase.Columns("PROC_ds_titular")
            Me.columnPROC_vl_ano = MyBase.Columns("PROC_vl_ano")
            Me.columnPROC_nm_processo = MyBase.Columns("PROC_nm_processo")
            Me.columnPROC_id_processo = MyBase.Columns("PROC_id_processo")
            Me.columnFASE_cd_fase = MyBase.Columns("FASE_cd_fase")
            Me.columnPROC_ds_ultimo_evento = MyBase.Columns("PROC_ds_ultimo_evento")
            Me.columnPROC_ds_substancia = MyBase.Columns("PROC_ds_substancia")
            Me.columnPROC_ds_area = MyBase.Columns("PROC_ds_area")
            Me.columnPROC_ds_uso = MyBase.Columns("PROC_ds_uso")
            Me.columnPROC_ds_link = MyBase.Columns("PROC_ds_link")
            Me.columnUNFE_cd_unidade_federativa = MyBase.Columns("UNFE_cd_unidade_federativa")
            Me.columnPROC_fl_tipo_inclusao = MyBase.Columns("PROC_fl_tipo_inclusao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnPREV_cd_evento = New Global.System.Data.DataColumn("PREV_cd_evento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREV_cd_evento)
            Me.columnPREV_ds_evento = New Global.System.Data.DataColumn("PREV_ds_evento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREV_ds_evento)
            Me.columnPREV_dt_ocorrencia = New Global.System.Data.DataColumn("PREV_dt_ocorrencia", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREV_dt_ocorrencia)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.columnPROC_ds_titular = New Global.System.Data.DataColumn("PROC_ds_titular", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_titular)
            Me.columnPROC_vl_ano = New Global.System.Data.DataColumn("PROC_vl_ano", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_vl_ano)
            Me.columnPROC_nm_processo = New Global.System.Data.DataColumn("PROC_nm_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_nm_processo)
            Me.columnPROC_id_processo = New Global.System.Data.DataColumn("PROC_id_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_id_processo)
            Me.columnFASE_cd_fase = New Global.System.Data.DataColumn("FASE_cd_fase", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFASE_cd_fase)
            Me.columnPROC_ds_ultimo_evento = New Global.System.Data.DataColumn("PROC_ds_ultimo_evento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_ultimo_evento)
            Me.columnPROC_ds_substancia = New Global.System.Data.DataColumn("PROC_ds_substancia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_substancia)
            Me.columnPROC_ds_area = New Global.System.Data.DataColumn("PROC_ds_area", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_area)
            Me.columnPROC_ds_uso = New Global.System.Data.DataColumn("PROC_ds_uso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_uso)
            Me.columnPROC_ds_link = New Global.System.Data.DataColumn("PROC_ds_link", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_link)
            Me.columnUNFE_cd_unidade_federativa = New Global.System.Data.DataColumn("UNFE_cd_unidade_federativa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNFE_cd_unidade_federativa)
            Me.columnPROC_fl_tipo_inclusao = New Global.System.Data.DataColumn("PROC_fl_tipo_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_fl_tipo_inclusao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnPREV_cd_evento.AllowDBNull = false
            Me.columnPREV_cd_evento.MaxLength = 20
            Me.columnPREV_ds_evento.MaxLength = 3000
            Me.columnPREV_dt_ocorrencia.AllowDBNull = false
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
            Me.columnPROC_ds_titular.AllowDBNull = false
            Me.columnPROC_ds_titular.MaxLength = 300
            Me.columnPROC_nm_processo.MaxLength = 50
            Me.columnPROC_id_processo.MaxLength = 300
            Me.columnPROC_ds_ultimo_evento.MaxLength = 3000
            Me.columnPROC_ds_substancia.MaxLength = 100
            Me.columnPROC_ds_area.MaxLength = 30
            Me.columnPROC_ds_uso.MaxLength = 200
            Me.columnPROC_ds_link.MaxLength = 150
            Me.columnUNFE_cd_unidade_federativa.MaxLength = 2
            Me.columnPROC_fl_tipo_inclusao.AllowDBNull = false
            Me.columnPROC_fl_tipo_inclusao.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewGERAL_EVENTOSRow() As GERAL_EVENTOSRow
            Return CType(Me.NewRow,GERAL_EVENTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GERAL_EVENTOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GERAL_EVENTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GERAL_EVENTOSRowChangedEvent) Is Nothing) Then
                RaiseEvent GERAL_EVENTOSRowChanged(Me, New GERAL_EVENTOSRowChangeEvent(CType(e.Row,GERAL_EVENTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GERAL_EVENTOSRowChangingEvent) Is Nothing) Then
                RaiseEvent GERAL_EVENTOSRowChanging(Me, New GERAL_EVENTOSRowChangeEvent(CType(e.Row,GERAL_EVENTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GERAL_EVENTOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent GERAL_EVENTOSRowDeleted(Me, New GERAL_EVENTOSRowChangeEvent(CType(e.Row,GERAL_EVENTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GERAL_EVENTOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent GERAL_EVENTOSRowDeleting(Me, New GERAL_EVENTOSRowChangeEvent(CType(e.Row,GERAL_EVENTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveGERAL_EVENTOSRow(ByVal row As GERAL_EVENTOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GERAL_EVENTOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CETESB_MPRIMA_PRODUTODataTable
        Inherits Global.System.Data.TypedTableBase(Of CETESB_MPRIMA_PRODUTORow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnMPRI_nm_mprima As Global.System.Data.DataColumn
        
        Private columnPRMP_vl_mprima As Global.System.Data.DataColumn
        
        Private columnPRMP_un_mprima As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        Private columnPROD_nm_produto As Global.System.Data.DataColumn
        
        Private columnPRPD_vl_produto As Global.System.Data.DataColumn
        
        Private columnPRPD_un_produto As Global.System.Data.DataColumn
        
        Private columnPRPD_qt_produto As Global.System.Data.DataColumn
        
        Private columnUPRD_nm_uso As Global.System.Data.DataColumn
        
        Private columnPRMP_qt_mprima As Global.System.Data.DataColumn
        
        Private columnPRMP_ds_mprima As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CETESB_MPRIMA_PRODUTO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MPRI_nm_mprimaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMPRI_nm_mprima
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRMP_vl_mprimaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMP_vl_mprima
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRMP_un_mprimaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMP_un_mprima
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROD_nm_produtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROD_nm_produto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRPD_vl_produtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRPD_vl_produto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRPD_un_produtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRPD_un_produto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRPD_qt_produtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRPD_qt_produto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UPRD_nm_usoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPRD_nm_uso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRMP_qt_mprimaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMP_qt_mprima
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRMP_ds_mprimaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRMP_ds_mprima
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CETESB_MPRIMA_PRODUTORow
            Get
                Return CType(Me.Rows(index),CETESB_MPRIMA_PRODUTORow)
            End Get
        End Property
        
        Public Event CETESB_MPRIMA_PRODUTORowChanging As CETESB_MPRIMA_PRODUTORowChangeEventHandler
        
        Public Event CETESB_MPRIMA_PRODUTORowChanged As CETESB_MPRIMA_PRODUTORowChangeEventHandler
        
        Public Event CETESB_MPRIMA_PRODUTORowDeleting As CETESB_MPRIMA_PRODUTORowChangeEventHandler
        
        Public Event CETESB_MPRIMA_PRODUTORowDeleted As CETESB_MPRIMA_PRODUTORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCETESB_MPRIMA_PRODUTORow(ByVal row As CETESB_MPRIMA_PRODUTORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCETESB_MPRIMA_PRODUTORow( _
                    ByVal PROC_cd_processo As String,  _
                    ByVal ORGA_nm_orgao As String,  _
                    ByVal MPRI_nm_mprima As String,  _
                    ByVal PRMP_vl_mprima As Decimal,  _
                    ByVal PRMP_un_mprima As String,  _
                    ByVal AUDT_dt_inclusao As Date,  _
                    ByVal AUDT_nm_usuario_inclusao As String,  _
                    ByVal AUDT_dt_alteracao As Date,  _
                    ByVal AUDT_nm_usuario_alteracao As String,  _
                    ByVal PROD_nm_produto As String,  _
                    ByVal PRPD_vl_produto As Decimal,  _
                    ByVal PRPD_un_produto As String,  _
                    ByVal PRPD_qt_produto As String,  _
                    ByVal UPRD_nm_uso As String,  _
                    ByVal PRMP_qt_mprima As String,  _
                    ByVal PRMP_ds_mprima As String) As CETESB_MPRIMA_PRODUTORow
            Dim rowCETESB_MPRIMA_PRODUTORow As CETESB_MPRIMA_PRODUTORow = CType(Me.NewRow,CETESB_MPRIMA_PRODUTORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, MPRI_nm_mprima, PRMP_vl_mprima, PRMP_un_mprima, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao, PROD_nm_produto, PRPD_vl_produto, PRPD_un_produto, PRPD_qt_produto, UPRD_nm_uso, PRMP_qt_mprima, PRMP_ds_mprima}
            rowCETESB_MPRIMA_PRODUTORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCETESB_MPRIMA_PRODUTORow)
            Return rowCETESB_MPRIMA_PRODUTORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As CETESB_MPRIMA_PRODUTORow
            Return CType(Me.Rows.Find(New Object() {id}),CETESB_MPRIMA_PRODUTORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CETESB_MPRIMA_PRODUTODataTable = CType(MyBase.Clone,CETESB_MPRIMA_PRODUTODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CETESB_MPRIMA_PRODUTODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnMPRI_nm_mprima = MyBase.Columns("MPRI_nm_mprima")
            Me.columnPRMP_vl_mprima = MyBase.Columns("PRMP_vl_mprima")
            Me.columnPRMP_un_mprima = MyBase.Columns("PRMP_un_mprima")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
            Me.columnPROD_nm_produto = MyBase.Columns("PROD_nm_produto")
            Me.columnPRPD_vl_produto = MyBase.Columns("PRPD_vl_produto")
            Me.columnPRPD_un_produto = MyBase.Columns("PRPD_un_produto")
            Me.columnPRPD_qt_produto = MyBase.Columns("PRPD_qt_produto")
            Me.columnUPRD_nm_uso = MyBase.Columns("UPRD_nm_uso")
            Me.columnPRMP_qt_mprima = MyBase.Columns("PRMP_qt_mprima")
            Me.columnPRMP_ds_mprima = MyBase.Columns("PRMP_ds_mprima")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnMPRI_nm_mprima = New Global.System.Data.DataColumn("MPRI_nm_mprima", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMPRI_nm_mprima)
            Me.columnPRMP_vl_mprima = New Global.System.Data.DataColumn("PRMP_vl_mprima", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMP_vl_mprima)
            Me.columnPRMP_un_mprima = New Global.System.Data.DataColumn("PRMP_un_mprima", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMP_un_mprima)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.columnPROD_nm_produto = New Global.System.Data.DataColumn("PROD_nm_produto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROD_nm_produto)
            Me.columnPRPD_vl_produto = New Global.System.Data.DataColumn("PRPD_vl_produto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRPD_vl_produto)
            Me.columnPRPD_un_produto = New Global.System.Data.DataColumn("PRPD_un_produto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRPD_un_produto)
            Me.columnPRPD_qt_produto = New Global.System.Data.DataColumn("PRPD_qt_produto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRPD_qt_produto)
            Me.columnUPRD_nm_uso = New Global.System.Data.DataColumn("UPRD_nm_uso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPRD_nm_uso)
            Me.columnPRMP_qt_mprima = New Global.System.Data.DataColumn("PRMP_qt_mprima", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMP_qt_mprima)
            Me.columnPRMP_ds_mprima = New Global.System.Data.DataColumn("PRMP_ds_mprima", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRMP_ds_mprima)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnMPRI_nm_mprima.AllowDBNull = false
            Me.columnMPRI_nm_mprima.MaxLength = 100
            Me.columnPRMP_un_mprima.MaxLength = 10
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
            Me.columnPROD_nm_produto.MaxLength = 100
            Me.columnPRPD_un_produto.MaxLength = 10
            Me.columnPRPD_qt_produto.MaxLength = 50
            Me.columnUPRD_nm_uso.MaxLength = 100
            Me.columnPRMP_qt_mprima.MaxLength = 50
            Me.columnPRMP_ds_mprima.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCETESB_MPRIMA_PRODUTORow() As CETESB_MPRIMA_PRODUTORow
            Return CType(Me.NewRow,CETESB_MPRIMA_PRODUTORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CETESB_MPRIMA_PRODUTORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CETESB_MPRIMA_PRODUTORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CETESB_MPRIMA_PRODUTORowChangedEvent) Is Nothing) Then
                RaiseEvent CETESB_MPRIMA_PRODUTORowChanged(Me, New CETESB_MPRIMA_PRODUTORowChangeEvent(CType(e.Row,CETESB_MPRIMA_PRODUTORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CETESB_MPRIMA_PRODUTORowChangingEvent) Is Nothing) Then
                RaiseEvent CETESB_MPRIMA_PRODUTORowChanging(Me, New CETESB_MPRIMA_PRODUTORowChangeEvent(CType(e.Row,CETESB_MPRIMA_PRODUTORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CETESB_MPRIMA_PRODUTORowDeletedEvent) Is Nothing) Then
                RaiseEvent CETESB_MPRIMA_PRODUTORowDeleted(Me, New CETESB_MPRIMA_PRODUTORowChangeEvent(CType(e.Row,CETESB_MPRIMA_PRODUTORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CETESB_MPRIMA_PRODUTORowDeletingEvent) Is Nothing) Then
                RaiseEvent CETESB_MPRIMA_PRODUTORowDeleting(Me, New CETESB_MPRIMA_PRODUTORowChangeEvent(CType(e.Row,CETESB_MPRIMA_PRODUTORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCETESB_MPRIMA_PRODUTORow(ByVal row As CETESB_MPRIMA_PRODUTORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CETESB_MPRIMA_PRODUTODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DNPM_SUBSTANCIADataTable
        Inherits Global.System.Data.TypedTableBase(Of DNPM_SUBSTANCIARow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnSUBS_nm_substancia As Global.System.Data.DataColumn
        
        Private columnTUSO_nm_uso As Global.System.Data.DataColumn
        
        Private columnPSUB_dt_inicio As Global.System.Data.DataColumn
        
        Private columnPSUB_dt_fim As Global.System.Data.DataColumn
        
        Private columnPSUB_ds_motivo As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DNPM_SUBSTANCIA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBS_nm_substanciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBS_nm_substancia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TUSO_nm_usoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTUSO_nm_uso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PSUB_dt_inicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPSUB_dt_inicio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PSUB_dt_fimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPSUB_dt_fim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PSUB_ds_motivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPSUB_ds_motivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DNPM_SUBSTANCIARow
            Get
                Return CType(Me.Rows(index),DNPM_SUBSTANCIARow)
            End Get
        End Property
        
        Public Event DNPM_SUBSTANCIARowChanging As DNPM_SUBSTANCIARowChangeEventHandler
        
        Public Event DNPM_SUBSTANCIARowChanged As DNPM_SUBSTANCIARowChangeEventHandler
        
        Public Event DNPM_SUBSTANCIARowDeleting As DNPM_SUBSTANCIARowChangeEventHandler
        
        Public Event DNPM_SUBSTANCIARowDeleted As DNPM_SUBSTANCIARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDNPM_SUBSTANCIARow(ByVal row As DNPM_SUBSTANCIARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDNPM_SUBSTANCIARow(ByVal PROC_cd_processo As String, ByVal SUBS_nm_substancia As String, ByVal TUSO_nm_uso As String, ByVal PSUB_dt_inicio As Date, ByVal PSUB_dt_fim As Date, ByVal PSUB_ds_motivo As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As DNPM_SUBSTANCIARow
            Dim rowDNPM_SUBSTANCIARow As DNPM_SUBSTANCIARow = CType(Me.NewRow,DNPM_SUBSTANCIARow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, SUBS_nm_substancia, TUSO_nm_uso, PSUB_dt_inicio, PSUB_dt_fim, PSUB_ds_motivo, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowDNPM_SUBSTANCIARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDNPM_SUBSTANCIARow)
            Return rowDNPM_SUBSTANCIARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As DNPM_SUBSTANCIARow
            Return CType(Me.Rows.Find(New Object() {id}),DNPM_SUBSTANCIARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DNPM_SUBSTANCIADataTable = CType(MyBase.Clone,DNPM_SUBSTANCIADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DNPM_SUBSTANCIADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnSUBS_nm_substancia = MyBase.Columns("SUBS_nm_substancia")
            Me.columnTUSO_nm_uso = MyBase.Columns("TUSO_nm_uso")
            Me.columnPSUB_dt_inicio = MyBase.Columns("PSUB_dt_inicio")
            Me.columnPSUB_dt_fim = MyBase.Columns("PSUB_dt_fim")
            Me.columnPSUB_ds_motivo = MyBase.Columns("PSUB_ds_motivo")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnSUBS_nm_substancia = New Global.System.Data.DataColumn("SUBS_nm_substancia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBS_nm_substancia)
            Me.columnTUSO_nm_uso = New Global.System.Data.DataColumn("TUSO_nm_uso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTUSO_nm_uso)
            Me.columnPSUB_dt_inicio = New Global.System.Data.DataColumn("PSUB_dt_inicio", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPSUB_dt_inicio)
            Me.columnPSUB_dt_fim = New Global.System.Data.DataColumn("PSUB_dt_fim", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPSUB_dt_fim)
            Me.columnPSUB_ds_motivo = New Global.System.Data.DataColumn("PSUB_ds_motivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPSUB_ds_motivo)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnSUBS_nm_substancia.AllowDBNull = false
            Me.columnSUBS_nm_substancia.MaxLength = 100
            Me.columnTUSO_nm_uso.AllowDBNull = false
            Me.columnTUSO_nm_uso.MaxLength = 100
            Me.columnPSUB_ds_motivo.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDNPM_SUBSTANCIARow() As DNPM_SUBSTANCIARow
            Return CType(Me.NewRow,DNPM_SUBSTANCIARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DNPM_SUBSTANCIARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DNPM_SUBSTANCIARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DNPM_SUBSTANCIARowChangedEvent) Is Nothing) Then
                RaiseEvent DNPM_SUBSTANCIARowChanged(Me, New DNPM_SUBSTANCIARowChangeEvent(CType(e.Row,DNPM_SUBSTANCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DNPM_SUBSTANCIARowChangingEvent) Is Nothing) Then
                RaiseEvent DNPM_SUBSTANCIARowChanging(Me, New DNPM_SUBSTANCIARowChangeEvent(CType(e.Row,DNPM_SUBSTANCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DNPM_SUBSTANCIARowDeletedEvent) Is Nothing) Then
                RaiseEvent DNPM_SUBSTANCIARowDeleted(Me, New DNPM_SUBSTANCIARowChangeEvent(CType(e.Row,DNPM_SUBSTANCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DNPM_SUBSTANCIARowDeletingEvent) Is Nothing) Then
                RaiseEvent DNPM_SUBSTANCIARowDeleting(Me, New DNPM_SUBSTANCIARowChangeEvent(CType(e.Row,DNPM_SUBSTANCIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDNPM_SUBSTANCIARow(ByVal row As DNPM_SUBSTANCIARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DNPM_SUBSTANCIADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DNPM_TITULODataTable
        Inherits Global.System.Data.TypedTableBase(Of DNPM_TITULORow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPTIT_nm_titulo As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_titulo As Global.System.Data.DataColumn
        
        Private columnTTIT_ds_tipo_titulo As Global.System.Data.DataColumn
        
        Private columnSITU_ds_situacao_titulo As Global.System.Data.DataColumn
        
        Private columnPTIT_dt_publicacao As Global.System.Data.DataColumn
        
        Private columnPTIT_dt_vencimento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_nome_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DNPM_TITULO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_nm_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_nm_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTIT_ds_tipo_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTIT_ds_tipo_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SITU_ds_situacao_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSITU_ds_situacao_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_dt_publicacaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_dt_publicacao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_dt_vencimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_dt_vencimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_nome_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_nome_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DNPM_TITULORow
            Get
                Return CType(Me.Rows(index),DNPM_TITULORow)
            End Get
        End Property
        
        Public Event DNPM_TITULORowChanging As DNPM_TITULORowChangeEventHandler
        
        Public Event DNPM_TITULORowChanged As DNPM_TITULORowChangeEventHandler
        
        Public Event DNPM_TITULORowDeleting As DNPM_TITULORowChangeEventHandler
        
        Public Event DNPM_TITULORowDeleted As DNPM_TITULORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDNPM_TITULORow(ByVal row As DNPM_TITULORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDNPM_TITULORow( _
                    ByVal PROC_cd_processo As String,  _
                    ByVal ORGA_nm_orgao As String,  _
                    ByVal PTIT_nm_titulo As String,  _
                    ByVal PTIT_ds_titulo As String,  _
                    ByVal TTIT_ds_tipo_titulo As String,  _
                    ByVal SITU_ds_situacao_titulo As String,  _
                    ByVal PTIT_dt_publicacao As Date,  _
                    ByVal PTIT_dt_vencimento As Date,  _
                    ByVal PTIT_ds_nome_documento As String,  _
                    ByVal PTIT_ds_local_documento As String,  _
                    ByVal PTIT_ds_rede_documento As String,  _
                    ByVal PTIT_ds_path_documento As String,  _
                    ByVal AUDT_dt_inclusao As Date,  _
                    ByVal AUDT_nm_usuario_inclusao As String,  _
                    ByVal AUDT_dt_alteracao As Date,  _
                    ByVal AUDT_nm_usuario_alteracao As String) As DNPM_TITULORow
            Dim rowDNPM_TITULORow As DNPM_TITULORow = CType(Me.NewRow,DNPM_TITULORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PTIT_nm_titulo, PTIT_ds_titulo, TTIT_ds_tipo_titulo, SITU_ds_situacao_titulo, PTIT_dt_publicacao, PTIT_dt_vencimento, PTIT_ds_nome_documento, PTIT_ds_local_documento, PTIT_ds_rede_documento, PTIT_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowDNPM_TITULORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDNPM_TITULORow)
            Return rowDNPM_TITULORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As DNPM_TITULORow
            Return CType(Me.Rows.Find(New Object() {id}),DNPM_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DNPM_TITULODataTable = CType(MyBase.Clone,DNPM_TITULODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DNPM_TITULODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPTIT_nm_titulo = MyBase.Columns("PTIT_nm_titulo")
            Me.columnPTIT_ds_titulo = MyBase.Columns("PTIT_ds_titulo")
            Me.columnTTIT_ds_tipo_titulo = MyBase.Columns("TTIT_ds_tipo_titulo")
            Me.columnSITU_ds_situacao_titulo = MyBase.Columns("SITU_ds_situacao_titulo")
            Me.columnPTIT_dt_publicacao = MyBase.Columns("PTIT_dt_publicacao")
            Me.columnPTIT_dt_vencimento = MyBase.Columns("PTIT_dt_vencimento")
            Me.columnPTIT_ds_nome_documento = MyBase.Columns("PTIT_ds_nome_documento")
            Me.columnPTIT_ds_local_documento = MyBase.Columns("PTIT_ds_local_documento")
            Me.columnPTIT_ds_rede_documento = MyBase.Columns("PTIT_ds_rede_documento")
            Me.columnPTIT_ds_path_documento = MyBase.Columns("PTIT_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPTIT_nm_titulo = New Global.System.Data.DataColumn("PTIT_nm_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_nm_titulo)
            Me.columnPTIT_ds_titulo = New Global.System.Data.DataColumn("PTIT_ds_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_titulo)
            Me.columnTTIT_ds_tipo_titulo = New Global.System.Data.DataColumn("TTIT_ds_tipo_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTIT_ds_tipo_titulo)
            Me.columnSITU_ds_situacao_titulo = New Global.System.Data.DataColumn("SITU_ds_situacao_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSITU_ds_situacao_titulo)
            Me.columnPTIT_dt_publicacao = New Global.System.Data.DataColumn("PTIT_dt_publicacao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_dt_publicacao)
            Me.columnPTIT_dt_vencimento = New Global.System.Data.DataColumn("PTIT_dt_vencimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_dt_vencimento)
            Me.columnPTIT_ds_nome_documento = New Global.System.Data.DataColumn("PTIT_ds_nome_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_nome_documento)
            Me.columnPTIT_ds_local_documento = New Global.System.Data.DataColumn("PTIT_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_local_documento)
            Me.columnPTIT_ds_rede_documento = New Global.System.Data.DataColumn("PTIT_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_rede_documento)
            Me.columnPTIT_ds_path_documento = New Global.System.Data.DataColumn("PTIT_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPTIT_nm_titulo.AllowDBNull = false
            Me.columnPTIT_nm_titulo.MaxLength = 50
            Me.columnPTIT_ds_titulo.AllowDBNull = false
            Me.columnPTIT_ds_titulo.MaxLength = 300
            Me.columnTTIT_ds_tipo_titulo.AllowDBNull = false
            Me.columnTTIT_ds_tipo_titulo.MaxLength = 100
            Me.columnSITU_ds_situacao_titulo.MaxLength = 100
            Me.columnPTIT_ds_nome_documento.MaxLength = 100
            Me.columnPTIT_ds_local_documento.MaxLength = 500
            Me.columnPTIT_ds_rede_documento.MaxLength = 500
            Me.columnPTIT_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDNPM_TITULORow() As DNPM_TITULORow
            Return CType(Me.NewRow,DNPM_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DNPM_TITULORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DNPM_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DNPM_TITULORowChangedEvent) Is Nothing) Then
                RaiseEvent DNPM_TITULORowChanged(Me, New DNPM_TITULORowChangeEvent(CType(e.Row,DNPM_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DNPM_TITULORowChangingEvent) Is Nothing) Then
                RaiseEvent DNPM_TITULORowChanging(Me, New DNPM_TITULORowChangeEvent(CType(e.Row,DNPM_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DNPM_TITULORowDeletedEvent) Is Nothing) Then
                RaiseEvent DNPM_TITULORowDeleted(Me, New DNPM_TITULORowChangeEvent(CType(e.Row,DNPM_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DNPM_TITULORowDeletingEvent) Is Nothing) Then
                RaiseEvent DNPM_TITULORowDeleting(Me, New DNPM_TITULORowChangeEvent(CType(e.Row,DNPM_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDNPM_TITULORow(ByVal row As DNPM_TITULORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DNPM_TITULODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DAEE_TITULODataTable
        Inherits Global.System.Data.TypedTableBase(Of DAEE_TITULORow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPTIT_nm_titulo As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_titulo As Global.System.Data.DataColumn
        
        Private columnTTIT_ds_tipo_titulo As Global.System.Data.DataColumn
        
        Private columnSITU_ds_situacao_titulo As Global.System.Data.DataColumn
        
        Private columnPTIT_dt_publicacao As Global.System.Data.DataColumn
        
        Private columnPTIT_dt_vencimento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_nome_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DAEE_TITULO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_nm_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_nm_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTIT_ds_tipo_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTIT_ds_tipo_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SITU_ds_situacao_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSITU_ds_situacao_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_dt_publicacaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_dt_publicacao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_dt_vencimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_dt_vencimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_nome_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_nome_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DAEE_TITULORow
            Get
                Return CType(Me.Rows(index),DAEE_TITULORow)
            End Get
        End Property
        
        Public Event DAEE_TITULORowChanging As DAEE_TITULORowChangeEventHandler
        
        Public Event DAEE_TITULORowChanged As DAEE_TITULORowChangeEventHandler
        
        Public Event DAEE_TITULORowDeleting As DAEE_TITULORowChangeEventHandler
        
        Public Event DAEE_TITULORowDeleted As DAEE_TITULORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDAEE_TITULORow(ByVal row As DAEE_TITULORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDAEE_TITULORow( _
                    ByVal PROC_cd_processo As String,  _
                    ByVal ORGA_nm_orgao As String,  _
                    ByVal PTIT_nm_titulo As String,  _
                    ByVal PTIT_ds_titulo As String,  _
                    ByVal TTIT_ds_tipo_titulo As String,  _
                    ByVal SITU_ds_situacao_titulo As String,  _
                    ByVal PTIT_dt_publicacao As Date,  _
                    ByVal PTIT_dt_vencimento As Date,  _
                    ByVal PTIT_ds_nome_documento As String,  _
                    ByVal PTIT_ds_local_documento As String,  _
                    ByVal PTIT_ds_rede_documento As String,  _
                    ByVal PTIT_ds_path_documento As String,  _
                    ByVal AUDT_dt_inclusao As Date,  _
                    ByVal AUDT_nm_usuario_inclusao As String,  _
                    ByVal AUDT_dt_alteracao As Date,  _
                    ByVal AUDT_nm_usuario_alteracao As String) As DAEE_TITULORow
            Dim rowDAEE_TITULORow As DAEE_TITULORow = CType(Me.NewRow,DAEE_TITULORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PTIT_nm_titulo, PTIT_ds_titulo, TTIT_ds_tipo_titulo, SITU_ds_situacao_titulo, PTIT_dt_publicacao, PTIT_dt_vencimento, PTIT_ds_nome_documento, PTIT_ds_local_documento, PTIT_ds_rede_documento, PTIT_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowDAEE_TITULORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDAEE_TITULORow)
            Return rowDAEE_TITULORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As DAEE_TITULORow
            Return CType(Me.Rows.Find(New Object() {id}),DAEE_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DAEE_TITULODataTable = CType(MyBase.Clone,DAEE_TITULODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DAEE_TITULODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPTIT_nm_titulo = MyBase.Columns("PTIT_nm_titulo")
            Me.columnPTIT_ds_titulo = MyBase.Columns("PTIT_ds_titulo")
            Me.columnTTIT_ds_tipo_titulo = MyBase.Columns("TTIT_ds_tipo_titulo")
            Me.columnSITU_ds_situacao_titulo = MyBase.Columns("SITU_ds_situacao_titulo")
            Me.columnPTIT_dt_publicacao = MyBase.Columns("PTIT_dt_publicacao")
            Me.columnPTIT_dt_vencimento = MyBase.Columns("PTIT_dt_vencimento")
            Me.columnPTIT_ds_nome_documento = MyBase.Columns("PTIT_ds_nome_documento")
            Me.columnPTIT_ds_local_documento = MyBase.Columns("PTIT_ds_local_documento")
            Me.columnPTIT_ds_rede_documento = MyBase.Columns("PTIT_ds_rede_documento")
            Me.columnPTIT_ds_path_documento = MyBase.Columns("PTIT_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPTIT_nm_titulo = New Global.System.Data.DataColumn("PTIT_nm_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_nm_titulo)
            Me.columnPTIT_ds_titulo = New Global.System.Data.DataColumn("PTIT_ds_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_titulo)
            Me.columnTTIT_ds_tipo_titulo = New Global.System.Data.DataColumn("TTIT_ds_tipo_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTIT_ds_tipo_titulo)
            Me.columnSITU_ds_situacao_titulo = New Global.System.Data.DataColumn("SITU_ds_situacao_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSITU_ds_situacao_titulo)
            Me.columnPTIT_dt_publicacao = New Global.System.Data.DataColumn("PTIT_dt_publicacao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_dt_publicacao)
            Me.columnPTIT_dt_vencimento = New Global.System.Data.DataColumn("PTIT_dt_vencimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_dt_vencimento)
            Me.columnPTIT_ds_nome_documento = New Global.System.Data.DataColumn("PTIT_ds_nome_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_nome_documento)
            Me.columnPTIT_ds_local_documento = New Global.System.Data.DataColumn("PTIT_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_local_documento)
            Me.columnPTIT_ds_rede_documento = New Global.System.Data.DataColumn("PTIT_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_rede_documento)
            Me.columnPTIT_ds_path_documento = New Global.System.Data.DataColumn("PTIT_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPTIT_nm_titulo.AllowDBNull = false
            Me.columnPTIT_nm_titulo.MaxLength = 50
            Me.columnPTIT_ds_titulo.AllowDBNull = false
            Me.columnPTIT_ds_titulo.MaxLength = 300
            Me.columnTTIT_ds_tipo_titulo.AllowDBNull = false
            Me.columnTTIT_ds_tipo_titulo.MaxLength = 100
            Me.columnSITU_ds_situacao_titulo.MaxLength = 100
            Me.columnPTIT_ds_nome_documento.MaxLength = 100
            Me.columnPTIT_ds_local_documento.MaxLength = 500
            Me.columnPTIT_ds_rede_documento.MaxLength = 500
            Me.columnPTIT_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDAEE_TITULORow() As DAEE_TITULORow
            Return CType(Me.NewRow,DAEE_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DAEE_TITULORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DAEE_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DAEE_TITULORowChangedEvent) Is Nothing) Then
                RaiseEvent DAEE_TITULORowChanged(Me, New DAEE_TITULORowChangeEvent(CType(e.Row,DAEE_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DAEE_TITULORowChangingEvent) Is Nothing) Then
                RaiseEvent DAEE_TITULORowChanging(Me, New DAEE_TITULORowChangeEvent(CType(e.Row,DAEE_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DAEE_TITULORowDeletedEvent) Is Nothing) Then
                RaiseEvent DAEE_TITULORowDeleted(Me, New DAEE_TITULORowChangeEvent(CType(e.Row,DAEE_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DAEE_TITULORowDeletingEvent) Is Nothing) Then
                RaiseEvent DAEE_TITULORowDeleting(Me, New DAEE_TITULORowChangeEvent(CType(e.Row,DAEE_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDAEE_TITULORow(ByVal row As DAEE_TITULORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DAEE_TITULODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ICMBIO_TITULODataTable
        Inherits Global.System.Data.TypedTableBase(Of ICMBIO_TITULORow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPTIT_nm_titulo As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_titulo As Global.System.Data.DataColumn
        
        Private columnTTIT_ds_tipo_titulo As Global.System.Data.DataColumn
        
        Private columnSITU_ds_situacao_titulo As Global.System.Data.DataColumn
        
        Private columnPTIT_dt_publicacao As Global.System.Data.DataColumn
        
        Private columnPTIT_dt_vencimento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_nome_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ICMBIO_TITULO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_nm_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_nm_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTIT_ds_tipo_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTIT_ds_tipo_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SITU_ds_situacao_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSITU_ds_situacao_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_dt_publicacaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_dt_publicacao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_dt_vencimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_dt_vencimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_nome_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_nome_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ICMBIO_TITULORow
            Get
                Return CType(Me.Rows(index),ICMBIO_TITULORow)
            End Get
        End Property
        
        Public Event ICMBIO_TITULORowChanging As ICMBIO_TITULORowChangeEventHandler
        
        Public Event ICMBIO_TITULORowChanged As ICMBIO_TITULORowChangeEventHandler
        
        Public Event ICMBIO_TITULORowDeleting As ICMBIO_TITULORowChangeEventHandler
        
        Public Event ICMBIO_TITULORowDeleted As ICMBIO_TITULORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddICMBIO_TITULORow(ByVal row As ICMBIO_TITULORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddICMBIO_TITULORow( _
                    ByVal PROC_cd_processo As String,  _
                    ByVal ORGA_nm_orgao As String,  _
                    ByVal PTIT_nm_titulo As String,  _
                    ByVal PTIT_ds_titulo As String,  _
                    ByVal TTIT_ds_tipo_titulo As String,  _
                    ByVal SITU_ds_situacao_titulo As String,  _
                    ByVal PTIT_dt_publicacao As Date,  _
                    ByVal PTIT_dt_vencimento As Date,  _
                    ByVal PTIT_ds_nome_documento As String,  _
                    ByVal PTIT_ds_local_documento As String,  _
                    ByVal PTIT_ds_rede_documento As String,  _
                    ByVal PTIT_ds_path_documento As String,  _
                    ByVal AUDT_dt_inclusao As Date,  _
                    ByVal AUDT_nm_usuario_inclusao As String,  _
                    ByVal AUDT_dt_alteracao As Date,  _
                    ByVal AUDT_nm_usuario_alteracao As String) As ICMBIO_TITULORow
            Dim rowICMBIO_TITULORow As ICMBIO_TITULORow = CType(Me.NewRow,ICMBIO_TITULORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PTIT_nm_titulo, PTIT_ds_titulo, TTIT_ds_tipo_titulo, SITU_ds_situacao_titulo, PTIT_dt_publicacao, PTIT_dt_vencimento, PTIT_ds_nome_documento, PTIT_ds_local_documento, PTIT_ds_rede_documento, PTIT_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowICMBIO_TITULORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowICMBIO_TITULORow)
            Return rowICMBIO_TITULORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As ICMBIO_TITULORow
            Return CType(Me.Rows.Find(New Object() {id}),ICMBIO_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ICMBIO_TITULODataTable = CType(MyBase.Clone,ICMBIO_TITULODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ICMBIO_TITULODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPTIT_nm_titulo = MyBase.Columns("PTIT_nm_titulo")
            Me.columnPTIT_ds_titulo = MyBase.Columns("PTIT_ds_titulo")
            Me.columnTTIT_ds_tipo_titulo = MyBase.Columns("TTIT_ds_tipo_titulo")
            Me.columnSITU_ds_situacao_titulo = MyBase.Columns("SITU_ds_situacao_titulo")
            Me.columnPTIT_dt_publicacao = MyBase.Columns("PTIT_dt_publicacao")
            Me.columnPTIT_dt_vencimento = MyBase.Columns("PTIT_dt_vencimento")
            Me.columnPTIT_ds_nome_documento = MyBase.Columns("PTIT_ds_nome_documento")
            Me.columnPTIT_ds_local_documento = MyBase.Columns("PTIT_ds_local_documento")
            Me.columnPTIT_ds_rede_documento = MyBase.Columns("PTIT_ds_rede_documento")
            Me.columnPTIT_ds_path_documento = MyBase.Columns("PTIT_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPTIT_nm_titulo = New Global.System.Data.DataColumn("PTIT_nm_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_nm_titulo)
            Me.columnPTIT_ds_titulo = New Global.System.Data.DataColumn("PTIT_ds_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_titulo)
            Me.columnTTIT_ds_tipo_titulo = New Global.System.Data.DataColumn("TTIT_ds_tipo_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTIT_ds_tipo_titulo)
            Me.columnSITU_ds_situacao_titulo = New Global.System.Data.DataColumn("SITU_ds_situacao_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSITU_ds_situacao_titulo)
            Me.columnPTIT_dt_publicacao = New Global.System.Data.DataColumn("PTIT_dt_publicacao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_dt_publicacao)
            Me.columnPTIT_dt_vencimento = New Global.System.Data.DataColumn("PTIT_dt_vencimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_dt_vencimento)
            Me.columnPTIT_ds_nome_documento = New Global.System.Data.DataColumn("PTIT_ds_nome_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_nome_documento)
            Me.columnPTIT_ds_local_documento = New Global.System.Data.DataColumn("PTIT_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_local_documento)
            Me.columnPTIT_ds_rede_documento = New Global.System.Data.DataColumn("PTIT_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_rede_documento)
            Me.columnPTIT_ds_path_documento = New Global.System.Data.DataColumn("PTIT_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPTIT_nm_titulo.AllowDBNull = false
            Me.columnPTIT_nm_titulo.MaxLength = 50
            Me.columnPTIT_ds_titulo.AllowDBNull = false
            Me.columnPTIT_ds_titulo.MaxLength = 300
            Me.columnTTIT_ds_tipo_titulo.AllowDBNull = false
            Me.columnTTIT_ds_tipo_titulo.MaxLength = 100
            Me.columnSITU_ds_situacao_titulo.MaxLength = 100
            Me.columnPTIT_ds_nome_documento.MaxLength = 100
            Me.columnPTIT_ds_local_documento.MaxLength = 500
            Me.columnPTIT_ds_rede_documento.MaxLength = 500
            Me.columnPTIT_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewICMBIO_TITULORow() As ICMBIO_TITULORow
            Return CType(Me.NewRow,ICMBIO_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ICMBIO_TITULORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ICMBIO_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ICMBIO_TITULORowChangedEvent) Is Nothing) Then
                RaiseEvent ICMBIO_TITULORowChanged(Me, New ICMBIO_TITULORowChangeEvent(CType(e.Row,ICMBIO_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ICMBIO_TITULORowChangingEvent) Is Nothing) Then
                RaiseEvent ICMBIO_TITULORowChanging(Me, New ICMBIO_TITULORowChangeEvent(CType(e.Row,ICMBIO_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ICMBIO_TITULORowDeletedEvent) Is Nothing) Then
                RaiseEvent ICMBIO_TITULORowDeleted(Me, New ICMBIO_TITULORowChangeEvent(CType(e.Row,ICMBIO_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ICMBIO_TITULORowDeletingEvent) Is Nothing) Then
                RaiseEvent ICMBIO_TITULORowDeleting(Me, New ICMBIO_TITULORowChangeEvent(CType(e.Row,ICMBIO_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveICMBIO_TITULORow(ByVal row As ICMBIO_TITULORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ICMBIO_TITULODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PETROBRAS_TITULODataTable
        Inherits Global.System.Data.TypedTableBase(Of PETROBRAS_TITULORow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPTIT_nm_titulo As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_titulo As Global.System.Data.DataColumn
        
        Private columnTTIT_ds_tipo_titulo As Global.System.Data.DataColumn
        
        Private columnSITU_ds_situacao_titulo As Global.System.Data.DataColumn
        
        Private columnPTIT_dt_publicacao As Global.System.Data.DataColumn
        
        Private columnPTIT_dt_vencimento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_nome_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PETROBRAS_TITULO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_nm_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_nm_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTIT_ds_tipo_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTIT_ds_tipo_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SITU_ds_situacao_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSITU_ds_situacao_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_dt_publicacaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_dt_publicacao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_dt_vencimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_dt_vencimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_nome_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_nome_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PETROBRAS_TITULORow
            Get
                Return CType(Me.Rows(index),PETROBRAS_TITULORow)
            End Get
        End Property
        
        Public Event PETROBRAS_TITULORowChanging As PETROBRAS_TITULORowChangeEventHandler
        
        Public Event PETROBRAS_TITULORowChanged As PETROBRAS_TITULORowChangeEventHandler
        
        Public Event PETROBRAS_TITULORowDeleting As PETROBRAS_TITULORowChangeEventHandler
        
        Public Event PETROBRAS_TITULORowDeleted As PETROBRAS_TITULORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPETROBRAS_TITULORow(ByVal row As PETROBRAS_TITULORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPETROBRAS_TITULORow( _
                    ByVal PROC_cd_processo As String,  _
                    ByVal ORGA_nm_orgao As String,  _
                    ByVal PTIT_nm_titulo As String,  _
                    ByVal PTIT_ds_titulo As String,  _
                    ByVal TTIT_ds_tipo_titulo As String,  _
                    ByVal SITU_ds_situacao_titulo As String,  _
                    ByVal PTIT_dt_publicacao As Date,  _
                    ByVal PTIT_dt_vencimento As Date,  _
                    ByVal PTIT_ds_nome_documento As String,  _
                    ByVal PTIT_ds_local_documento As String,  _
                    ByVal PTIT_ds_rede_documento As String,  _
                    ByVal PTIT_ds_path_documento As String,  _
                    ByVal AUDT_dt_inclusao As Date,  _
                    ByVal AUDT_nm_usuario_inclusao As String,  _
                    ByVal AUDT_dt_alteracao As Date,  _
                    ByVal AUDT_nm_usuario_alteracao As String) As PETROBRAS_TITULORow
            Dim rowPETROBRAS_TITULORow As PETROBRAS_TITULORow = CType(Me.NewRow,PETROBRAS_TITULORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PTIT_nm_titulo, PTIT_ds_titulo, TTIT_ds_tipo_titulo, SITU_ds_situacao_titulo, PTIT_dt_publicacao, PTIT_dt_vencimento, PTIT_ds_nome_documento, PTIT_ds_local_documento, PTIT_ds_rede_documento, PTIT_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowPETROBRAS_TITULORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPETROBRAS_TITULORow)
            Return rowPETROBRAS_TITULORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As PETROBRAS_TITULORow
            Return CType(Me.Rows.Find(New Object() {id}),PETROBRAS_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PETROBRAS_TITULODataTable = CType(MyBase.Clone,PETROBRAS_TITULODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PETROBRAS_TITULODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPTIT_nm_titulo = MyBase.Columns("PTIT_nm_titulo")
            Me.columnPTIT_ds_titulo = MyBase.Columns("PTIT_ds_titulo")
            Me.columnTTIT_ds_tipo_titulo = MyBase.Columns("TTIT_ds_tipo_titulo")
            Me.columnSITU_ds_situacao_titulo = MyBase.Columns("SITU_ds_situacao_titulo")
            Me.columnPTIT_dt_publicacao = MyBase.Columns("PTIT_dt_publicacao")
            Me.columnPTIT_dt_vencimento = MyBase.Columns("PTIT_dt_vencimento")
            Me.columnPTIT_ds_nome_documento = MyBase.Columns("PTIT_ds_nome_documento")
            Me.columnPTIT_ds_local_documento = MyBase.Columns("PTIT_ds_local_documento")
            Me.columnPTIT_ds_rede_documento = MyBase.Columns("PTIT_ds_rede_documento")
            Me.columnPTIT_ds_path_documento = MyBase.Columns("PTIT_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPTIT_nm_titulo = New Global.System.Data.DataColumn("PTIT_nm_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_nm_titulo)
            Me.columnPTIT_ds_titulo = New Global.System.Data.DataColumn("PTIT_ds_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_titulo)
            Me.columnTTIT_ds_tipo_titulo = New Global.System.Data.DataColumn("TTIT_ds_tipo_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTIT_ds_tipo_titulo)
            Me.columnSITU_ds_situacao_titulo = New Global.System.Data.DataColumn("SITU_ds_situacao_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSITU_ds_situacao_titulo)
            Me.columnPTIT_dt_publicacao = New Global.System.Data.DataColumn("PTIT_dt_publicacao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_dt_publicacao)
            Me.columnPTIT_dt_vencimento = New Global.System.Data.DataColumn("PTIT_dt_vencimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_dt_vencimento)
            Me.columnPTIT_ds_nome_documento = New Global.System.Data.DataColumn("PTIT_ds_nome_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_nome_documento)
            Me.columnPTIT_ds_local_documento = New Global.System.Data.DataColumn("PTIT_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_local_documento)
            Me.columnPTIT_ds_rede_documento = New Global.System.Data.DataColumn("PTIT_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_rede_documento)
            Me.columnPTIT_ds_path_documento = New Global.System.Data.DataColumn("PTIT_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPTIT_nm_titulo.AllowDBNull = false
            Me.columnPTIT_nm_titulo.MaxLength = 50
            Me.columnPTIT_ds_titulo.AllowDBNull = false
            Me.columnPTIT_ds_titulo.MaxLength = 300
            Me.columnTTIT_ds_tipo_titulo.AllowDBNull = false
            Me.columnTTIT_ds_tipo_titulo.MaxLength = 100
            Me.columnSITU_ds_situacao_titulo.MaxLength = 100
            Me.columnPTIT_ds_nome_documento.MaxLength = 100
            Me.columnPTIT_ds_local_documento.MaxLength = 500
            Me.columnPTIT_ds_rede_documento.MaxLength = 500
            Me.columnPTIT_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPETROBRAS_TITULORow() As PETROBRAS_TITULORow
            Return CType(Me.NewRow,PETROBRAS_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PETROBRAS_TITULORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PETROBRAS_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PETROBRAS_TITULORowChangedEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_TITULORowChanged(Me, New PETROBRAS_TITULORowChangeEvent(CType(e.Row,PETROBRAS_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PETROBRAS_TITULORowChangingEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_TITULORowChanging(Me, New PETROBRAS_TITULORowChangeEvent(CType(e.Row,PETROBRAS_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PETROBRAS_TITULORowDeletedEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_TITULORowDeleted(Me, New PETROBRAS_TITULORowChangeEvent(CType(e.Row,PETROBRAS_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PETROBRAS_TITULORowDeletingEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_TITULORowDeleting(Me, New PETROBRAS_TITULORowChangeEvent(CType(e.Row,PETROBRAS_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePETROBRAS_TITULORow(ByVal row As PETROBRAS_TITULORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PETROBRAS_TITULODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PREFEITURA_TITULODataTable
        Inherits Global.System.Data.TypedTableBase(Of PREFEITURA_TITULORow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPTIT_nm_titulo As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_titulo As Global.System.Data.DataColumn
        
        Private columnTTIT_ds_tipo_titulo As Global.System.Data.DataColumn
        
        Private columnSITU_ds_situacao_titulo As Global.System.Data.DataColumn
        
        Private columnPTIT_dt_publicacao As Global.System.Data.DataColumn
        
        Private columnPTIT_dt_vencimento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_nome_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPTIT_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PREFEITURA_TITULO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_nm_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_nm_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTIT_ds_tipo_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTIT_ds_tipo_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SITU_ds_situacao_tituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSITU_ds_situacao_titulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_dt_publicacaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_dt_publicacao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_dt_vencimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_dt_vencimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_nome_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_nome_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTIT_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTIT_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PREFEITURA_TITULORow
            Get
                Return CType(Me.Rows(index),PREFEITURA_TITULORow)
            End Get
        End Property
        
        Public Event PREFEITURA_TITULORowChanging As PREFEITURA_TITULORowChangeEventHandler
        
        Public Event PREFEITURA_TITULORowChanged As PREFEITURA_TITULORowChangeEventHandler
        
        Public Event PREFEITURA_TITULORowDeleting As PREFEITURA_TITULORowChangeEventHandler
        
        Public Event PREFEITURA_TITULORowDeleted As PREFEITURA_TITULORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPREFEITURA_TITULORow(ByVal row As PREFEITURA_TITULORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPREFEITURA_TITULORow( _
                    ByVal PROC_cd_processo As String,  _
                    ByVal ORGA_nm_orgao As String,  _
                    ByVal PTIT_nm_titulo As String,  _
                    ByVal PTIT_ds_titulo As String,  _
                    ByVal TTIT_ds_tipo_titulo As String,  _
                    ByVal SITU_ds_situacao_titulo As String,  _
                    ByVal PTIT_dt_publicacao As Date,  _
                    ByVal PTIT_dt_vencimento As Date,  _
                    ByVal PTIT_ds_nome_documento As String,  _
                    ByVal PTIT_ds_local_documento As String,  _
                    ByVal PTIT_ds_rede_documento As String,  _
                    ByVal PTIT_ds_path_documento As String,  _
                    ByVal AUDT_dt_inclusao As Date,  _
                    ByVal AUDT_nm_usuario_inclusao As String,  _
                    ByVal AUDT_dt_alteracao As Date,  _
                    ByVal AUDT_nm_usuario_alteracao As String) As PREFEITURA_TITULORow
            Dim rowPREFEITURA_TITULORow As PREFEITURA_TITULORow = CType(Me.NewRow,PREFEITURA_TITULORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PTIT_nm_titulo, PTIT_ds_titulo, TTIT_ds_tipo_titulo, SITU_ds_situacao_titulo, PTIT_dt_publicacao, PTIT_dt_vencimento, PTIT_ds_nome_documento, PTIT_ds_local_documento, PTIT_ds_rede_documento, PTIT_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowPREFEITURA_TITULORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPREFEITURA_TITULORow)
            Return rowPREFEITURA_TITULORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As PREFEITURA_TITULORow
            Return CType(Me.Rows.Find(New Object() {id}),PREFEITURA_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PREFEITURA_TITULODataTable = CType(MyBase.Clone,PREFEITURA_TITULODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PREFEITURA_TITULODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPTIT_nm_titulo = MyBase.Columns("PTIT_nm_titulo")
            Me.columnPTIT_ds_titulo = MyBase.Columns("PTIT_ds_titulo")
            Me.columnTTIT_ds_tipo_titulo = MyBase.Columns("TTIT_ds_tipo_titulo")
            Me.columnSITU_ds_situacao_titulo = MyBase.Columns("SITU_ds_situacao_titulo")
            Me.columnPTIT_dt_publicacao = MyBase.Columns("PTIT_dt_publicacao")
            Me.columnPTIT_dt_vencimento = MyBase.Columns("PTIT_dt_vencimento")
            Me.columnPTIT_ds_nome_documento = MyBase.Columns("PTIT_ds_nome_documento")
            Me.columnPTIT_ds_local_documento = MyBase.Columns("PTIT_ds_local_documento")
            Me.columnPTIT_ds_rede_documento = MyBase.Columns("PTIT_ds_rede_documento")
            Me.columnPTIT_ds_path_documento = MyBase.Columns("PTIT_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPTIT_nm_titulo = New Global.System.Data.DataColumn("PTIT_nm_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_nm_titulo)
            Me.columnPTIT_ds_titulo = New Global.System.Data.DataColumn("PTIT_ds_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_titulo)
            Me.columnTTIT_ds_tipo_titulo = New Global.System.Data.DataColumn("TTIT_ds_tipo_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTIT_ds_tipo_titulo)
            Me.columnSITU_ds_situacao_titulo = New Global.System.Data.DataColumn("SITU_ds_situacao_titulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSITU_ds_situacao_titulo)
            Me.columnPTIT_dt_publicacao = New Global.System.Data.DataColumn("PTIT_dt_publicacao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_dt_publicacao)
            Me.columnPTIT_dt_vencimento = New Global.System.Data.DataColumn("PTIT_dt_vencimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_dt_vencimento)
            Me.columnPTIT_ds_nome_documento = New Global.System.Data.DataColumn("PTIT_ds_nome_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_nome_documento)
            Me.columnPTIT_ds_local_documento = New Global.System.Data.DataColumn("PTIT_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_local_documento)
            Me.columnPTIT_ds_rede_documento = New Global.System.Data.DataColumn("PTIT_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_rede_documento)
            Me.columnPTIT_ds_path_documento = New Global.System.Data.DataColumn("PTIT_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTIT_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPTIT_nm_titulo.AllowDBNull = false
            Me.columnPTIT_nm_titulo.MaxLength = 50
            Me.columnPTIT_ds_titulo.AllowDBNull = false
            Me.columnPTIT_ds_titulo.MaxLength = 300
            Me.columnTTIT_ds_tipo_titulo.AllowDBNull = false
            Me.columnTTIT_ds_tipo_titulo.MaxLength = 100
            Me.columnSITU_ds_situacao_titulo.MaxLength = 100
            Me.columnPTIT_ds_nome_documento.MaxLength = 100
            Me.columnPTIT_ds_local_documento.MaxLength = 500
            Me.columnPTIT_ds_rede_documento.MaxLength = 500
            Me.columnPTIT_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPREFEITURA_TITULORow() As PREFEITURA_TITULORow
            Return CType(Me.NewRow,PREFEITURA_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PREFEITURA_TITULORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PREFEITURA_TITULORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PREFEITURA_TITULORowChangedEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_TITULORowChanged(Me, New PREFEITURA_TITULORowChangeEvent(CType(e.Row,PREFEITURA_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PREFEITURA_TITULORowChangingEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_TITULORowChanging(Me, New PREFEITURA_TITULORowChangeEvent(CType(e.Row,PREFEITURA_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PREFEITURA_TITULORowDeletedEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_TITULORowDeleted(Me, New PREFEITURA_TITULORowChangeEvent(CType(e.Row,PREFEITURA_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PREFEITURA_TITULORowDeletingEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_TITULORowDeleting(Me, New PREFEITURA_TITULORowChangeEvent(CType(e.Row,PREFEITURA_TITULORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePREFEITURA_TITULORow(ByVal row As PREFEITURA_TITULORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PREFEITURA_TITULODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CETESB_SDDataTable
        Inherits Global.System.Data.TypedTableBase(Of CETESB_SDRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPRSD_nm_sd As Global.System.Data.DataColumn
        
        Private columnPRSD_dt_sd As Global.System.Data.DataColumn
        
        Private columnPRSD_nm_prc As Global.System.Data.DataColumn
        
        Private columnPRSD_nm_doc As Global.System.Data.DataColumn
        
        Private columnPRSD_dt_ini As Global.System.Data.DataColumn
        
        Private columnSISD_nm_situacao_sd As Global.System.Data.DataColumn
        
        Private columnOSSD_nm_objeto As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CETESB_SD"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRSD_nm_sdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRSD_nm_sd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRSD_dt_sdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRSD_dt_sd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRSD_nm_prcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRSD_nm_prc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRSD_nm_docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRSD_nm_doc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRSD_dt_iniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRSD_dt_ini
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SISD_nm_situacao_sdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSISD_nm_situacao_sd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OSSD_nm_objetoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOSSD_nm_objeto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CETESB_SDRow
            Get
                Return CType(Me.Rows(index),CETESB_SDRow)
            End Get
        End Property
        
        Public Event CETESB_SDRowChanging As CETESB_SDRowChangeEventHandler
        
        Public Event CETESB_SDRowChanged As CETESB_SDRowChangeEventHandler
        
        Public Event CETESB_SDRowDeleting As CETESB_SDRowChangeEventHandler
        
        Public Event CETESB_SDRowDeleted As CETESB_SDRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCETESB_SDRow(ByVal row As CETESB_SDRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCETESB_SDRow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PRSD_nm_sd As String, ByVal PRSD_dt_sd As Date, ByVal PRSD_nm_prc As String, ByVal PRSD_nm_doc As String, ByVal PRSD_dt_ini As Date, ByVal SISD_nm_situacao_sd As String, ByVal OSSD_nm_objeto As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As CETESB_SDRow
            Dim rowCETESB_SDRow As CETESB_SDRow = CType(Me.NewRow,CETESB_SDRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PRSD_nm_sd, PRSD_dt_sd, PRSD_nm_prc, PRSD_nm_doc, PRSD_dt_ini, SISD_nm_situacao_sd, OSSD_nm_objeto, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowCETESB_SDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCETESB_SDRow)
            Return rowCETESB_SDRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As CETESB_SDRow
            Return CType(Me.Rows.Find(New Object() {id}),CETESB_SDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CETESB_SDDataTable = CType(MyBase.Clone,CETESB_SDDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CETESB_SDDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPRSD_nm_sd = MyBase.Columns("PRSD_nm_sd")
            Me.columnPRSD_dt_sd = MyBase.Columns("PRSD_dt_sd")
            Me.columnPRSD_nm_prc = MyBase.Columns("PRSD_nm_prc")
            Me.columnPRSD_nm_doc = MyBase.Columns("PRSD_nm_doc")
            Me.columnPRSD_dt_ini = MyBase.Columns("PRSD_dt_ini")
            Me.columnSISD_nm_situacao_sd = MyBase.Columns("SISD_nm_situacao_sd")
            Me.columnOSSD_nm_objeto = MyBase.Columns("OSSD_nm_objeto")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPRSD_nm_sd = New Global.System.Data.DataColumn("PRSD_nm_sd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRSD_nm_sd)
            Me.columnPRSD_dt_sd = New Global.System.Data.DataColumn("PRSD_dt_sd", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRSD_dt_sd)
            Me.columnPRSD_nm_prc = New Global.System.Data.DataColumn("PRSD_nm_prc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRSD_nm_prc)
            Me.columnPRSD_nm_doc = New Global.System.Data.DataColumn("PRSD_nm_doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRSD_nm_doc)
            Me.columnPRSD_dt_ini = New Global.System.Data.DataColumn("PRSD_dt_ini", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRSD_dt_ini)
            Me.columnSISD_nm_situacao_sd = New Global.System.Data.DataColumn("SISD_nm_situacao_sd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSISD_nm_situacao_sd)
            Me.columnOSSD_nm_objeto = New Global.System.Data.DataColumn("OSSD_nm_objeto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOSSD_nm_objeto)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPRSD_nm_sd.AllowDBNull = false
            Me.columnPRSD_nm_sd.MaxLength = 30
            Me.columnPRSD_nm_prc.MaxLength = 30
            Me.columnPRSD_nm_doc.MaxLength = 30
            Me.columnSISD_nm_situacao_sd.MaxLength = 100
            Me.columnOSSD_nm_objeto.MaxLength = 100
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCETESB_SDRow() As CETESB_SDRow
            Return CType(Me.NewRow,CETESB_SDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CETESB_SDRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CETESB_SDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CETESB_SDRowChangedEvent) Is Nothing) Then
                RaiseEvent CETESB_SDRowChanged(Me, New CETESB_SDRowChangeEvent(CType(e.Row,CETESB_SDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CETESB_SDRowChangingEvent) Is Nothing) Then
                RaiseEvent CETESB_SDRowChanging(Me, New CETESB_SDRowChangeEvent(CType(e.Row,CETESB_SDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CETESB_SDRowDeletedEvent) Is Nothing) Then
                RaiseEvent CETESB_SDRowDeleted(Me, New CETESB_SDRowChangeEvent(CType(e.Row,CETESB_SDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CETESB_SDRowDeletingEvent) Is Nothing) Then
                RaiseEvent CETESB_SDRowDeleting(Me, New CETESB_SDRowChangeEvent(CType(e.Row,CETESB_SDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCETESB_SDRow(ByVal row As CETESB_SDRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CETESB_SDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DNPM_DOCDataTable
        Inherits Global.System.Data.TypedTableBase(Of DNPM_DOCRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPDOC_nm_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DNPM_DOC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_nm_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_nm_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DNPM_DOCRow
            Get
                Return CType(Me.Rows(index),DNPM_DOCRow)
            End Get
        End Property
        
        Public Event DNPM_DOCRowChanging As DNPM_DOCRowChangeEventHandler
        
        Public Event DNPM_DOCRowChanged As DNPM_DOCRowChangeEventHandler
        
        Public Event DNPM_DOCRowDeleting As DNPM_DOCRowChangeEventHandler
        
        Public Event DNPM_DOCRowDeleted As DNPM_DOCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDNPM_DOCRow(ByVal row As DNPM_DOCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDNPM_DOCRow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PDOC_nm_documento As String, ByVal PDOC_ds_documento As String, ByVal PDOC_ds_local_documento As String, ByVal PDOC_ds_rede_documento As String, ByVal PDOC_ds_path_documento As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As DNPM_DOCRow
            Dim rowDNPM_DOCRow As DNPM_DOCRow = CType(Me.NewRow,DNPM_DOCRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PDOC_nm_documento, PDOC_ds_documento, PDOC_ds_local_documento, PDOC_ds_rede_documento, PDOC_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowDNPM_DOCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDNPM_DOCRow)
            Return rowDNPM_DOCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As DNPM_DOCRow
            Return CType(Me.Rows.Find(New Object() {id}),DNPM_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DNPM_DOCDataTable = CType(MyBase.Clone,DNPM_DOCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DNPM_DOCDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPDOC_nm_documento = MyBase.Columns("PDOC_nm_documento")
            Me.columnPDOC_ds_documento = MyBase.Columns("PDOC_ds_documento")
            Me.columnPDOC_ds_local_documento = MyBase.Columns("PDOC_ds_local_documento")
            Me.columnPDOC_ds_rede_documento = MyBase.Columns("PDOC_ds_rede_documento")
            Me.columnPDOC_ds_path_documento = MyBase.Columns("PDOC_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPDOC_nm_documento = New Global.System.Data.DataColumn("PDOC_nm_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_nm_documento)
            Me.columnPDOC_ds_documento = New Global.System.Data.DataColumn("PDOC_ds_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_documento)
            Me.columnPDOC_ds_local_documento = New Global.System.Data.DataColumn("PDOC_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_local_documento)
            Me.columnPDOC_ds_rede_documento = New Global.System.Data.DataColumn("PDOC_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_rede_documento)
            Me.columnPDOC_ds_path_documento = New Global.System.Data.DataColumn("PDOC_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPDOC_nm_documento.AllowDBNull = false
            Me.columnPDOC_nm_documento.MaxLength = 100
            Me.columnPDOC_ds_documento.MaxLength = 500
            Me.columnPDOC_ds_local_documento.AllowDBNull = false
            Me.columnPDOC_ds_local_documento.MaxLength = 500
            Me.columnPDOC_ds_rede_documento.AllowDBNull = false
            Me.columnPDOC_ds_rede_documento.MaxLength = 500
            Me.columnPDOC_ds_path_documento.AllowDBNull = false
            Me.columnPDOC_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDNPM_DOCRow() As DNPM_DOCRow
            Return CType(Me.NewRow,DNPM_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DNPM_DOCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DNPM_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DNPM_DOCRowChangedEvent) Is Nothing) Then
                RaiseEvent DNPM_DOCRowChanged(Me, New DNPM_DOCRowChangeEvent(CType(e.Row,DNPM_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DNPM_DOCRowChangingEvent) Is Nothing) Then
                RaiseEvent DNPM_DOCRowChanging(Me, New DNPM_DOCRowChangeEvent(CType(e.Row,DNPM_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DNPM_DOCRowDeletedEvent) Is Nothing) Then
                RaiseEvent DNPM_DOCRowDeleted(Me, New DNPM_DOCRowChangeEvent(CType(e.Row,DNPM_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DNPM_DOCRowDeletingEvent) Is Nothing) Then
                RaiseEvent DNPM_DOCRowDeleting(Me, New DNPM_DOCRowChangeEvent(CType(e.Row,DNPM_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDNPM_DOCRow(ByVal row As DNPM_DOCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DNPM_DOCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CETESB_DOCDataTable
        Inherits Global.System.Data.TypedTableBase(Of CETESB_DOCRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPDOC_nm_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CETESB_DOC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_nm_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_nm_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CETESB_DOCRow
            Get
                Return CType(Me.Rows(index),CETESB_DOCRow)
            End Get
        End Property
        
        Public Event CETESB_DOCRowChanging As CETESB_DOCRowChangeEventHandler
        
        Public Event CETESB_DOCRowChanged As CETESB_DOCRowChangeEventHandler
        
        Public Event CETESB_DOCRowDeleting As CETESB_DOCRowChangeEventHandler
        
        Public Event CETESB_DOCRowDeleted As CETESB_DOCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCETESB_DOCRow(ByVal row As CETESB_DOCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCETESB_DOCRow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PDOC_nm_documento As String, ByVal PDOC_ds_documento As String, ByVal PDOC_ds_local_documento As String, ByVal PDOC_ds_rede_documento As String, ByVal PDOC_ds_path_documento As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As CETESB_DOCRow
            Dim rowCETESB_DOCRow As CETESB_DOCRow = CType(Me.NewRow,CETESB_DOCRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PDOC_nm_documento, PDOC_ds_documento, PDOC_ds_local_documento, PDOC_ds_rede_documento, PDOC_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowCETESB_DOCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCETESB_DOCRow)
            Return rowCETESB_DOCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As CETESB_DOCRow
            Return CType(Me.Rows.Find(New Object() {id}),CETESB_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CETESB_DOCDataTable = CType(MyBase.Clone,CETESB_DOCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CETESB_DOCDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPDOC_nm_documento = MyBase.Columns("PDOC_nm_documento")
            Me.columnPDOC_ds_documento = MyBase.Columns("PDOC_ds_documento")
            Me.columnPDOC_ds_local_documento = MyBase.Columns("PDOC_ds_local_documento")
            Me.columnPDOC_ds_rede_documento = MyBase.Columns("PDOC_ds_rede_documento")
            Me.columnPDOC_ds_path_documento = MyBase.Columns("PDOC_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPDOC_nm_documento = New Global.System.Data.DataColumn("PDOC_nm_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_nm_documento)
            Me.columnPDOC_ds_documento = New Global.System.Data.DataColumn("PDOC_ds_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_documento)
            Me.columnPDOC_ds_local_documento = New Global.System.Data.DataColumn("PDOC_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_local_documento)
            Me.columnPDOC_ds_rede_documento = New Global.System.Data.DataColumn("PDOC_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_rede_documento)
            Me.columnPDOC_ds_path_documento = New Global.System.Data.DataColumn("PDOC_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPDOC_nm_documento.AllowDBNull = false
            Me.columnPDOC_nm_documento.MaxLength = 100
            Me.columnPDOC_ds_documento.MaxLength = 500
            Me.columnPDOC_ds_local_documento.AllowDBNull = false
            Me.columnPDOC_ds_local_documento.MaxLength = 500
            Me.columnPDOC_ds_rede_documento.AllowDBNull = false
            Me.columnPDOC_ds_rede_documento.MaxLength = 500
            Me.columnPDOC_ds_path_documento.AllowDBNull = false
            Me.columnPDOC_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCETESB_DOCRow() As CETESB_DOCRow
            Return CType(Me.NewRow,CETESB_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CETESB_DOCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CETESB_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CETESB_DOCRowChangedEvent) Is Nothing) Then
                RaiseEvent CETESB_DOCRowChanged(Me, New CETESB_DOCRowChangeEvent(CType(e.Row,CETESB_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CETESB_DOCRowChangingEvent) Is Nothing) Then
                RaiseEvent CETESB_DOCRowChanging(Me, New CETESB_DOCRowChangeEvent(CType(e.Row,CETESB_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CETESB_DOCRowDeletedEvent) Is Nothing) Then
                RaiseEvent CETESB_DOCRowDeleted(Me, New CETESB_DOCRowChangeEvent(CType(e.Row,CETESB_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CETESB_DOCRowDeletingEvent) Is Nothing) Then
                RaiseEvent CETESB_DOCRowDeleting(Me, New CETESB_DOCRowChangeEvent(CType(e.Row,CETESB_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCETESB_DOCRow(ByVal row As CETESB_DOCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CETESB_DOCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DAEE_DOCDataTable
        Inherits Global.System.Data.TypedTableBase(Of DAEE_DOCRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPDOC_nm_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DAEE_DOC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_nm_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_nm_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DAEE_DOCRow
            Get
                Return CType(Me.Rows(index),DAEE_DOCRow)
            End Get
        End Property
        
        Public Event DAEE_DOCRowChanging As DAEE_DOCRowChangeEventHandler
        
        Public Event DAEE_DOCRowChanged As DAEE_DOCRowChangeEventHandler
        
        Public Event DAEE_DOCRowDeleting As DAEE_DOCRowChangeEventHandler
        
        Public Event DAEE_DOCRowDeleted As DAEE_DOCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDAEE_DOCRow(ByVal row As DAEE_DOCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDAEE_DOCRow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PDOC_nm_documento As String, ByVal PDOC_ds_documento As String, ByVal PDOC_ds_local_documento As String, ByVal PDOC_ds_rede_documento As String, ByVal PDOC_ds_path_documento As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As DAEE_DOCRow
            Dim rowDAEE_DOCRow As DAEE_DOCRow = CType(Me.NewRow,DAEE_DOCRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PDOC_nm_documento, PDOC_ds_documento, PDOC_ds_local_documento, PDOC_ds_rede_documento, PDOC_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowDAEE_DOCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDAEE_DOCRow)
            Return rowDAEE_DOCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As DAEE_DOCRow
            Return CType(Me.Rows.Find(New Object() {id}),DAEE_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DAEE_DOCDataTable = CType(MyBase.Clone,DAEE_DOCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DAEE_DOCDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPDOC_nm_documento = MyBase.Columns("PDOC_nm_documento")
            Me.columnPDOC_ds_documento = MyBase.Columns("PDOC_ds_documento")
            Me.columnPDOC_ds_local_documento = MyBase.Columns("PDOC_ds_local_documento")
            Me.columnPDOC_ds_rede_documento = MyBase.Columns("PDOC_ds_rede_documento")
            Me.columnPDOC_ds_path_documento = MyBase.Columns("PDOC_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPDOC_nm_documento = New Global.System.Data.DataColumn("PDOC_nm_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_nm_documento)
            Me.columnPDOC_ds_documento = New Global.System.Data.DataColumn("PDOC_ds_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_documento)
            Me.columnPDOC_ds_local_documento = New Global.System.Data.DataColumn("PDOC_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_local_documento)
            Me.columnPDOC_ds_rede_documento = New Global.System.Data.DataColumn("PDOC_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_rede_documento)
            Me.columnPDOC_ds_path_documento = New Global.System.Data.DataColumn("PDOC_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPDOC_nm_documento.AllowDBNull = false
            Me.columnPDOC_nm_documento.MaxLength = 100
            Me.columnPDOC_ds_documento.MaxLength = 500
            Me.columnPDOC_ds_local_documento.AllowDBNull = false
            Me.columnPDOC_ds_local_documento.MaxLength = 500
            Me.columnPDOC_ds_rede_documento.AllowDBNull = false
            Me.columnPDOC_ds_rede_documento.MaxLength = 500
            Me.columnPDOC_ds_path_documento.AllowDBNull = false
            Me.columnPDOC_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDAEE_DOCRow() As DAEE_DOCRow
            Return CType(Me.NewRow,DAEE_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DAEE_DOCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DAEE_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DAEE_DOCRowChangedEvent) Is Nothing) Then
                RaiseEvent DAEE_DOCRowChanged(Me, New DAEE_DOCRowChangeEvent(CType(e.Row,DAEE_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DAEE_DOCRowChangingEvent) Is Nothing) Then
                RaiseEvent DAEE_DOCRowChanging(Me, New DAEE_DOCRowChangeEvent(CType(e.Row,DAEE_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DAEE_DOCRowDeletedEvent) Is Nothing) Then
                RaiseEvent DAEE_DOCRowDeleted(Me, New DAEE_DOCRowChangeEvent(CType(e.Row,DAEE_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DAEE_DOCRowDeletingEvent) Is Nothing) Then
                RaiseEvent DAEE_DOCRowDeleting(Me, New DAEE_DOCRowChangeEvent(CType(e.Row,DAEE_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDAEE_DOCRow(ByVal row As DAEE_DOCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DAEE_DOCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ICMBIO_DOCDataTable
        Inherits Global.System.Data.TypedTableBase(Of ICMBIO_DOCRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPDOC_nm_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ICMBIO_DOC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_nm_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_nm_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ICMBIO_DOCRow
            Get
                Return CType(Me.Rows(index),ICMBIO_DOCRow)
            End Get
        End Property
        
        Public Event ICMBIO_DOCRowChanging As ICMBIO_DOCRowChangeEventHandler
        
        Public Event ICMBIO_DOCRowChanged As ICMBIO_DOCRowChangeEventHandler
        
        Public Event ICMBIO_DOCRowDeleting As ICMBIO_DOCRowChangeEventHandler
        
        Public Event ICMBIO_DOCRowDeleted As ICMBIO_DOCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddICMBIO_DOCRow(ByVal row As ICMBIO_DOCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddICMBIO_DOCRow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PDOC_nm_documento As String, ByVal PDOC_ds_documento As String, ByVal PDOC_ds_local_documento As String, ByVal PDOC_ds_rede_documento As String, ByVal PDOC_ds_path_documento As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As ICMBIO_DOCRow
            Dim rowICMBIO_DOCRow As ICMBIO_DOCRow = CType(Me.NewRow,ICMBIO_DOCRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PDOC_nm_documento, PDOC_ds_documento, PDOC_ds_local_documento, PDOC_ds_rede_documento, PDOC_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowICMBIO_DOCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowICMBIO_DOCRow)
            Return rowICMBIO_DOCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As ICMBIO_DOCRow
            Return CType(Me.Rows.Find(New Object() {id}),ICMBIO_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ICMBIO_DOCDataTable = CType(MyBase.Clone,ICMBIO_DOCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ICMBIO_DOCDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPDOC_nm_documento = MyBase.Columns("PDOC_nm_documento")
            Me.columnPDOC_ds_documento = MyBase.Columns("PDOC_ds_documento")
            Me.columnPDOC_ds_local_documento = MyBase.Columns("PDOC_ds_local_documento")
            Me.columnPDOC_ds_rede_documento = MyBase.Columns("PDOC_ds_rede_documento")
            Me.columnPDOC_ds_path_documento = MyBase.Columns("PDOC_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPDOC_nm_documento = New Global.System.Data.DataColumn("PDOC_nm_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_nm_documento)
            Me.columnPDOC_ds_documento = New Global.System.Data.DataColumn("PDOC_ds_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_documento)
            Me.columnPDOC_ds_local_documento = New Global.System.Data.DataColumn("PDOC_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_local_documento)
            Me.columnPDOC_ds_rede_documento = New Global.System.Data.DataColumn("PDOC_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_rede_documento)
            Me.columnPDOC_ds_path_documento = New Global.System.Data.DataColumn("PDOC_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPDOC_nm_documento.AllowDBNull = false
            Me.columnPDOC_nm_documento.MaxLength = 100
            Me.columnPDOC_ds_documento.MaxLength = 500
            Me.columnPDOC_ds_local_documento.AllowDBNull = false
            Me.columnPDOC_ds_local_documento.MaxLength = 500
            Me.columnPDOC_ds_rede_documento.AllowDBNull = false
            Me.columnPDOC_ds_rede_documento.MaxLength = 500
            Me.columnPDOC_ds_path_documento.AllowDBNull = false
            Me.columnPDOC_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewICMBIO_DOCRow() As ICMBIO_DOCRow
            Return CType(Me.NewRow,ICMBIO_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ICMBIO_DOCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ICMBIO_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ICMBIO_DOCRowChangedEvent) Is Nothing) Then
                RaiseEvent ICMBIO_DOCRowChanged(Me, New ICMBIO_DOCRowChangeEvent(CType(e.Row,ICMBIO_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ICMBIO_DOCRowChangingEvent) Is Nothing) Then
                RaiseEvent ICMBIO_DOCRowChanging(Me, New ICMBIO_DOCRowChangeEvent(CType(e.Row,ICMBIO_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ICMBIO_DOCRowDeletedEvent) Is Nothing) Then
                RaiseEvent ICMBIO_DOCRowDeleted(Me, New ICMBIO_DOCRowChangeEvent(CType(e.Row,ICMBIO_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ICMBIO_DOCRowDeletingEvent) Is Nothing) Then
                RaiseEvent ICMBIO_DOCRowDeleting(Me, New ICMBIO_DOCRowChangeEvent(CType(e.Row,ICMBIO_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveICMBIO_DOCRow(ByVal row As ICMBIO_DOCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ICMBIO_DOCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PETROBRAS_DOCDataTable
        Inherits Global.System.Data.TypedTableBase(Of PETROBRAS_DOCRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPDOC_nm_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PETROBRAS_DOC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_nm_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_nm_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PETROBRAS_DOCRow
            Get
                Return CType(Me.Rows(index),PETROBRAS_DOCRow)
            End Get
        End Property
        
        Public Event PETROBRAS_DOCRowChanging As PETROBRAS_DOCRowChangeEventHandler
        
        Public Event PETROBRAS_DOCRowChanged As PETROBRAS_DOCRowChangeEventHandler
        
        Public Event PETROBRAS_DOCRowDeleting As PETROBRAS_DOCRowChangeEventHandler
        
        Public Event PETROBRAS_DOCRowDeleted As PETROBRAS_DOCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPETROBRAS_DOCRow(ByVal row As PETROBRAS_DOCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPETROBRAS_DOCRow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PDOC_nm_documento As String, ByVal PDOC_ds_documento As String, ByVal PDOC_ds_local_documento As String, ByVal PDOC_ds_rede_documento As String, ByVal PDOC_ds_path_documento As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As PETROBRAS_DOCRow
            Dim rowPETROBRAS_DOCRow As PETROBRAS_DOCRow = CType(Me.NewRow,PETROBRAS_DOCRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PDOC_nm_documento, PDOC_ds_documento, PDOC_ds_local_documento, PDOC_ds_rede_documento, PDOC_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowPETROBRAS_DOCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPETROBRAS_DOCRow)
            Return rowPETROBRAS_DOCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As PETROBRAS_DOCRow
            Return CType(Me.Rows.Find(New Object() {id}),PETROBRAS_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PETROBRAS_DOCDataTable = CType(MyBase.Clone,PETROBRAS_DOCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PETROBRAS_DOCDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPDOC_nm_documento = MyBase.Columns("PDOC_nm_documento")
            Me.columnPDOC_ds_documento = MyBase.Columns("PDOC_ds_documento")
            Me.columnPDOC_ds_local_documento = MyBase.Columns("PDOC_ds_local_documento")
            Me.columnPDOC_ds_rede_documento = MyBase.Columns("PDOC_ds_rede_documento")
            Me.columnPDOC_ds_path_documento = MyBase.Columns("PDOC_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPDOC_nm_documento = New Global.System.Data.DataColumn("PDOC_nm_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_nm_documento)
            Me.columnPDOC_ds_documento = New Global.System.Data.DataColumn("PDOC_ds_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_documento)
            Me.columnPDOC_ds_local_documento = New Global.System.Data.DataColumn("PDOC_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_local_documento)
            Me.columnPDOC_ds_rede_documento = New Global.System.Data.DataColumn("PDOC_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_rede_documento)
            Me.columnPDOC_ds_path_documento = New Global.System.Data.DataColumn("PDOC_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPDOC_nm_documento.AllowDBNull = false
            Me.columnPDOC_nm_documento.MaxLength = 100
            Me.columnPDOC_ds_documento.MaxLength = 500
            Me.columnPDOC_ds_local_documento.AllowDBNull = false
            Me.columnPDOC_ds_local_documento.MaxLength = 500
            Me.columnPDOC_ds_rede_documento.AllowDBNull = false
            Me.columnPDOC_ds_rede_documento.MaxLength = 500
            Me.columnPDOC_ds_path_documento.AllowDBNull = false
            Me.columnPDOC_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPETROBRAS_DOCRow() As PETROBRAS_DOCRow
            Return CType(Me.NewRow,PETROBRAS_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PETROBRAS_DOCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PETROBRAS_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PETROBRAS_DOCRowChangedEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_DOCRowChanged(Me, New PETROBRAS_DOCRowChangeEvent(CType(e.Row,PETROBRAS_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PETROBRAS_DOCRowChangingEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_DOCRowChanging(Me, New PETROBRAS_DOCRowChangeEvent(CType(e.Row,PETROBRAS_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PETROBRAS_DOCRowDeletedEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_DOCRowDeleted(Me, New PETROBRAS_DOCRowChangeEvent(CType(e.Row,PETROBRAS_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PETROBRAS_DOCRowDeletingEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_DOCRowDeleting(Me, New PETROBRAS_DOCRowChangeEvent(CType(e.Row,PETROBRAS_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePETROBRAS_DOCRow(ByVal row As PETROBRAS_DOCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PETROBRAS_DOCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PREFEITURA_DOCDataTable
        Inherits Global.System.Data.TypedTableBase(Of PREFEITURA_DOCRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPDOC_nm_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_local_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_rede_documento As Global.System.Data.DataColumn
        
        Private columnPDOC_ds_path_documento As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PREFEITURA_DOC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_nm_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_nm_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_local_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_local_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_rede_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_rede_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDOC_ds_path_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDOC_ds_path_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PREFEITURA_DOCRow
            Get
                Return CType(Me.Rows(index),PREFEITURA_DOCRow)
            End Get
        End Property
        
        Public Event PREFEITURA_DOCRowChanging As PREFEITURA_DOCRowChangeEventHandler
        
        Public Event PREFEITURA_DOCRowChanged As PREFEITURA_DOCRowChangeEventHandler
        
        Public Event PREFEITURA_DOCRowDeleting As PREFEITURA_DOCRowChangeEventHandler
        
        Public Event PREFEITURA_DOCRowDeleted As PREFEITURA_DOCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPREFEITURA_DOCRow(ByVal row As PREFEITURA_DOCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPREFEITURA_DOCRow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PDOC_nm_documento As String, ByVal PDOC_ds_documento As String, ByVal PDOC_ds_local_documento As String, ByVal PDOC_ds_rede_documento As String, ByVal PDOC_ds_path_documento As String, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As PREFEITURA_DOCRow
            Dim rowPREFEITURA_DOCRow As PREFEITURA_DOCRow = CType(Me.NewRow,PREFEITURA_DOCRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PDOC_nm_documento, PDOC_ds_documento, PDOC_ds_local_documento, PDOC_ds_rede_documento, PDOC_ds_path_documento, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowPREFEITURA_DOCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPREFEITURA_DOCRow)
            Return rowPREFEITURA_DOCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As PREFEITURA_DOCRow
            Return CType(Me.Rows.Find(New Object() {id}),PREFEITURA_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PREFEITURA_DOCDataTable = CType(MyBase.Clone,PREFEITURA_DOCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PREFEITURA_DOCDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPDOC_nm_documento = MyBase.Columns("PDOC_nm_documento")
            Me.columnPDOC_ds_documento = MyBase.Columns("PDOC_ds_documento")
            Me.columnPDOC_ds_local_documento = MyBase.Columns("PDOC_ds_local_documento")
            Me.columnPDOC_ds_rede_documento = MyBase.Columns("PDOC_ds_rede_documento")
            Me.columnPDOC_ds_path_documento = MyBase.Columns("PDOC_ds_path_documento")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPDOC_nm_documento = New Global.System.Data.DataColumn("PDOC_nm_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_nm_documento)
            Me.columnPDOC_ds_documento = New Global.System.Data.DataColumn("PDOC_ds_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_documento)
            Me.columnPDOC_ds_local_documento = New Global.System.Data.DataColumn("PDOC_ds_local_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_local_documento)
            Me.columnPDOC_ds_rede_documento = New Global.System.Data.DataColumn("PDOC_ds_rede_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_rede_documento)
            Me.columnPDOC_ds_path_documento = New Global.System.Data.DataColumn("PDOC_ds_path_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDOC_ds_path_documento)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPDOC_nm_documento.AllowDBNull = false
            Me.columnPDOC_nm_documento.MaxLength = 100
            Me.columnPDOC_ds_documento.MaxLength = 500
            Me.columnPDOC_ds_local_documento.AllowDBNull = false
            Me.columnPDOC_ds_local_documento.MaxLength = 500
            Me.columnPDOC_ds_rede_documento.AllowDBNull = false
            Me.columnPDOC_ds_rede_documento.MaxLength = 500
            Me.columnPDOC_ds_path_documento.AllowDBNull = false
            Me.columnPDOC_ds_path_documento.MaxLength = 500
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPREFEITURA_DOCRow() As PREFEITURA_DOCRow
            Return CType(Me.NewRow,PREFEITURA_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PREFEITURA_DOCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PREFEITURA_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PREFEITURA_DOCRowChangedEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_DOCRowChanged(Me, New PREFEITURA_DOCRowChangeEvent(CType(e.Row,PREFEITURA_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PREFEITURA_DOCRowChangingEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_DOCRowChanging(Me, New PREFEITURA_DOCRowChangeEvent(CType(e.Row,PREFEITURA_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PREFEITURA_DOCRowDeletedEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_DOCRowDeleted(Me, New PREFEITURA_DOCRowChangeEvent(CType(e.Row,PREFEITURA_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PREFEITURA_DOCRowDeletingEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_DOCRowDeleting(Me, New PREFEITURA_DOCRowChangeEvent(CType(e.Row,PREFEITURA_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePREFEITURA_DOCRow(ByVal row As PREFEITURA_DOCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PREFEITURA_DOCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CETESB_NOTADataTable
        Inherits Global.System.Data.TypedTableBase(Of CETESB_NOTARow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPNOT_cd_nota As Global.System.Data.DataColumn
        
        Private columnPNOT_ds_nota As Global.System.Data.DataColumn
        
        Private columnPNOT_dt_ocorrencia As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CETESB_NOTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_cd_notaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_cd_nota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_ds_notaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_ds_nota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_dt_ocorrenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_dt_ocorrencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CETESB_NOTARow
            Get
                Return CType(Me.Rows(index),CETESB_NOTARow)
            End Get
        End Property
        
        Public Event CETESB_NOTARowChanging As CETESB_NOTARowChangeEventHandler
        
        Public Event CETESB_NOTARowChanged As CETESB_NOTARowChangeEventHandler
        
        Public Event CETESB_NOTARowDeleting As CETESB_NOTARowChangeEventHandler
        
        Public Event CETESB_NOTARowDeleted As CETESB_NOTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCETESB_NOTARow(ByVal row As CETESB_NOTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCETESB_NOTARow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PNOT_cd_nota As Integer, ByVal PNOT_ds_nota As String, ByVal PNOT_dt_ocorrencia As Date, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As CETESB_NOTARow
            Dim rowCETESB_NOTARow As CETESB_NOTARow = CType(Me.NewRow,CETESB_NOTARow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PNOT_cd_nota, PNOT_ds_nota, PNOT_dt_ocorrencia, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowCETESB_NOTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCETESB_NOTARow)
            Return rowCETESB_NOTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As CETESB_NOTARow
            Return CType(Me.Rows.Find(New Object() {id}),CETESB_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CETESB_NOTADataTable = CType(MyBase.Clone,CETESB_NOTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CETESB_NOTADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPNOT_cd_nota = MyBase.Columns("PNOT_cd_nota")
            Me.columnPNOT_ds_nota = MyBase.Columns("PNOT_ds_nota")
            Me.columnPNOT_dt_ocorrencia = MyBase.Columns("PNOT_dt_ocorrencia")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPNOT_cd_nota = New Global.System.Data.DataColumn("PNOT_cd_nota", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_cd_nota)
            Me.columnPNOT_ds_nota = New Global.System.Data.DataColumn("PNOT_ds_nota", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_ds_nota)
            Me.columnPNOT_dt_ocorrencia = New Global.System.Data.DataColumn("PNOT_dt_ocorrencia", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_dt_ocorrencia)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPNOT_cd_nota.AllowDBNull = false
            Me.columnPNOT_ds_nota.AllowDBNull = false
            Me.columnPNOT_ds_nota.MaxLength = 1000
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCETESB_NOTARow() As CETESB_NOTARow
            Return CType(Me.NewRow,CETESB_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CETESB_NOTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CETESB_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CETESB_NOTARowChangedEvent) Is Nothing) Then
                RaiseEvent CETESB_NOTARowChanged(Me, New CETESB_NOTARowChangeEvent(CType(e.Row,CETESB_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CETESB_NOTARowChangingEvent) Is Nothing) Then
                RaiseEvent CETESB_NOTARowChanging(Me, New CETESB_NOTARowChangeEvent(CType(e.Row,CETESB_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CETESB_NOTARowDeletedEvent) Is Nothing) Then
                RaiseEvent CETESB_NOTARowDeleted(Me, New CETESB_NOTARowChangeEvent(CType(e.Row,CETESB_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CETESB_NOTARowDeletingEvent) Is Nothing) Then
                RaiseEvent CETESB_NOTARowDeleting(Me, New CETESB_NOTARowChangeEvent(CType(e.Row,CETESB_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCETESB_NOTARow(ByVal row As CETESB_NOTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CETESB_NOTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DAEE_NOTADataTable
        Inherits Global.System.Data.TypedTableBase(Of DAEE_NOTARow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPNOT_cd_nota As Global.System.Data.DataColumn
        
        Private columnPNOT_ds_nota As Global.System.Data.DataColumn
        
        Private columnPNOT_dt_ocorrencia As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DAEE_NOTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_cd_notaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_cd_nota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_ds_notaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_ds_nota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_dt_ocorrenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_dt_ocorrencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DAEE_NOTARow
            Get
                Return CType(Me.Rows(index),DAEE_NOTARow)
            End Get
        End Property
        
        Public Event DAEE_NOTARowChanging As DAEE_NOTARowChangeEventHandler
        
        Public Event DAEE_NOTARowChanged As DAEE_NOTARowChangeEventHandler
        
        Public Event DAEE_NOTARowDeleting As DAEE_NOTARowChangeEventHandler
        
        Public Event DAEE_NOTARowDeleted As DAEE_NOTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDAEE_NOTARow(ByVal row As DAEE_NOTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDAEE_NOTARow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PNOT_cd_nota As Integer, ByVal PNOT_ds_nota As String, ByVal PNOT_dt_ocorrencia As Date, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As DAEE_NOTARow
            Dim rowDAEE_NOTARow As DAEE_NOTARow = CType(Me.NewRow,DAEE_NOTARow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PNOT_cd_nota, PNOT_ds_nota, PNOT_dt_ocorrencia, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowDAEE_NOTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDAEE_NOTARow)
            Return rowDAEE_NOTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As DAEE_NOTARow
            Return CType(Me.Rows.Find(New Object() {id}),DAEE_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DAEE_NOTADataTable = CType(MyBase.Clone,DAEE_NOTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DAEE_NOTADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPNOT_cd_nota = MyBase.Columns("PNOT_cd_nota")
            Me.columnPNOT_ds_nota = MyBase.Columns("PNOT_ds_nota")
            Me.columnPNOT_dt_ocorrencia = MyBase.Columns("PNOT_dt_ocorrencia")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPNOT_cd_nota = New Global.System.Data.DataColumn("PNOT_cd_nota", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_cd_nota)
            Me.columnPNOT_ds_nota = New Global.System.Data.DataColumn("PNOT_ds_nota", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_ds_nota)
            Me.columnPNOT_dt_ocorrencia = New Global.System.Data.DataColumn("PNOT_dt_ocorrencia", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_dt_ocorrencia)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPNOT_cd_nota.AllowDBNull = false
            Me.columnPNOT_ds_nota.AllowDBNull = false
            Me.columnPNOT_ds_nota.MaxLength = 1000
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDAEE_NOTARow() As DAEE_NOTARow
            Return CType(Me.NewRow,DAEE_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DAEE_NOTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DAEE_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DAEE_NOTARowChangedEvent) Is Nothing) Then
                RaiseEvent DAEE_NOTARowChanged(Me, New DAEE_NOTARowChangeEvent(CType(e.Row,DAEE_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DAEE_NOTARowChangingEvent) Is Nothing) Then
                RaiseEvent DAEE_NOTARowChanging(Me, New DAEE_NOTARowChangeEvent(CType(e.Row,DAEE_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DAEE_NOTARowDeletedEvent) Is Nothing) Then
                RaiseEvent DAEE_NOTARowDeleted(Me, New DAEE_NOTARowChangeEvent(CType(e.Row,DAEE_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DAEE_NOTARowDeletingEvent) Is Nothing) Then
                RaiseEvent DAEE_NOTARowDeleting(Me, New DAEE_NOTARowChangeEvent(CType(e.Row,DAEE_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDAEE_NOTARow(ByVal row As DAEE_NOTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DAEE_NOTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ICMBIO_NOTADataTable
        Inherits Global.System.Data.TypedTableBase(Of ICMBIO_NOTARow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPNOT_cd_nota As Global.System.Data.DataColumn
        
        Private columnPNOT_ds_nota As Global.System.Data.DataColumn
        
        Private columnPNOT_dt_ocorrencia As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ICMBIO_NOTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_cd_notaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_cd_nota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_ds_notaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_ds_nota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_dt_ocorrenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_dt_ocorrencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ICMBIO_NOTARow
            Get
                Return CType(Me.Rows(index),ICMBIO_NOTARow)
            End Get
        End Property
        
        Public Event ICMBIO_NOTARowChanging As ICMBIO_NOTARowChangeEventHandler
        
        Public Event ICMBIO_NOTARowChanged As ICMBIO_NOTARowChangeEventHandler
        
        Public Event ICMBIO_NOTARowDeleting As ICMBIO_NOTARowChangeEventHandler
        
        Public Event ICMBIO_NOTARowDeleted As ICMBIO_NOTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddICMBIO_NOTARow(ByVal row As ICMBIO_NOTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddICMBIO_NOTARow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PNOT_cd_nota As Integer, ByVal PNOT_ds_nota As String, ByVal PNOT_dt_ocorrencia As Date, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As ICMBIO_NOTARow
            Dim rowICMBIO_NOTARow As ICMBIO_NOTARow = CType(Me.NewRow,ICMBIO_NOTARow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PNOT_cd_nota, PNOT_ds_nota, PNOT_dt_ocorrencia, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowICMBIO_NOTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowICMBIO_NOTARow)
            Return rowICMBIO_NOTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As ICMBIO_NOTARow
            Return CType(Me.Rows.Find(New Object() {id}),ICMBIO_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ICMBIO_NOTADataTable = CType(MyBase.Clone,ICMBIO_NOTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ICMBIO_NOTADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPNOT_cd_nota = MyBase.Columns("PNOT_cd_nota")
            Me.columnPNOT_ds_nota = MyBase.Columns("PNOT_ds_nota")
            Me.columnPNOT_dt_ocorrencia = MyBase.Columns("PNOT_dt_ocorrencia")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPNOT_cd_nota = New Global.System.Data.DataColumn("PNOT_cd_nota", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_cd_nota)
            Me.columnPNOT_ds_nota = New Global.System.Data.DataColumn("PNOT_ds_nota", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_ds_nota)
            Me.columnPNOT_dt_ocorrencia = New Global.System.Data.DataColumn("PNOT_dt_ocorrencia", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_dt_ocorrencia)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPNOT_cd_nota.AllowDBNull = false
            Me.columnPNOT_ds_nota.AllowDBNull = false
            Me.columnPNOT_ds_nota.MaxLength = 1000
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewICMBIO_NOTARow() As ICMBIO_NOTARow
            Return CType(Me.NewRow,ICMBIO_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ICMBIO_NOTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ICMBIO_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ICMBIO_NOTARowChangedEvent) Is Nothing) Then
                RaiseEvent ICMBIO_NOTARowChanged(Me, New ICMBIO_NOTARowChangeEvent(CType(e.Row,ICMBIO_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ICMBIO_NOTARowChangingEvent) Is Nothing) Then
                RaiseEvent ICMBIO_NOTARowChanging(Me, New ICMBIO_NOTARowChangeEvent(CType(e.Row,ICMBIO_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ICMBIO_NOTARowDeletedEvent) Is Nothing) Then
                RaiseEvent ICMBIO_NOTARowDeleted(Me, New ICMBIO_NOTARowChangeEvent(CType(e.Row,ICMBIO_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ICMBIO_NOTARowDeletingEvent) Is Nothing) Then
                RaiseEvent ICMBIO_NOTARowDeleting(Me, New ICMBIO_NOTARowChangeEvent(CType(e.Row,ICMBIO_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveICMBIO_NOTARow(ByVal row As ICMBIO_NOTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ICMBIO_NOTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PETROBRAS_NOTADataTable
        Inherits Global.System.Data.TypedTableBase(Of PETROBRAS_NOTARow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPNOT_cd_nota As Global.System.Data.DataColumn
        
        Private columnPNOT_ds_nota As Global.System.Data.DataColumn
        
        Private columnPNOT_dt_ocorrencia As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PETROBRAS_NOTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_cd_notaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_cd_nota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_ds_notaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_ds_nota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_dt_ocorrenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_dt_ocorrencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PETROBRAS_NOTARow
            Get
                Return CType(Me.Rows(index),PETROBRAS_NOTARow)
            End Get
        End Property
        
        Public Event PETROBRAS_NOTARowChanging As PETROBRAS_NOTARowChangeEventHandler
        
        Public Event PETROBRAS_NOTARowChanged As PETROBRAS_NOTARowChangeEventHandler
        
        Public Event PETROBRAS_NOTARowDeleting As PETROBRAS_NOTARowChangeEventHandler
        
        Public Event PETROBRAS_NOTARowDeleted As PETROBRAS_NOTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPETROBRAS_NOTARow(ByVal row As PETROBRAS_NOTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPETROBRAS_NOTARow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PNOT_cd_nota As Integer, ByVal PNOT_ds_nota As String, ByVal PNOT_dt_ocorrencia As Date, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As PETROBRAS_NOTARow
            Dim rowPETROBRAS_NOTARow As PETROBRAS_NOTARow = CType(Me.NewRow,PETROBRAS_NOTARow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PNOT_cd_nota, PNOT_ds_nota, PNOT_dt_ocorrencia, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowPETROBRAS_NOTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPETROBRAS_NOTARow)
            Return rowPETROBRAS_NOTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As PETROBRAS_NOTARow
            Return CType(Me.Rows.Find(New Object() {id}),PETROBRAS_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PETROBRAS_NOTADataTable = CType(MyBase.Clone,PETROBRAS_NOTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PETROBRAS_NOTADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPNOT_cd_nota = MyBase.Columns("PNOT_cd_nota")
            Me.columnPNOT_ds_nota = MyBase.Columns("PNOT_ds_nota")
            Me.columnPNOT_dt_ocorrencia = MyBase.Columns("PNOT_dt_ocorrencia")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPNOT_cd_nota = New Global.System.Data.DataColumn("PNOT_cd_nota", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_cd_nota)
            Me.columnPNOT_ds_nota = New Global.System.Data.DataColumn("PNOT_ds_nota", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_ds_nota)
            Me.columnPNOT_dt_ocorrencia = New Global.System.Data.DataColumn("PNOT_dt_ocorrencia", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_dt_ocorrencia)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPNOT_cd_nota.AllowDBNull = false
            Me.columnPNOT_ds_nota.AllowDBNull = false
            Me.columnPNOT_ds_nota.MaxLength = 1000
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPETROBRAS_NOTARow() As PETROBRAS_NOTARow
            Return CType(Me.NewRow,PETROBRAS_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PETROBRAS_NOTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PETROBRAS_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PETROBRAS_NOTARowChangedEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_NOTARowChanged(Me, New PETROBRAS_NOTARowChangeEvent(CType(e.Row,PETROBRAS_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PETROBRAS_NOTARowChangingEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_NOTARowChanging(Me, New PETROBRAS_NOTARowChangeEvent(CType(e.Row,PETROBRAS_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PETROBRAS_NOTARowDeletedEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_NOTARowDeleted(Me, New PETROBRAS_NOTARowChangeEvent(CType(e.Row,PETROBRAS_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PETROBRAS_NOTARowDeletingEvent) Is Nothing) Then
                RaiseEvent PETROBRAS_NOTARowDeleting(Me, New PETROBRAS_NOTARowChangeEvent(CType(e.Row,PETROBRAS_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePETROBRAS_NOTARow(ByVal row As PETROBRAS_NOTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PETROBRAS_NOTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PREFEITURA_NOTADataTable
        Inherits Global.System.Data.TypedTableBase(Of PREFEITURA_NOTARow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPNOT_cd_nota As Global.System.Data.DataColumn
        
        Private columnPNOT_ds_nota As Global.System.Data.DataColumn
        
        Private columnPNOT_dt_ocorrencia As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PREFEITURA_NOTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_cd_notaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_cd_nota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_ds_notaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_ds_nota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PNOT_dt_ocorrenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNOT_dt_ocorrencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PREFEITURA_NOTARow
            Get
                Return CType(Me.Rows(index),PREFEITURA_NOTARow)
            End Get
        End Property
        
        Public Event PREFEITURA_NOTARowChanging As PREFEITURA_NOTARowChangeEventHandler
        
        Public Event PREFEITURA_NOTARowChanged As PREFEITURA_NOTARowChangeEventHandler
        
        Public Event PREFEITURA_NOTARowDeleting As PREFEITURA_NOTARowChangeEventHandler
        
        Public Event PREFEITURA_NOTARowDeleted As PREFEITURA_NOTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPREFEITURA_NOTARow(ByVal row As PREFEITURA_NOTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPREFEITURA_NOTARow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PNOT_cd_nota As Integer, ByVal PNOT_ds_nota As String, ByVal PNOT_dt_ocorrencia As Date, ByVal AUDT_dt_inclusao As Date, ByVal AUDT_nm_usuario_inclusao As String, ByVal AUDT_dt_alteracao As Date, ByVal AUDT_nm_usuario_alteracao As String) As PREFEITURA_NOTARow
            Dim rowPREFEITURA_NOTARow As PREFEITURA_NOTARow = CType(Me.NewRow,PREFEITURA_NOTARow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, ORGA_nm_orgao, PNOT_cd_nota, PNOT_ds_nota, PNOT_dt_ocorrencia, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao}
            rowPREFEITURA_NOTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPREFEITURA_NOTARow)
            Return rowPREFEITURA_NOTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As PREFEITURA_NOTARow
            Return CType(Me.Rows.Find(New Object() {id}),PREFEITURA_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PREFEITURA_NOTADataTable = CType(MyBase.Clone,PREFEITURA_NOTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PREFEITURA_NOTADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPNOT_cd_nota = MyBase.Columns("PNOT_cd_nota")
            Me.columnPNOT_ds_nota = MyBase.Columns("PNOT_ds_nota")
            Me.columnPNOT_dt_ocorrencia = MyBase.Columns("PNOT_dt_ocorrencia")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPNOT_cd_nota = New Global.System.Data.DataColumn("PNOT_cd_nota", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_cd_nota)
            Me.columnPNOT_ds_nota = New Global.System.Data.DataColumn("PNOT_ds_nota", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_ds_nota)
            Me.columnPNOT_dt_ocorrencia = New Global.System.Data.DataColumn("PNOT_dt_ocorrencia", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNOT_dt_ocorrencia)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnORGA_nm_orgao.AllowDBNull = false
            Me.columnORGA_nm_orgao.MaxLength = 10
            Me.columnPNOT_cd_nota.AllowDBNull = false
            Me.columnPNOT_ds_nota.AllowDBNull = false
            Me.columnPNOT_ds_nota.MaxLength = 1000
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPREFEITURA_NOTARow() As PREFEITURA_NOTARow
            Return CType(Me.NewRow,PREFEITURA_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PREFEITURA_NOTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PREFEITURA_NOTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PREFEITURA_NOTARowChangedEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_NOTARowChanged(Me, New PREFEITURA_NOTARowChangeEvent(CType(e.Row,PREFEITURA_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PREFEITURA_NOTARowChangingEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_NOTARowChanging(Me, New PREFEITURA_NOTARowChangeEvent(CType(e.Row,PREFEITURA_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PREFEITURA_NOTARowDeletedEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_NOTARowDeleted(Me, New PREFEITURA_NOTARowChangeEvent(CType(e.Row,PREFEITURA_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PREFEITURA_NOTARowDeletingEvent) Is Nothing) Then
                RaiseEvent PREFEITURA_NOTARowDeleting(Me, New PREFEITURA_NOTARowChangeEvent(CType(e.Row,PREFEITURA_NOTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePREFEITURA_NOTARow(ByVal row As PREFEITURA_NOTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PREFEITURA_NOTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TABELA_DOCDataTable
        Inherits Global.System.Data.TypedTableBase(Of TABELA_DOCRow)
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPROC_nm_tipo_documento As Global.System.Data.DataColumn
        
        Private columnPROC_id_documento As Global.System.Data.DataColumn
        
        Private columnPROC_ds_titular As Global.System.Data.DataColumn
        
        Private columnPROC_ds_link As Global.System.Data.DataColumn
        
        Private columnPROC_dt_vencimento As Global.System.Data.DataColumn
        
        Private columnPROC_dt_publicacao As Global.System.Data.DataColumn
        
        Private columnPROC_qt_dias As Global.System.Data.DataColumn
        
        Private columnPROC_qt_inicio As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TABELA_DOC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_nm_tipo_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_nm_tipo_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_id_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_id_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_titularColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_titular
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_linkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_link
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_dt_vencimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_dt_vencimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_dt_publicacaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_dt_publicacao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_qt_diasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_qt_dias
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_qt_inicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_qt_inicio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TABELA_DOCRow
            Get
                Return CType(Me.Rows(index),TABELA_DOCRow)
            End Get
        End Property
        
        Public Event TABELA_DOCRowChanging As TABELA_DOCRowChangeEventHandler
        
        Public Event TABELA_DOCRowChanged As TABELA_DOCRowChangeEventHandler
        
        Public Event TABELA_DOCRowDeleting As TABELA_DOCRowChangeEventHandler
        
        Public Event TABELA_DOCRowDeleted As TABELA_DOCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTABELA_DOCRow(ByVal row As TABELA_DOCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTABELA_DOCRow(ByVal PROC_cd_processo As String, ByVal ORGA_nm_orgao As String, ByVal PROC_nm_tipo_documento As String, ByVal PROC_id_documento As String, ByVal PROC_ds_titular As String, ByVal PROC_ds_link As String, ByVal PROC_dt_vencimento As Date, ByVal PROC_dt_publicacao As Date, ByVal PROC_qt_dias As Integer, ByVal PROC_qt_inicio As Integer) As TABELA_DOCRow
            Dim rowTABELA_DOCRow As TABELA_DOCRow = CType(Me.NewRow,TABELA_DOCRow)
            Dim columnValuesArray() As Object = New Object() {PROC_cd_processo, ORGA_nm_orgao, PROC_nm_tipo_documento, PROC_id_documento, PROC_ds_titular, PROC_ds_link, PROC_dt_vencimento, PROC_dt_publicacao, PROC_qt_dias, PROC_qt_inicio}
            rowTABELA_DOCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTABELA_DOCRow)
            Return rowTABELA_DOCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TABELA_DOCDataTable = CType(MyBase.Clone,TABELA_DOCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TABELA_DOCDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPROC_nm_tipo_documento = MyBase.Columns("PROC_nm_tipo_documento")
            Me.columnPROC_id_documento = MyBase.Columns("PROC_id_documento")
            Me.columnPROC_ds_titular = MyBase.Columns("PROC_ds_titular")
            Me.columnPROC_ds_link = MyBase.Columns("PROC_ds_link")
            Me.columnPROC_dt_vencimento = MyBase.Columns("PROC_dt_vencimento")
            Me.columnPROC_dt_publicacao = MyBase.Columns("PROC_dt_publicacao")
            Me.columnPROC_qt_dias = MyBase.Columns("PROC_qt_dias")
            Me.columnPROC_qt_inicio = MyBase.Columns("PROC_qt_inicio")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPROC_nm_tipo_documento = New Global.System.Data.DataColumn("PROC_nm_tipo_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_nm_tipo_documento)
            Me.columnPROC_id_documento = New Global.System.Data.DataColumn("PROC_id_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_id_documento)
            Me.columnPROC_ds_titular = New Global.System.Data.DataColumn("PROC_ds_titular", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_titular)
            Me.columnPROC_ds_link = New Global.System.Data.DataColumn("PROC_ds_link", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_link)
            Me.columnPROC_dt_vencimento = New Global.System.Data.DataColumn("PROC_dt_vencimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_dt_vencimento)
            Me.columnPROC_dt_publicacao = New Global.System.Data.DataColumn("PROC_dt_publicacao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_dt_publicacao)
            Me.columnPROC_qt_dias = New Global.System.Data.DataColumn("PROC_qt_dias", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_qt_dias)
            Me.columnPROC_qt_inicio = New Global.System.Data.DataColumn("PROC_qt_inicio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_qt_inicio)
            Me.columnORGA_nm_orgao.Caption = "PROC_cd_processo"
            Me.columnPROC_nm_tipo_documento.Caption = "PROC_cd_processo"
            Me.columnPROC_id_documento.Caption = "PROC_cd_processo"
            Me.columnPROC_ds_titular.Caption = "PROC_cd_processo"
            Me.columnPROC_ds_link.Caption = "PROC_cd_processo"
            Me.columnPROC_dt_vencimento.Caption = "PROC_cd_processo"
            Me.columnPROC_qt_dias.Caption = "PROC_dt_publicacao"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTABELA_DOCRow() As TABELA_DOCRow
            Return CType(Me.NewRow,TABELA_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TABELA_DOCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TABELA_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TABELA_DOCRowChangedEvent) Is Nothing) Then
                RaiseEvent TABELA_DOCRowChanged(Me, New TABELA_DOCRowChangeEvent(CType(e.Row,TABELA_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TABELA_DOCRowChangingEvent) Is Nothing) Then
                RaiseEvent TABELA_DOCRowChanging(Me, New TABELA_DOCRowChangeEvent(CType(e.Row,TABELA_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TABELA_DOCRowDeletedEvent) Is Nothing) Then
                RaiseEvent TABELA_DOCRowDeleted(Me, New TABELA_DOCRowChangeEvent(CType(e.Row,TABELA_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TABELA_DOCRowDeletingEvent) Is Nothing) Then
                RaiseEvent TABELA_DOCRowDeleting(Me, New TABELA_DOCRowChangeEvent(CType(e.Row,TABELA_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTABELA_DOCRow(ByVal row As TABELA_DOCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TABELA_DOCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TabelaFiltroDataTable
        Inherits Global.System.Data.TypedTableBase(Of TabelaFiltroRow)
        
        Private columnNome As Global.System.Data.DataColumn
        
        Private columnValor As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TabelaFiltro"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ValorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TabelaFiltroRow
            Get
                Return CType(Me.Rows(index),TabelaFiltroRow)
            End Get
        End Property
        
        Public Event TabelaFiltroRowChanging As TabelaFiltroRowChangeEventHandler
        
        Public Event TabelaFiltroRowChanged As TabelaFiltroRowChangeEventHandler
        
        Public Event TabelaFiltroRowDeleting As TabelaFiltroRowChangeEventHandler
        
        Public Event TabelaFiltroRowDeleted As TabelaFiltroRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTabelaFiltroRow(ByVal row As TabelaFiltroRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTabelaFiltroRow(ByVal Nome As String, ByVal Valor As String) As TabelaFiltroRow
            Dim rowTabelaFiltroRow As TabelaFiltroRow = CType(Me.NewRow,TabelaFiltroRow)
            Dim columnValuesArray() As Object = New Object() {Nome, Valor}
            rowTabelaFiltroRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTabelaFiltroRow)
            Return rowTabelaFiltroRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TabelaFiltroDataTable = CType(MyBase.Clone,TabelaFiltroDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TabelaFiltroDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnNome = MyBase.Columns("Nome")
            Me.columnValor = MyBase.Columns("Valor")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNome)
            Me.columnValor = New Global.System.Data.DataColumn("Valor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValor)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTabelaFiltroRow() As TabelaFiltroRow
            Return CType(Me.NewRow,TabelaFiltroRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TabelaFiltroRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TabelaFiltroRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TabelaFiltroRowChangedEvent) Is Nothing) Then
                RaiseEvent TabelaFiltroRowChanged(Me, New TabelaFiltroRowChangeEvent(CType(e.Row,TabelaFiltroRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TabelaFiltroRowChangingEvent) Is Nothing) Then
                RaiseEvent TabelaFiltroRowChanging(Me, New TabelaFiltroRowChangeEvent(CType(e.Row,TabelaFiltroRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TabelaFiltroRowDeletedEvent) Is Nothing) Then
                RaiseEvent TabelaFiltroRowDeleted(Me, New TabelaFiltroRowChangeEvent(CType(e.Row,TabelaFiltroRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TabelaFiltroRowDeletingEvent) Is Nothing) Then
                RaiseEvent TabelaFiltroRowDeleting(Me, New TabelaFiltroRowChangeEvent(CType(e.Row,TabelaFiltroRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTabelaFiltroRow(ByVal row As TabelaFiltroRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TabelaFiltroDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GRAFICO_DOCDataTable
        Inherits Global.System.Data.TypedTableBase(Of GRAFICO_DOCRow)
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnORGA_nm_orgao As Global.System.Data.DataColumn
        
        Private columnPROC_nm_tipo_documento As Global.System.Data.DataColumn
        
        Private columnPROC_id_documento As Global.System.Data.DataColumn
        
        Private columnPROC_ds_titular As Global.System.Data.DataColumn
        
        Private columnPROC_ds_link As Global.System.Data.DataColumn
        
        Private columnPROC_dt_vencimento As Global.System.Data.DataColumn
        
        Private columnPROC_dt_publicacao As Global.System.Data.DataColumn
        
        Private columnPROC_qt_dias As Global.System.Data.DataColumn
        
        Private columnPROC_qt_inicio As Global.System.Data.DataColumn
        
        Private columnPROC_qt_dias_passados As Global.System.Data.DataColumn
        
        Private columnPROC_qt_dias_total As Global.System.Data.DataColumn
        
        Private columnPROC_pc_vencto As Global.System.Data.DataColumn
        
        Private columnPROC_pc_limite As Global.System.Data.DataColumn
        
        Private columnPROC_pc_total As Global.System.Data.DataColumn
        
        Private columnPROC_ds_documento As Global.System.Data.DataColumn
        
        Private columnPROC_ds_data As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GRAFICO_DOC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGA_nm_orgaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGA_nm_orgao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_nm_tipo_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_nm_tipo_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_id_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_id_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_titularColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_titular
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_linkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_link
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_dt_vencimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_dt_vencimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_dt_publicacaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_dt_publicacao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_qt_diasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_qt_dias
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_qt_inicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_qt_inicio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_qt_dias_passadosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_qt_dias_passados
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_qt_dias_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_qt_dias_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_pc_venctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_pc_vencto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_pc_limiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_pc_limite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_pc_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_pc_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_dataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_data
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GRAFICO_DOCRow
            Get
                Return CType(Me.Rows(index),GRAFICO_DOCRow)
            End Get
        End Property
        
        Public Event GRAFICO_DOCRowChanging As GRAFICO_DOCRowChangeEventHandler
        
        Public Event GRAFICO_DOCRowChanged As GRAFICO_DOCRowChangeEventHandler
        
        Public Event GRAFICO_DOCRowDeleting As GRAFICO_DOCRowChangeEventHandler
        
        Public Event GRAFICO_DOCRowDeleted As GRAFICO_DOCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddGRAFICO_DOCRow(ByVal row As GRAFICO_DOCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddGRAFICO_DOCRow( _
                    ByVal PROC_cd_processo As String,  _
                    ByVal ORGA_nm_orgao As String,  _
                    ByVal PROC_nm_tipo_documento As String,  _
                    ByVal PROC_id_documento As String,  _
                    ByVal PROC_ds_titular As String,  _
                    ByVal PROC_ds_link As String,  _
                    ByVal PROC_dt_vencimento As Date,  _
                    ByVal PROC_dt_publicacao As Date,  _
                    ByVal PROC_qt_dias As Integer,  _
                    ByVal PROC_qt_inicio As Integer,  _
                    ByVal PROC_qt_dias_passados As Integer,  _
                    ByVal PROC_qt_dias_total As Integer,  _
                    ByVal PROC_pc_vencto As Decimal,  _
                    ByVal PROC_pc_limite As Decimal,  _
                    ByVal PROC_pc_total As Decimal,  _
                    ByVal PROC_ds_documento As String,  _
                    ByVal PROC_ds_data As String) As GRAFICO_DOCRow
            Dim rowGRAFICO_DOCRow As GRAFICO_DOCRow = CType(Me.NewRow,GRAFICO_DOCRow)
            Dim columnValuesArray() As Object = New Object() {PROC_cd_processo, ORGA_nm_orgao, PROC_nm_tipo_documento, PROC_id_documento, PROC_ds_titular, PROC_ds_link, PROC_dt_vencimento, PROC_dt_publicacao, PROC_qt_dias, PROC_qt_inicio, PROC_qt_dias_passados, PROC_qt_dias_total, PROC_pc_vencto, PROC_pc_limite, PROC_pc_total, PROC_ds_documento, PROC_ds_data}
            rowGRAFICO_DOCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGRAFICO_DOCRow)
            Return rowGRAFICO_DOCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GRAFICO_DOCDataTable = CType(MyBase.Clone,GRAFICO_DOCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GRAFICO_DOCDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnORGA_nm_orgao = MyBase.Columns("ORGA_nm_orgao")
            Me.columnPROC_nm_tipo_documento = MyBase.Columns("PROC_nm_tipo_documento")
            Me.columnPROC_id_documento = MyBase.Columns("PROC_id_documento")
            Me.columnPROC_ds_titular = MyBase.Columns("PROC_ds_titular")
            Me.columnPROC_ds_link = MyBase.Columns("PROC_ds_link")
            Me.columnPROC_dt_vencimento = MyBase.Columns("PROC_dt_vencimento")
            Me.columnPROC_dt_publicacao = MyBase.Columns("PROC_dt_publicacao")
            Me.columnPROC_qt_dias = MyBase.Columns("PROC_qt_dias")
            Me.columnPROC_qt_inicio = MyBase.Columns("PROC_qt_inicio")
            Me.columnPROC_qt_dias_passados = MyBase.Columns("PROC_qt_dias_passados")
            Me.columnPROC_qt_dias_total = MyBase.Columns("PROC_qt_dias_total")
            Me.columnPROC_pc_vencto = MyBase.Columns("PROC_pc_vencto")
            Me.columnPROC_pc_limite = MyBase.Columns("PROC_pc_limite")
            Me.columnPROC_pc_total = MyBase.Columns("PROC_pc_total")
            Me.columnPROC_ds_documento = MyBase.Columns("PROC_ds_documento")
            Me.columnPROC_ds_data = MyBase.Columns("PROC_ds_data")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnORGA_nm_orgao = New Global.System.Data.DataColumn("ORGA_nm_orgao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGA_nm_orgao)
            Me.columnPROC_nm_tipo_documento = New Global.System.Data.DataColumn("PROC_nm_tipo_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_nm_tipo_documento)
            Me.columnPROC_id_documento = New Global.System.Data.DataColumn("PROC_id_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_id_documento)
            Me.columnPROC_ds_titular = New Global.System.Data.DataColumn("PROC_ds_titular", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_titular)
            Me.columnPROC_ds_link = New Global.System.Data.DataColumn("PROC_ds_link", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_link)
            Me.columnPROC_dt_vencimento = New Global.System.Data.DataColumn("PROC_dt_vencimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_dt_vencimento)
            Me.columnPROC_dt_publicacao = New Global.System.Data.DataColumn("PROC_dt_publicacao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_dt_publicacao)
            Me.columnPROC_qt_dias = New Global.System.Data.DataColumn("PROC_qt_dias", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_qt_dias)
            Me.columnPROC_qt_inicio = New Global.System.Data.DataColumn("PROC_qt_inicio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_qt_inicio)
            Me.columnPROC_qt_dias_passados = New Global.System.Data.DataColumn("PROC_qt_dias_passados", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_qt_dias_passados)
            Me.columnPROC_qt_dias_total = New Global.System.Data.DataColumn("PROC_qt_dias_total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_qt_dias_total)
            Me.columnPROC_pc_vencto = New Global.System.Data.DataColumn("PROC_pc_vencto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_pc_vencto)
            Me.columnPROC_pc_limite = New Global.System.Data.DataColumn("PROC_pc_limite", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_pc_limite)
            Me.columnPROC_pc_total = New Global.System.Data.DataColumn("PROC_pc_total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_pc_total)
            Me.columnPROC_ds_documento = New Global.System.Data.DataColumn("PROC_ds_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_documento)
            Me.columnPROC_ds_data = New Global.System.Data.DataColumn("PROC_ds_data", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_data)
            Me.columnORGA_nm_orgao.Caption = "PROC_cd_processo"
            Me.columnPROC_nm_tipo_documento.Caption = "PROC_cd_processo"
            Me.columnPROC_id_documento.Caption = "PROC_cd_processo"
            Me.columnPROC_ds_titular.Caption = "PROC_cd_processo"
            Me.columnPROC_ds_link.Caption = "PROC_cd_processo"
            Me.columnPROC_dt_vencimento.Caption = "PROC_cd_processo"
            Me.columnPROC_qt_dias.Caption = "PROC_dt_publicacao"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewGRAFICO_DOCRow() As GRAFICO_DOCRow
            Return CType(Me.NewRow,GRAFICO_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GRAFICO_DOCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GRAFICO_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GRAFICO_DOCRowChangedEvent) Is Nothing) Then
                RaiseEvent GRAFICO_DOCRowChanged(Me, New GRAFICO_DOCRowChangeEvent(CType(e.Row,GRAFICO_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GRAFICO_DOCRowChangingEvent) Is Nothing) Then
                RaiseEvent GRAFICO_DOCRowChanging(Me, New GRAFICO_DOCRowChangeEvent(CType(e.Row,GRAFICO_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GRAFICO_DOCRowDeletedEvent) Is Nothing) Then
                RaiseEvent GRAFICO_DOCRowDeleted(Me, New GRAFICO_DOCRowChangeEvent(CType(e.Row,GRAFICO_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GRAFICO_DOCRowDeletingEvent) Is Nothing) Then
                RaiseEvent GRAFICO_DOCRowDeleting(Me, New GRAFICO_DOCRowChangeEvent(CType(e.Row,GRAFICO_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveGRAFICO_DOCRow(ByVal row As GRAFICO_DOCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GRAFICO_DOCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TABELA_PROCDataTable
        Inherits Global.System.Data.TypedTableBase(Of TABELA_PROCRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnPROC_cd_processo As Global.System.Data.DataColumn
        
        Private columnPROC_ds_titular As Global.System.Data.DataColumn
        
        Private columnPROC_vl_ano As Global.System.Data.DataColumn
        
        Private columnPROC_nm_processo As Global.System.Data.DataColumn
        
        Private columnPROC_id_processo As Global.System.Data.DataColumn
        
        Private columnFASE_cd_fase As Global.System.Data.DataColumn
        
        Private columnPROC_ds_ultimo_evento As Global.System.Data.DataColumn
        
        Private columnPROC_ds_substancia As Global.System.Data.DataColumn
        
        Private columnPROC_ds_area As Global.System.Data.DataColumn
        
        Private columnPROC_ds_uso As Global.System.Data.DataColumn
        
        Private columnPROC_ds_link As Global.System.Data.DataColumn
        
        Private columnUNFE_cd_unidade_federativa As Global.System.Data.DataColumn
        
        Private columnPROC_fl_tipo_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_inclusao As Global.System.Data.DataColumn
        
        Private columnAUDT_dt_alteracao As Global.System.Data.DataColumn
        
        Private columnAUDT_nm_usuario_alteracao As Global.System.Data.DataColumn
        
        Private columnFASE_nm_fase As Global.System.Data.DataColumn
        
        Private columnUNFE_nm_unidade_federativa As Global.System.Data.DataColumn
        
        Private columnMUNI_nm_municipio As Global.System.Data.DataColumn
        
        Private columnPROC_cd_prioridade As Global.System.Data.DataColumn
        
        Private columnPROC_cd_ds_prioridade As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TABELA_PROC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_titularColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_titular
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_vl_anoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_vl_ano
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_nm_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_nm_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_id_processoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_id_processo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FASE_cd_faseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFASE_cd_fase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_ultimo_eventoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_ultimo_evento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_substanciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_substancia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_areaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_area
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_usoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_uso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_ds_linkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_ds_link
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UNFE_cd_unidade_federativaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNFE_cd_unidade_federativa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_fl_tipo_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_fl_tipo_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_inclusaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_inclusao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_dt_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_dt_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUDT_nm_usuario_alteracaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUDT_nm_usuario_alteracao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FASE_nm_faseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFASE_nm_fase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UNFE_nm_unidade_federativaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNFE_nm_unidade_federativa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MUNI_nm_municipioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNI_nm_municipio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_prioridadeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_prioridade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROC_cd_ds_prioridadeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROC_cd_ds_prioridade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TABELA_PROCRow
            Get
                Return CType(Me.Rows(index),TABELA_PROCRow)
            End Get
        End Property
        
        Public Event TABELA_PROCRowChanging As TABELA_PROCRowChangeEventHandler
        
        Public Event TABELA_PROCRowChanged As TABELA_PROCRowChangeEventHandler
        
        Public Event TABELA_PROCRowDeleting As TABELA_PROCRowChangeEventHandler
        
        Public Event TABELA_PROCRowDeleted As TABELA_PROCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTABELA_PROCRow(ByVal row As TABELA_PROCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTABELA_PROCRow( _
                    ByVal PROC_cd_processo As String,  _
                    ByVal PROC_ds_titular As String,  _
                    ByVal PROC_vl_ano As Integer,  _
                    ByVal PROC_nm_processo As String,  _
                    ByVal PROC_id_processo As String,  _
                    ByVal FASE_cd_fase As Integer,  _
                    ByVal PROC_ds_ultimo_evento As String,  _
                    ByVal PROC_ds_substancia As String,  _
                    ByVal PROC_ds_area As String,  _
                    ByVal PROC_ds_uso As String,  _
                    ByVal PROC_ds_link As String,  _
                    ByVal UNFE_cd_unidade_federativa As String,  _
                    ByVal PROC_fl_tipo_inclusao As String,  _
                    ByVal AUDT_dt_inclusao As Date,  _
                    ByVal AUDT_nm_usuario_inclusao As String,  _
                    ByVal AUDT_dt_alteracao As Date,  _
                    ByVal AUDT_nm_usuario_alteracao As String,  _
                    ByVal FASE_nm_fase As String,  _
                    ByVal UNFE_nm_unidade_federativa As String,  _
                    ByVal MUNI_nm_municipio As String,  _
                    ByVal PROC_cd_prioridade As String,  _
                    ByVal PROC_cd_ds_prioridade As String) As TABELA_PROCRow
            Dim rowTABELA_PROCRow As TABELA_PROCRow = CType(Me.NewRow,TABELA_PROCRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PROC_cd_processo, PROC_ds_titular, PROC_vl_ano, PROC_nm_processo, PROC_id_processo, FASE_cd_fase, PROC_ds_ultimo_evento, PROC_ds_substancia, PROC_ds_area, PROC_ds_uso, PROC_ds_link, UNFE_cd_unidade_federativa, PROC_fl_tipo_inclusao, AUDT_dt_inclusao, AUDT_nm_usuario_inclusao, AUDT_dt_alteracao, AUDT_nm_usuario_alteracao, FASE_nm_fase, UNFE_nm_unidade_federativa, MUNI_nm_municipio, PROC_cd_prioridade, PROC_cd_ds_prioridade}
            rowTABELA_PROCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTABELA_PROCRow)
            Return rowTABELA_PROCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As TABELA_PROCRow
            Return CType(Me.Rows.Find(New Object() {id}),TABELA_PROCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TABELA_PROCDataTable = CType(MyBase.Clone,TABELA_PROCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TABELA_PROCDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnPROC_cd_processo = MyBase.Columns("PROC_cd_processo")
            Me.columnPROC_ds_titular = MyBase.Columns("PROC_ds_titular")
            Me.columnPROC_vl_ano = MyBase.Columns("PROC_vl_ano")
            Me.columnPROC_nm_processo = MyBase.Columns("PROC_nm_processo")
            Me.columnPROC_id_processo = MyBase.Columns("PROC_id_processo")
            Me.columnFASE_cd_fase = MyBase.Columns("FASE_cd_fase")
            Me.columnPROC_ds_ultimo_evento = MyBase.Columns("PROC_ds_ultimo_evento")
            Me.columnPROC_ds_substancia = MyBase.Columns("PROC_ds_substancia")
            Me.columnPROC_ds_area = MyBase.Columns("PROC_ds_area")
            Me.columnPROC_ds_uso = MyBase.Columns("PROC_ds_uso")
            Me.columnPROC_ds_link = MyBase.Columns("PROC_ds_link")
            Me.columnUNFE_cd_unidade_federativa = MyBase.Columns("UNFE_cd_unidade_federativa")
            Me.columnPROC_fl_tipo_inclusao = MyBase.Columns("PROC_fl_tipo_inclusao")
            Me.columnAUDT_dt_inclusao = MyBase.Columns("AUDT_dt_inclusao")
            Me.columnAUDT_nm_usuario_inclusao = MyBase.Columns("AUDT_nm_usuario_inclusao")
            Me.columnAUDT_dt_alteracao = MyBase.Columns("AUDT_dt_alteracao")
            Me.columnAUDT_nm_usuario_alteracao = MyBase.Columns("AUDT_nm_usuario_alteracao")
            Me.columnFASE_nm_fase = MyBase.Columns("FASE_nm_fase")
            Me.columnUNFE_nm_unidade_federativa = MyBase.Columns("UNFE_nm_unidade_federativa")
            Me.columnMUNI_nm_municipio = MyBase.Columns("MUNI_nm_municipio")
            Me.columnPROC_cd_prioridade = MyBase.Columns("PROC_cd_prioridade")
            Me.columnPROC_cd_ds_prioridade = MyBase.Columns("PROC_cd_ds_prioridade")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnPROC_cd_processo = New Global.System.Data.DataColumn("PROC_cd_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_processo)
            Me.columnPROC_ds_titular = New Global.System.Data.DataColumn("PROC_ds_titular", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_titular)
            Me.columnPROC_vl_ano = New Global.System.Data.DataColumn("PROC_vl_ano", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_vl_ano)
            Me.columnPROC_nm_processo = New Global.System.Data.DataColumn("PROC_nm_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_nm_processo)
            Me.columnPROC_id_processo = New Global.System.Data.DataColumn("PROC_id_processo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_id_processo)
            Me.columnFASE_cd_fase = New Global.System.Data.DataColumn("FASE_cd_fase", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFASE_cd_fase)
            Me.columnPROC_ds_ultimo_evento = New Global.System.Data.DataColumn("PROC_ds_ultimo_evento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_ultimo_evento)
            Me.columnPROC_ds_substancia = New Global.System.Data.DataColumn("PROC_ds_substancia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_substancia)
            Me.columnPROC_ds_area = New Global.System.Data.DataColumn("PROC_ds_area", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_area)
            Me.columnPROC_ds_uso = New Global.System.Data.DataColumn("PROC_ds_uso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_uso)
            Me.columnPROC_ds_link = New Global.System.Data.DataColumn("PROC_ds_link", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_ds_link)
            Me.columnUNFE_cd_unidade_federativa = New Global.System.Data.DataColumn("UNFE_cd_unidade_federativa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNFE_cd_unidade_federativa)
            Me.columnPROC_fl_tipo_inclusao = New Global.System.Data.DataColumn("PROC_fl_tipo_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_fl_tipo_inclusao)
            Me.columnAUDT_dt_inclusao = New Global.System.Data.DataColumn("AUDT_dt_inclusao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_inclusao)
            Me.columnAUDT_nm_usuario_inclusao = New Global.System.Data.DataColumn("AUDT_nm_usuario_inclusao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_inclusao)
            Me.columnAUDT_dt_alteracao = New Global.System.Data.DataColumn("AUDT_dt_alteracao", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_dt_alteracao)
            Me.columnAUDT_nm_usuario_alteracao = New Global.System.Data.DataColumn("AUDT_nm_usuario_alteracao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUDT_nm_usuario_alteracao)
            Me.columnFASE_nm_fase = New Global.System.Data.DataColumn("FASE_nm_fase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFASE_nm_fase)
            Me.columnUNFE_nm_unidade_federativa = New Global.System.Data.DataColumn("UNFE_nm_unidade_federativa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNFE_nm_unidade_federativa)
            Me.columnMUNI_nm_municipio = New Global.System.Data.DataColumn("MUNI_nm_municipio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNI_nm_municipio)
            Me.columnPROC_cd_prioridade = New Global.System.Data.DataColumn("PROC_cd_prioridade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_prioridade)
            Me.columnPROC_cd_ds_prioridade = New Global.System.Data.DataColumn("PROC_cd_ds_prioridade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROC_cd_ds_prioridade)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnPROC_cd_processo.AllowDBNull = false
            Me.columnPROC_cd_processo.MaxLength = 50
            Me.columnPROC_ds_titular.AllowDBNull = false
            Me.columnPROC_ds_titular.MaxLength = 300
            Me.columnPROC_nm_processo.MaxLength = 50
            Me.columnPROC_id_processo.MaxLength = 300
            Me.columnPROC_ds_ultimo_evento.MaxLength = 3000
            Me.columnPROC_ds_substancia.MaxLength = 100
            Me.columnPROC_ds_area.MaxLength = 30
            Me.columnPROC_ds_uso.MaxLength = 200
            Me.columnPROC_ds_link.MaxLength = 150
            Me.columnUNFE_cd_unidade_federativa.MaxLength = 2
            Me.columnPROC_fl_tipo_inclusao.AllowDBNull = false
            Me.columnPROC_fl_tipo_inclusao.MaxLength = 1
            Me.columnAUDT_dt_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_inclusao.MaxLength = 20
            Me.columnAUDT_dt_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.AllowDBNull = false
            Me.columnAUDT_nm_usuario_alteracao.MaxLength = 20
            Me.columnFASE_nm_fase.AllowDBNull = false
            Me.columnFASE_nm_fase.MaxLength = 100
            Me.columnUNFE_nm_unidade_federativa.AllowDBNull = false
            Me.columnUNFE_nm_unidade_federativa.MaxLength = 100
            Me.columnMUNI_nm_municipio.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTABELA_PROCRow() As TABELA_PROCRow
            Return CType(Me.NewRow,TABELA_PROCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TABELA_PROCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TABELA_PROCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TABELA_PROCRowChangedEvent) Is Nothing) Then
                RaiseEvent TABELA_PROCRowChanged(Me, New TABELA_PROCRowChangeEvent(CType(e.Row,TABELA_PROCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TABELA_PROCRowChangingEvent) Is Nothing) Then
                RaiseEvent TABELA_PROCRowChanging(Me, New TABELA_PROCRowChangeEvent(CType(e.Row,TABELA_PROCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TABELA_PROCRowDeletedEvent) Is Nothing) Then
                RaiseEvent TABELA_PROCRowDeleted(Me, New TABELA_PROCRowChangeEvent(CType(e.Row,TABELA_PROCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TABELA_PROCRowDeletingEvent) Is Nothing) Then
                RaiseEvent TABELA_PROCRowDeleting(Me, New TABELA_PROCRowChangeEvent(CType(e.Row,TABELA_PROCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTABELA_PROCRow(ByVal row As TABELA_PROCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Report = New Report
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TABELA_PROCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class GERAL_PROCESSORow
        Inherits Global.System.Data.DataRow
        
        Private tableGERAL_PROCESSO As GERAL_PROCESSODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGERAL_PROCESSO = CType(Me.Table,GERAL_PROCESSODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableGERAL_PROCESSO.idColumn),Integer)
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableGERAL_PROCESSO.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_titular() As String
            Get
                Return CType(Me(Me.tableGERAL_PROCESSO.PROC_ds_titularColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.PROC_ds_titularColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_vl_ano() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_PROCESSO.PROC_vl_anoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_vl_ano' in table 'GERAL_PROCESSO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.PROC_vl_anoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_nm_processo() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_PROCESSO.PROC_nm_processoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_nm_processo' in table 'GERAL_PROCESSO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.PROC_nm_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_id_processo() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_PROCESSO.PROC_id_processoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_id_processo' in table 'GERAL_PROCESSO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.PROC_id_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FASE_cd_fase() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_PROCESSO.FASE_cd_faseColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FASE_cd_fase' in table 'GERAL_PROCESSO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.FASE_cd_faseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_ultimo_evento() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_PROCESSO.PROC_ds_ultimo_eventoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_ultimo_evento' in table 'GERAL_PROCESSO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.PROC_ds_ultimo_eventoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_substancia() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_PROCESSO.PROC_ds_substanciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_substancia' in table 'GERAL_PROCESSO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.PROC_ds_substanciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_area() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_PROCESSO.PROC_ds_areaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_area' in table 'GERAL_PROCESSO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.PROC_ds_areaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_uso() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_PROCESSO.PROC_ds_usoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_uso' in table 'GERAL_PROCESSO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.PROC_ds_usoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_link() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_PROCESSO.PROC_ds_linkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_link' in table 'GERAL_PROCESSO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.PROC_ds_linkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UNFE_cd_unidade_federativa() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_PROCESSO.UNFE_cd_unidade_federativaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNFE_cd_unidade_federativa' in table 'GERAL_PROCESSO' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.UNFE_cd_unidade_federativaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_fl_tipo_inclusao() As String
            Get
                Return CType(Me(Me.tableGERAL_PROCESSO.PROC_fl_tipo_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.PROC_fl_tipo_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableGERAL_PROCESSO.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableGERAL_PROCESSO.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableGERAL_PROCESSO.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableGERAL_PROCESSO.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FASE_nm_fase() As String
            Get
                Return CType(Me(Me.tableGERAL_PROCESSO.FASE_nm_faseColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.FASE_nm_faseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UNFE_nm_unidade_federativa() As String
            Get
                Return CType(Me(Me.tableGERAL_PROCESSO.UNFE_nm_unidade_federativaColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_PROCESSO.UNFE_nm_unidade_federativaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_vl_anoNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_PROCESSO.PROC_vl_anoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_vl_anoNull()
            Me(Me.tableGERAL_PROCESSO.PROC_vl_anoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_nm_processoNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_PROCESSO.PROC_nm_processoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_nm_processoNull()
            Me(Me.tableGERAL_PROCESSO.PROC_nm_processoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_id_processoNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_PROCESSO.PROC_id_processoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_id_processoNull()
            Me(Me.tableGERAL_PROCESSO.PROC_id_processoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFASE_cd_faseNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_PROCESSO.FASE_cd_faseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFASE_cd_faseNull()
            Me(Me.tableGERAL_PROCESSO.FASE_cd_faseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_ultimo_eventoNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_PROCESSO.PROC_ds_ultimo_eventoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_ultimo_eventoNull()
            Me(Me.tableGERAL_PROCESSO.PROC_ds_ultimo_eventoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_substanciaNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_PROCESSO.PROC_ds_substanciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_substanciaNull()
            Me(Me.tableGERAL_PROCESSO.PROC_ds_substanciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_areaNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_PROCESSO.PROC_ds_areaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_areaNull()
            Me(Me.tableGERAL_PROCESSO.PROC_ds_areaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_usoNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_PROCESSO.PROC_ds_usoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_usoNull()
            Me(Me.tableGERAL_PROCESSO.PROC_ds_usoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_linkNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_PROCESSO.PROC_ds_linkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_linkNull()
            Me(Me.tableGERAL_PROCESSO.PROC_ds_linkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUNFE_cd_unidade_federativaNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_PROCESSO.UNFE_cd_unidade_federativaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUNFE_cd_unidade_federativaNull()
            Me(Me.tableGERAL_PROCESSO.UNFE_cd_unidade_federativaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DNPM_ASSOCIADOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableDNPM_ASSOCIADOS As DNPM_ASSOCIADOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDNPM_ASSOCIADOS = CType(Me.Table,DNPM_ASSOCIADOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableDNPM_ASSOCIADOS.idColumn),Integer)
            End Get
            Set
                Me(Me.tableDNPM_ASSOCIADOS.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableDNPM_ASSOCIADOS.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_ASSOCIADOS.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PASO_cd_processo() As String
            Get
                Return CType(Me(Me.tableDNPM_ASSOCIADOS.PASO_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_ASSOCIADOS.PASO_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableDNPM_ASSOCIADOS.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_ASSOCIADOS.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableDNPM_ASSOCIADOS.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_ASSOCIADOS.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableDNPM_ASSOCIADOS.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_ASSOCIADOS.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableDNPM_ASSOCIADOS.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_ASSOCIADOS.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DNPM_CONDICAORow
        Inherits Global.System.Data.DataRow
        
        Private tableDNPM_CONDICAO As DNPM_CONDICAODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDNPM_CONDICAO = CType(Me.Table,DNPM_CONDICAODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableDNPM_CONDICAO.idColumn),Integer)
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableDNPM_CONDICAO.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PCON_cd_condicao() As Integer
            Get
                Return CType(Me(Me.tableDNPM_CONDICAO.PCON_cd_condicaoColumn),Integer)
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.PCON_cd_condicaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COND_nm_condicao() As String
            Get
                Return CType(Me(Me.tableDNPM_CONDICAO.COND_nm_condicaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.COND_nm_condicaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCON_ds_situacao_condicao() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_CONDICAO.SCON_ds_situacao_condicaoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCON_ds_situacao_condicao' in table 'DNPM_CONDICAO' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.SCON_ds_situacao_condicaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PCON_ds_condicao() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_CONDICAO.PCON_ds_condicaoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCON_ds_condicao' in table 'DNPM_CONDICAO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.PCON_ds_condicaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PCON_dt_ini() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_CONDICAO.PCON_dt_iniColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCON_dt_ini' in table 'DNPM_CONDICAO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.PCON_dt_iniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PCON_dt_fim() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_CONDICAO.PCON_dt_fimColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCON_dt_fim' in table 'DNPM_CONDICAO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.PCON_dt_fimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PCON_ds_nome_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_CONDICAO.PCON_ds_nome_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCON_ds_nome_documento' in table 'DNPM_CONDICAO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.PCON_ds_nome_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PCON_ds_local_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_CONDICAO.PCON_ds_local_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCON_ds_local_documento' in table 'DNPM_CONDICAO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.PCON_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PCON_ds_rede_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_CONDICAO.PCON_ds_rede_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCON_ds_rede_documento' in table 'DNPM_CONDICAO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.PCON_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PCON_ds_path_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_CONDICAO.PCON_ds_path_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCON_ds_path_documento' in table 'DNPM_CONDICAO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.PCON_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableDNPM_CONDICAO.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableDNPM_CONDICAO.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableDNPM_CONDICAO.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableDNPM_CONDICAO.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_CONDICAO.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCON_ds_situacao_condicaoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_CONDICAO.SCON_ds_situacao_condicaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCON_ds_situacao_condicaoNull()
            Me(Me.tableDNPM_CONDICAO.SCON_ds_situacao_condicaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPCON_ds_condicaoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_CONDICAO.PCON_ds_condicaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPCON_ds_condicaoNull()
            Me(Me.tableDNPM_CONDICAO.PCON_ds_condicaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPCON_dt_iniNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_CONDICAO.PCON_dt_iniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPCON_dt_iniNull()
            Me(Me.tableDNPM_CONDICAO.PCON_dt_iniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPCON_dt_fimNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_CONDICAO.PCON_dt_fimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPCON_dt_fimNull()
            Me(Me.tableDNPM_CONDICAO.PCON_dt_fimColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPCON_ds_nome_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_CONDICAO.PCON_ds_nome_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPCON_ds_nome_documentoNull()
            Me(Me.tableDNPM_CONDICAO.PCON_ds_nome_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPCON_ds_local_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_CONDICAO.PCON_ds_local_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPCON_ds_local_documentoNull()
            Me(Me.tableDNPM_CONDICAO.PCON_ds_local_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPCON_ds_rede_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_CONDICAO.PCON_ds_rede_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPCON_ds_rede_documentoNull()
            Me(Me.tableDNPM_CONDICAO.PCON_ds_rede_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPCON_ds_path_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_CONDICAO.PCON_ds_path_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPCON_ds_path_documentoNull()
            Me(Me.tableDNPM_CONDICAO.PCON_ds_path_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class INFO_DAEERow
        Inherits Global.System.Data.DataRow
        
        Private tableINFO_DAEE As INFO_DAEEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINFO_DAEE = CType(Me.Table,INFO_DAEEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableINFO_DAEE.idColumn),Integer)
            End Get
            Set
                Me(Me.tableINFO_DAEE.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableINFO_DAEE.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_DAEE.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableINFO_DAEE.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_DAEE.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_cd_info() As Integer
            Get
                Return CType(Me(Me.tableINFO_DAEE.PINF_cd_infoColumn),Integer)
            End Get
            Set
                Me(Me.tableINFO_DAEE.PINF_cd_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_DAEE.PINF_ds_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_ds_info' in table 'INFO_DAEE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_DAEE.PINF_ds_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TINF_nm_tipo_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_DAEE.TINF_nm_tipo_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TINF_nm_tipo_info' in table 'INFO_DAEE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_DAEE.TINF_nm_tipo_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SINF_ds_situacao_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_DAEE.SINF_ds_situacao_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SINF_ds_situacao_info' in table 'INFO_DAEE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_DAEE.SINF_ds_situacao_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_dt_ini() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINFO_DAEE.PINF_dt_iniColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_dt_ini' in table 'INFO_DAEE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_DAEE.PINF_dt_iniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_dt_fim() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINFO_DAEE.PINF_dt_fimColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_dt_fim' in table 'INFO_DAEE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_DAEE.PINF_dt_fimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_local_documento() As String
            Get
                Return CType(Me(Me.tableINFO_DAEE.PINF_ds_local_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_DAEE.PINF_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_rede_documento() As String
            Get
                Return CType(Me(Me.tableINFO_DAEE.PINF_ds_rede_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_DAEE.PINF_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_path_documento() As String
            Get
                Return CType(Me(Me.tableINFO_DAEE.PINF_ds_path_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_DAEE.PINF_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableINFO_DAEE.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableINFO_DAEE.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableINFO_DAEE.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_DAEE.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableINFO_DAEE.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableINFO_DAEE.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableINFO_DAEE.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_DAEE.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_ds_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_DAEE.PINF_ds_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_ds_infoNull()
            Me(Me.tableINFO_DAEE.PINF_ds_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTINF_nm_tipo_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_DAEE.TINF_nm_tipo_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTINF_nm_tipo_infoNull()
            Me(Me.tableINFO_DAEE.TINF_nm_tipo_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSINF_ds_situacao_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_DAEE.SINF_ds_situacao_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSINF_ds_situacao_infoNull()
            Me(Me.tableINFO_DAEE.SINF_ds_situacao_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_dt_iniNull() As Boolean
            Return Me.IsNull(Me.tableINFO_DAEE.PINF_dt_iniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_dt_iniNull()
            Me(Me.tableINFO_DAEE.PINF_dt_iniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_dt_fimNull() As Boolean
            Return Me.IsNull(Me.tableINFO_DAEE.PINF_dt_fimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_dt_fimNull()
            Me(Me.tableINFO_DAEE.PINF_dt_fimColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DNPM_MUNICIPIORow
        Inherits Global.System.Data.DataRow
        
        Private tableDNPM_MUNICIPIO As DNPM_MUNICIPIODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDNPM_MUNICIPIO = CType(Me.Table,DNPM_MUNICIPIODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableDNPM_MUNICIPIO.idColumn),Integer)
            End Get
            Set
                Me(Me.tableDNPM_MUNICIPIO.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableDNPM_MUNICIPIO.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_MUNICIPIO.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MUNI_nm_municipio() As String
            Get
                Return CType(Me(Me.tableDNPM_MUNICIPIO.MUNI_nm_municipioColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_MUNICIPIO.MUNI_nm_municipioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableDNPM_MUNICIPIO.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_MUNICIPIO.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableDNPM_MUNICIPIO.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_MUNICIPIO.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableDNPM_MUNICIPIO.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_MUNICIPIO.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableDNPM_MUNICIPIO.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_MUNICIPIO.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class CETESB_GERALRow
        Inherits Global.System.Data.DataRow
        
        Private tableCETESB_GERAL As CETESB_GERALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCETESB_GERAL = CType(Me.Table,CETESB_GERALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableCETESB_GERAL.idColumn),Integer)
            End Get
            Set
                Me(Me.tableCETESB_GERAL.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableCETESB_GERAL.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_GERAL.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableCETESB_GERAL.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_GERAL.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PORG_nm_cadastro() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_GERAL.PORG_nm_cadastroColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PORG_nm_cadastro' in table 'CETESB_GERAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_GERAL.PORG_nm_cadastroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PORG_ds_atividade() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_GERAL.PORG_ds_atividadeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PORG_ds_atividade' in table 'CETESB_GERAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_GERAL.PORG_ds_atividadeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableCETESB_GERAL.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableCETESB_GERAL.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableCETESB_GERAL.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_GERAL.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableCETESB_GERAL.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableCETESB_GERAL.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableCETESB_GERAL.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_GERAL.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPORG_nm_cadastroNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_GERAL.PORG_nm_cadastroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPORG_nm_cadastroNull()
            Me(Me.tableCETESB_GERAL.PORG_nm_cadastroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPORG_ds_atividadeNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_GERAL.PORG_ds_atividadeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPORG_ds_atividadeNull()
            Me(Me.tableCETESB_GERAL.PORG_ds_atividadeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class INFO_ICMBIORow
        Inherits Global.System.Data.DataRow
        
        Private tableINFO_ICMBIO As INFO_ICMBIODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINFO_ICMBIO = CType(Me.Table,INFO_ICMBIODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableINFO_ICMBIO.idColumn),Integer)
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableINFO_ICMBIO.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableINFO_ICMBIO.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_cd_info() As Integer
            Get
                Return CType(Me(Me.tableINFO_ICMBIO.PINF_cd_infoColumn),Integer)
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.PINF_cd_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_ICMBIO.PINF_ds_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_ds_info' in table 'INFO_ICMBIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.PINF_ds_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TINF_nm_tipo_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_ICMBIO.TINF_nm_tipo_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TINF_nm_tipo_info' in table 'INFO_ICMBIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.TINF_nm_tipo_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SINF_ds_situacao_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_ICMBIO.SINF_ds_situacao_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SINF_ds_situacao_info' in table 'INFO_ICMBIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.SINF_ds_situacao_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_dt_ini() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINFO_ICMBIO.PINF_dt_iniColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_dt_ini' in table 'INFO_ICMBIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.PINF_dt_iniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_dt_fim() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINFO_ICMBIO.PINF_dt_fimColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_dt_fim' in table 'INFO_ICMBIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.PINF_dt_fimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_local_documento() As String
            Get
                Return CType(Me(Me.tableINFO_ICMBIO.PINF_ds_local_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.PINF_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_rede_documento() As String
            Get
                Return CType(Me(Me.tableINFO_ICMBIO.PINF_ds_rede_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.PINF_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_path_documento() As String
            Get
                Return CType(Me(Me.tableINFO_ICMBIO.PINF_ds_path_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.PINF_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableINFO_ICMBIO.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableINFO_ICMBIO.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableINFO_ICMBIO.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableINFO_ICMBIO.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_ICMBIO.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_ds_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_ICMBIO.PINF_ds_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_ds_infoNull()
            Me(Me.tableINFO_ICMBIO.PINF_ds_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTINF_nm_tipo_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_ICMBIO.TINF_nm_tipo_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTINF_nm_tipo_infoNull()
            Me(Me.tableINFO_ICMBIO.TINF_nm_tipo_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSINF_ds_situacao_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_ICMBIO.SINF_ds_situacao_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSINF_ds_situacao_infoNull()
            Me(Me.tableINFO_ICMBIO.SINF_ds_situacao_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_dt_iniNull() As Boolean
            Return Me.IsNull(Me.tableINFO_ICMBIO.PINF_dt_iniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_dt_iniNull()
            Me(Me.tableINFO_ICMBIO.PINF_dt_iniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_dt_fimNull() As Boolean
            Return Me.IsNull(Me.tableINFO_ICMBIO.PINF_dt_fimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_dt_fimNull()
            Me(Me.tableINFO_ICMBIO.PINF_dt_fimColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class INFO_PETROBRASRow
        Inherits Global.System.Data.DataRow
        
        Private tableINFO_PETROBRAS As INFO_PETROBRASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINFO_PETROBRAS = CType(Me.Table,INFO_PETROBRASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableINFO_PETROBRAS.idColumn),Integer)
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableINFO_PETROBRAS.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableINFO_PETROBRAS.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_cd_info() As Integer
            Get
                Return CType(Me(Me.tableINFO_PETROBRAS.PINF_cd_infoColumn),Integer)
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.PINF_cd_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_PETROBRAS.PINF_ds_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_ds_info' in table 'INFO_PETROBRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.PINF_ds_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TINF_nm_tipo_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_PETROBRAS.TINF_nm_tipo_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TINF_nm_tipo_info' in table 'INFO_PETROBRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.TINF_nm_tipo_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SINF_ds_situacao_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_PETROBRAS.SINF_ds_situacao_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SINF_ds_situacao_info' in table 'INFO_PETROBRAS' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.SINF_ds_situacao_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_dt_ini() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINFO_PETROBRAS.PINF_dt_iniColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_dt_ini' in table 'INFO_PETROBRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.PINF_dt_iniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_dt_fim() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINFO_PETROBRAS.PINF_dt_fimColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_dt_fim' in table 'INFO_PETROBRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.PINF_dt_fimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_local_documento() As String
            Get
                Return CType(Me(Me.tableINFO_PETROBRAS.PINF_ds_local_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.PINF_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_rede_documento() As String
            Get
                Return CType(Me(Me.tableINFO_PETROBRAS.PINF_ds_rede_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.PINF_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_path_documento() As String
            Get
                Return CType(Me(Me.tableINFO_PETROBRAS.PINF_ds_path_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.PINF_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableINFO_PETROBRAS.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableINFO_PETROBRAS.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableINFO_PETROBRAS.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableINFO_PETROBRAS.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PETROBRAS.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_ds_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_PETROBRAS.PINF_ds_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_ds_infoNull()
            Me(Me.tableINFO_PETROBRAS.PINF_ds_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTINF_nm_tipo_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_PETROBRAS.TINF_nm_tipo_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTINF_nm_tipo_infoNull()
            Me(Me.tableINFO_PETROBRAS.TINF_nm_tipo_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSINF_ds_situacao_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_PETROBRAS.SINF_ds_situacao_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSINF_ds_situacao_infoNull()
            Me(Me.tableINFO_PETROBRAS.SINF_ds_situacao_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_dt_iniNull() As Boolean
            Return Me.IsNull(Me.tableINFO_PETROBRAS.PINF_dt_iniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_dt_iniNull()
            Me(Me.tableINFO_PETROBRAS.PINF_dt_iniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_dt_fimNull() As Boolean
            Return Me.IsNull(Me.tableINFO_PETROBRAS.PINF_dt_fimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_dt_fimNull()
            Me(Me.tableINFO_PETROBRAS.PINF_dt_fimColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class INFO_PREFEITURARow
        Inherits Global.System.Data.DataRow
        
        Private tableINFO_PREFEITURA As INFO_PREFEITURADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINFO_PREFEITURA = CType(Me.Table,INFO_PREFEITURADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableINFO_PREFEITURA.idColumn),Integer)
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableINFO_PREFEITURA.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableINFO_PREFEITURA.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_cd_info() As Integer
            Get
                Return CType(Me(Me.tableINFO_PREFEITURA.PINF_cd_infoColumn),Integer)
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.PINF_cd_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_PREFEITURA.PINF_ds_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_ds_info' in table 'INFO_PREFEITURA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.PINF_ds_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TINF_nm_tipo_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_PREFEITURA.TINF_nm_tipo_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TINF_nm_tipo_info' in table 'INFO_PREFEITURA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.TINF_nm_tipo_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SINF_ds_situacao_info() As String
            Get
                Try 
                    Return CType(Me(Me.tableINFO_PREFEITURA.SINF_ds_situacao_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SINF_ds_situacao_info' in table 'INFO_PREFEITURA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.SINF_ds_situacao_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_dt_ini() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINFO_PREFEITURA.PINF_dt_iniColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_dt_ini' in table 'INFO_PREFEITURA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.PINF_dt_iniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_dt_fim() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINFO_PREFEITURA.PINF_dt_fimColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINF_dt_fim' in table 'INFO_PREFEITURA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.PINF_dt_fimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_local_documento() As String
            Get
                Return CType(Me(Me.tableINFO_PREFEITURA.PINF_ds_local_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.PINF_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_rede_documento() As String
            Get
                Return CType(Me(Me.tableINFO_PREFEITURA.PINF_ds_rede_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.PINF_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINF_ds_path_documento() As String
            Get
                Return CType(Me(Me.tableINFO_PREFEITURA.PINF_ds_path_documentoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.PINF_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableINFO_PREFEITURA.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableINFO_PREFEITURA.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableINFO_PREFEITURA.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableINFO_PREFEITURA.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableINFO_PREFEITURA.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_ds_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_PREFEITURA.PINF_ds_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_ds_infoNull()
            Me(Me.tableINFO_PREFEITURA.PINF_ds_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTINF_nm_tipo_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_PREFEITURA.TINF_nm_tipo_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTINF_nm_tipo_infoNull()
            Me(Me.tableINFO_PREFEITURA.TINF_nm_tipo_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSINF_ds_situacao_infoNull() As Boolean
            Return Me.IsNull(Me.tableINFO_PREFEITURA.SINF_ds_situacao_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSINF_ds_situacao_infoNull()
            Me(Me.tableINFO_PREFEITURA.SINF_ds_situacao_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_dt_iniNull() As Boolean
            Return Me.IsNull(Me.tableINFO_PREFEITURA.PINF_dt_iniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_dt_iniNull()
            Me(Me.tableINFO_PREFEITURA.PINF_dt_iniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINF_dt_fimNull() As Boolean
            Return Me.IsNull(Me.tableINFO_PREFEITURA.PINF_dt_fimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINF_dt_fimNull()
            Me(Me.tableINFO_PREFEITURA.PINF_dt_fimColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class GERAL_EVENTOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableGERAL_EVENTOS As GERAL_EVENTOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGERAL_EVENTOS = CType(Me.Table,GERAL_EVENTOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableGERAL_EVENTOS.idColumn),Integer)
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableGERAL_EVENTOS.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PREV_cd_evento() As String
            Get
                Return CType(Me(Me.tableGERAL_EVENTOS.PREV_cd_eventoColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PREV_cd_eventoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PREV_ds_evento() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_EVENTOS.PREV_ds_eventoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PREV_ds_evento' in table 'GERAL_EVENTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PREV_ds_eventoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PREV_dt_ocorrencia() As Date
            Get
                Return CType(Me(Me.tableGERAL_EVENTOS.PREV_dt_ocorrenciaColumn),Date)
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PREV_dt_ocorrenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableGERAL_EVENTOS.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableGERAL_EVENTOS.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableGERAL_EVENTOS.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableGERAL_EVENTOS.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_titular() As String
            Get
                Return CType(Me(Me.tableGERAL_EVENTOS.PROC_ds_titularColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PROC_ds_titularColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_vl_ano() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_EVENTOS.PROC_vl_anoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_vl_ano' in table 'GERAL_EVENTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PROC_vl_anoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_nm_processo() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_EVENTOS.PROC_nm_processoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_nm_processo' in table 'GERAL_EVENTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PROC_nm_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_id_processo() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_EVENTOS.PROC_id_processoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_id_processo' in table 'GERAL_EVENTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PROC_id_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FASE_cd_fase() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_EVENTOS.FASE_cd_faseColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FASE_cd_fase' in table 'GERAL_EVENTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.FASE_cd_faseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_ultimo_evento() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_EVENTOS.PROC_ds_ultimo_eventoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_ultimo_evento' in table 'GERAL_EVENTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PROC_ds_ultimo_eventoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_substancia() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_EVENTOS.PROC_ds_substanciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_substancia' in table 'GERAL_EVENTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PROC_ds_substanciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_area() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_EVENTOS.PROC_ds_areaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_area' in table 'GERAL_EVENTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PROC_ds_areaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_uso() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_EVENTOS.PROC_ds_usoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_uso' in table 'GERAL_EVENTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PROC_ds_usoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_link() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_EVENTOS.PROC_ds_linkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_link' in table 'GERAL_EVENTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PROC_ds_linkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UNFE_cd_unidade_federativa() As String
            Get
                Try 
                    Return CType(Me(Me.tableGERAL_EVENTOS.UNFE_cd_unidade_federativaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNFE_cd_unidade_federativa' in table 'GERAL_EVENTOS' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.UNFE_cd_unidade_federativaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_fl_tipo_inclusao() As String
            Get
                Return CType(Me(Me.tableGERAL_EVENTOS.PROC_fl_tipo_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableGERAL_EVENTOS.PROC_fl_tipo_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPREV_ds_eventoNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_EVENTOS.PREV_ds_eventoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPREV_ds_eventoNull()
            Me(Me.tableGERAL_EVENTOS.PREV_ds_eventoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_vl_anoNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_EVENTOS.PROC_vl_anoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_vl_anoNull()
            Me(Me.tableGERAL_EVENTOS.PROC_vl_anoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_nm_processoNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_EVENTOS.PROC_nm_processoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_nm_processoNull()
            Me(Me.tableGERAL_EVENTOS.PROC_nm_processoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_id_processoNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_EVENTOS.PROC_id_processoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_id_processoNull()
            Me(Me.tableGERAL_EVENTOS.PROC_id_processoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFASE_cd_faseNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_EVENTOS.FASE_cd_faseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFASE_cd_faseNull()
            Me(Me.tableGERAL_EVENTOS.FASE_cd_faseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_ultimo_eventoNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_EVENTOS.PROC_ds_ultimo_eventoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_ultimo_eventoNull()
            Me(Me.tableGERAL_EVENTOS.PROC_ds_ultimo_eventoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_substanciaNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_EVENTOS.PROC_ds_substanciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_substanciaNull()
            Me(Me.tableGERAL_EVENTOS.PROC_ds_substanciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_areaNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_EVENTOS.PROC_ds_areaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_areaNull()
            Me(Me.tableGERAL_EVENTOS.PROC_ds_areaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_usoNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_EVENTOS.PROC_ds_usoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_usoNull()
            Me(Me.tableGERAL_EVENTOS.PROC_ds_usoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_linkNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_EVENTOS.PROC_ds_linkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_linkNull()
            Me(Me.tableGERAL_EVENTOS.PROC_ds_linkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUNFE_cd_unidade_federativaNull() As Boolean
            Return Me.IsNull(Me.tableGERAL_EVENTOS.UNFE_cd_unidade_federativaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUNFE_cd_unidade_federativaNull()
            Me(Me.tableGERAL_EVENTOS.UNFE_cd_unidade_federativaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class CETESB_MPRIMA_PRODUTORow
        Inherits Global.System.Data.DataRow
        
        Private tableCETESB_MPRIMA_PRODUTO As CETESB_MPRIMA_PRODUTODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCETESB_MPRIMA_PRODUTO = CType(Me.Table,CETESB_MPRIMA_PRODUTODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.idColumn),Integer)
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MPRI_nm_mprima() As String
            Get
                Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.MPRI_nm_mprimaColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.MPRI_nm_mprimaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRMP_vl_mprima() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_vl_mprimaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMP_vl_mprima' in table 'CETESB_MPRIMA_PRODUTO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_vl_mprimaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRMP_un_mprima() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_un_mprimaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMP_un_mprima' in table 'CETESB_MPRIMA_PRODUTO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_un_mprimaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROD_nm_produto() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.PROD_nm_produtoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROD_nm_produto' in table 'CETESB_MPRIMA_PRODUTO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.PROD_nm_produtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRPD_vl_produto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_vl_produtoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRPD_vl_produto' in table 'CETESB_MPRIMA_PRODUTO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_vl_produtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRPD_un_produto() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_un_produtoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRPD_un_produto' in table 'CETESB_MPRIMA_PRODUTO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_un_produtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRPD_qt_produto() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_qt_produtoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRPD_qt_produto' in table 'CETESB_MPRIMA_PRODUTO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_qt_produtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UPRD_nm_uso() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.UPRD_nm_usoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPRD_nm_uso' in table 'CETESB_MPRIMA_PRODUTO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.UPRD_nm_usoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRMP_qt_mprima() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_qt_mprimaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMP_qt_mprima' in table 'CETESB_MPRIMA_PRODUTO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_qt_mprimaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRMP_ds_mprima() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_ds_mprimaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRMP_ds_mprima' in table 'CETESB_MPRIMA_PRODUTO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_ds_mprimaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRMP_vl_mprimaNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_vl_mprimaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRMP_vl_mprimaNull()
            Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_vl_mprimaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRMP_un_mprimaNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_un_mprimaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRMP_un_mprimaNull()
            Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_un_mprimaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROD_nm_produtoNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_MPRIMA_PRODUTO.PROD_nm_produtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROD_nm_produtoNull()
            Me(Me.tableCETESB_MPRIMA_PRODUTO.PROD_nm_produtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRPD_vl_produtoNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_vl_produtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRPD_vl_produtoNull()
            Me(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_vl_produtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRPD_un_produtoNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_un_produtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRPD_un_produtoNull()
            Me(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_un_produtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRPD_qt_produtoNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_qt_produtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRPD_qt_produtoNull()
            Me(Me.tableCETESB_MPRIMA_PRODUTO.PRPD_qt_produtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUPRD_nm_usoNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_MPRIMA_PRODUTO.UPRD_nm_usoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUPRD_nm_usoNull()
            Me(Me.tableCETESB_MPRIMA_PRODUTO.UPRD_nm_usoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRMP_qt_mprimaNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_qt_mprimaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRMP_qt_mprimaNull()
            Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_qt_mprimaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRMP_ds_mprimaNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_ds_mprimaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRMP_ds_mprimaNull()
            Me(Me.tableCETESB_MPRIMA_PRODUTO.PRMP_ds_mprimaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DNPM_SUBSTANCIARow
        Inherits Global.System.Data.DataRow
        
        Private tableDNPM_SUBSTANCIA As DNPM_SUBSTANCIADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDNPM_SUBSTANCIA = CType(Me.Table,DNPM_SUBSTANCIADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableDNPM_SUBSTANCIA.idColumn),Integer)
            End Get
            Set
                Me(Me.tableDNPM_SUBSTANCIA.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableDNPM_SUBSTANCIA.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_SUBSTANCIA.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBS_nm_substancia() As String
            Get
                Return CType(Me(Me.tableDNPM_SUBSTANCIA.SUBS_nm_substanciaColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_SUBSTANCIA.SUBS_nm_substanciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TUSO_nm_uso() As String
            Get
                Return CType(Me(Me.tableDNPM_SUBSTANCIA.TUSO_nm_usoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_SUBSTANCIA.TUSO_nm_usoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PSUB_dt_inicio() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_SUBSTANCIA.PSUB_dt_inicioColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PSUB_dt_inicio' in table 'DNPM_SUBSTANCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_SUBSTANCIA.PSUB_dt_inicioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PSUB_dt_fim() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_SUBSTANCIA.PSUB_dt_fimColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PSUB_dt_fim' in table 'DNPM_SUBSTANCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_SUBSTANCIA.PSUB_dt_fimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PSUB_ds_motivo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_SUBSTANCIA.PSUB_ds_motivoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PSUB_ds_motivo' in table 'DNPM_SUBSTANCIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_SUBSTANCIA.PSUB_ds_motivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableDNPM_SUBSTANCIA.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_SUBSTANCIA.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableDNPM_SUBSTANCIA.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_SUBSTANCIA.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableDNPM_SUBSTANCIA.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_SUBSTANCIA.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableDNPM_SUBSTANCIA.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_SUBSTANCIA.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPSUB_dt_inicioNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_SUBSTANCIA.PSUB_dt_inicioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPSUB_dt_inicioNull()
            Me(Me.tableDNPM_SUBSTANCIA.PSUB_dt_inicioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPSUB_dt_fimNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_SUBSTANCIA.PSUB_dt_fimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPSUB_dt_fimNull()
            Me(Me.tableDNPM_SUBSTANCIA.PSUB_dt_fimColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPSUB_ds_motivoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_SUBSTANCIA.PSUB_ds_motivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPSUB_ds_motivoNull()
            Me(Me.tableDNPM_SUBSTANCIA.PSUB_ds_motivoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DNPM_TITULORow
        Inherits Global.System.Data.DataRow
        
        Private tableDNPM_TITULO As DNPM_TITULODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDNPM_TITULO = CType(Me.Table,DNPM_TITULODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableDNPM_TITULO.idColumn),Integer)
            End Get
            Set
                Me(Me.tableDNPM_TITULO.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableDNPM_TITULO.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_TITULO.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableDNPM_TITULO.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_TITULO.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_nm_titulo() As String
            Get
                Return CType(Me(Me.tableDNPM_TITULO.PTIT_nm_tituloColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_TITULO.PTIT_nm_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_titulo() As String
            Get
                Return CType(Me(Me.tableDNPM_TITULO.PTIT_ds_tituloColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_TITULO.PTIT_ds_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTIT_ds_tipo_titulo() As String
            Get
                Return CType(Me(Me.tableDNPM_TITULO.TTIT_ds_tipo_tituloColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_TITULO.TTIT_ds_tipo_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SITU_ds_situacao_titulo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_TITULO.SITU_ds_situacao_tituloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SITU_ds_situacao_titulo' in table 'DNPM_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_TITULO.SITU_ds_situacao_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_dt_publicacao() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_TITULO.PTIT_dt_publicacaoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_dt_publicacao' in table 'DNPM_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_TITULO.PTIT_dt_publicacaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_dt_vencimento() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_TITULO.PTIT_dt_vencimentoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_dt_vencimento' in table 'DNPM_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_TITULO.PTIT_dt_vencimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_nome_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_TITULO.PTIT_ds_nome_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_nome_documento' in table 'DNPM_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_TITULO.PTIT_ds_nome_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_local_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_TITULO.PTIT_ds_local_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_local_documento' in table 'DNPM_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_TITULO.PTIT_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_rede_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_TITULO.PTIT_ds_rede_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_rede_documento' in table 'DNPM_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_TITULO.PTIT_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_path_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_TITULO.PTIT_ds_path_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_path_documento' in table 'DNPM_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_TITULO.PTIT_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableDNPM_TITULO.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_TITULO.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableDNPM_TITULO.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_TITULO.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableDNPM_TITULO.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_TITULO.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableDNPM_TITULO.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_TITULO.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSITU_ds_situacao_tituloNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_TITULO.SITU_ds_situacao_tituloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSITU_ds_situacao_tituloNull()
            Me(Me.tableDNPM_TITULO.SITU_ds_situacao_tituloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_dt_publicacaoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_TITULO.PTIT_dt_publicacaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_dt_publicacaoNull()
            Me(Me.tableDNPM_TITULO.PTIT_dt_publicacaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_dt_vencimentoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_TITULO.PTIT_dt_vencimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_dt_vencimentoNull()
            Me(Me.tableDNPM_TITULO.PTIT_dt_vencimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_nome_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_TITULO.PTIT_ds_nome_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_nome_documentoNull()
            Me(Me.tableDNPM_TITULO.PTIT_ds_nome_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_local_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_TITULO.PTIT_ds_local_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_local_documentoNull()
            Me(Me.tableDNPM_TITULO.PTIT_ds_local_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_rede_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_TITULO.PTIT_ds_rede_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_rede_documentoNull()
            Me(Me.tableDNPM_TITULO.PTIT_ds_rede_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_path_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_TITULO.PTIT_ds_path_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_path_documentoNull()
            Me(Me.tableDNPM_TITULO.PTIT_ds_path_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DAEE_TITULORow
        Inherits Global.System.Data.DataRow
        
        Private tableDAEE_TITULO As DAEE_TITULODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDAEE_TITULO = CType(Me.Table,DAEE_TITULODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableDAEE_TITULO.idColumn),Integer)
            End Get
            Set
                Me(Me.tableDAEE_TITULO.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableDAEE_TITULO.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_TITULO.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableDAEE_TITULO.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_TITULO.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_nm_titulo() As String
            Get
                Return CType(Me(Me.tableDAEE_TITULO.PTIT_nm_tituloColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_TITULO.PTIT_nm_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_titulo() As String
            Get
                Return CType(Me(Me.tableDAEE_TITULO.PTIT_ds_tituloColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_TITULO.PTIT_ds_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTIT_ds_tipo_titulo() As String
            Get
                Return CType(Me(Me.tableDAEE_TITULO.TTIT_ds_tipo_tituloColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_TITULO.TTIT_ds_tipo_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SITU_ds_situacao_titulo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAEE_TITULO.SITU_ds_situacao_tituloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SITU_ds_situacao_titulo' in table 'DAEE_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAEE_TITULO.SITU_ds_situacao_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_dt_publicacao() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDAEE_TITULO.PTIT_dt_publicacaoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_dt_publicacao' in table 'DAEE_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAEE_TITULO.PTIT_dt_publicacaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_dt_vencimento() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDAEE_TITULO.PTIT_dt_vencimentoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_dt_vencimento' in table 'DAEE_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAEE_TITULO.PTIT_dt_vencimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_nome_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAEE_TITULO.PTIT_ds_nome_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_nome_documento' in table 'DAEE_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAEE_TITULO.PTIT_ds_nome_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_local_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAEE_TITULO.PTIT_ds_local_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_local_documento' in table 'DAEE_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAEE_TITULO.PTIT_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_rede_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAEE_TITULO.PTIT_ds_rede_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_rede_documento' in table 'DAEE_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAEE_TITULO.PTIT_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_path_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAEE_TITULO.PTIT_ds_path_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_path_documento' in table 'DAEE_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAEE_TITULO.PTIT_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableDAEE_TITULO.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableDAEE_TITULO.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableDAEE_TITULO.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_TITULO.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableDAEE_TITULO.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableDAEE_TITULO.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableDAEE_TITULO.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_TITULO.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSITU_ds_situacao_tituloNull() As Boolean
            Return Me.IsNull(Me.tableDAEE_TITULO.SITU_ds_situacao_tituloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSITU_ds_situacao_tituloNull()
            Me(Me.tableDAEE_TITULO.SITU_ds_situacao_tituloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_dt_publicacaoNull() As Boolean
            Return Me.IsNull(Me.tableDAEE_TITULO.PTIT_dt_publicacaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_dt_publicacaoNull()
            Me(Me.tableDAEE_TITULO.PTIT_dt_publicacaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_dt_vencimentoNull() As Boolean
            Return Me.IsNull(Me.tableDAEE_TITULO.PTIT_dt_vencimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_dt_vencimentoNull()
            Me(Me.tableDAEE_TITULO.PTIT_dt_vencimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_nome_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDAEE_TITULO.PTIT_ds_nome_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_nome_documentoNull()
            Me(Me.tableDAEE_TITULO.PTIT_ds_nome_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_local_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDAEE_TITULO.PTIT_ds_local_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_local_documentoNull()
            Me(Me.tableDAEE_TITULO.PTIT_ds_local_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_rede_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDAEE_TITULO.PTIT_ds_rede_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_rede_documentoNull()
            Me(Me.tableDAEE_TITULO.PTIT_ds_rede_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_path_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDAEE_TITULO.PTIT_ds_path_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_path_documentoNull()
            Me(Me.tableDAEE_TITULO.PTIT_ds_path_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ICMBIO_TITULORow
        Inherits Global.System.Data.DataRow
        
        Private tableICMBIO_TITULO As ICMBIO_TITULODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableICMBIO_TITULO = CType(Me.Table,ICMBIO_TITULODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableICMBIO_TITULO.idColumn),Integer)
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableICMBIO_TITULO.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableICMBIO_TITULO.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_nm_titulo() As String
            Get
                Return CType(Me(Me.tableICMBIO_TITULO.PTIT_nm_tituloColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.PTIT_nm_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_titulo() As String
            Get
                Return CType(Me(Me.tableICMBIO_TITULO.PTIT_ds_tituloColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.PTIT_ds_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTIT_ds_tipo_titulo() As String
            Get
                Return CType(Me(Me.tableICMBIO_TITULO.TTIT_ds_tipo_tituloColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.TTIT_ds_tipo_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SITU_ds_situacao_titulo() As String
            Get
                Try 
                    Return CType(Me(Me.tableICMBIO_TITULO.SITU_ds_situacao_tituloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SITU_ds_situacao_titulo' in table 'ICMBIO_TITULO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.SITU_ds_situacao_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_dt_publicacao() As Date
            Get
                Try 
                    Return CType(Me(Me.tableICMBIO_TITULO.PTIT_dt_publicacaoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_dt_publicacao' in table 'ICMBIO_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.PTIT_dt_publicacaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_dt_vencimento() As Date
            Get
                Try 
                    Return CType(Me(Me.tableICMBIO_TITULO.PTIT_dt_vencimentoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_dt_vencimento' in table 'ICMBIO_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.PTIT_dt_vencimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_nome_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableICMBIO_TITULO.PTIT_ds_nome_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_nome_documento' in table 'ICMBIO_TITULO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.PTIT_ds_nome_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_local_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableICMBIO_TITULO.PTIT_ds_local_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_local_documento' in table 'ICMBIO_TITULO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.PTIT_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_rede_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableICMBIO_TITULO.PTIT_ds_rede_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_rede_documento' in table 'ICMBIO_TITULO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.PTIT_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_path_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableICMBIO_TITULO.PTIT_ds_path_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_path_documento' in table 'ICMBIO_TITULO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.PTIT_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableICMBIO_TITULO.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableICMBIO_TITULO.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableICMBIO_TITULO.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableICMBIO_TITULO.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_TITULO.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSITU_ds_situacao_tituloNull() As Boolean
            Return Me.IsNull(Me.tableICMBIO_TITULO.SITU_ds_situacao_tituloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSITU_ds_situacao_tituloNull()
            Me(Me.tableICMBIO_TITULO.SITU_ds_situacao_tituloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_dt_publicacaoNull() As Boolean
            Return Me.IsNull(Me.tableICMBIO_TITULO.PTIT_dt_publicacaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_dt_publicacaoNull()
            Me(Me.tableICMBIO_TITULO.PTIT_dt_publicacaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_dt_vencimentoNull() As Boolean
            Return Me.IsNull(Me.tableICMBIO_TITULO.PTIT_dt_vencimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_dt_vencimentoNull()
            Me(Me.tableICMBIO_TITULO.PTIT_dt_vencimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_nome_documentoNull() As Boolean
            Return Me.IsNull(Me.tableICMBIO_TITULO.PTIT_ds_nome_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_nome_documentoNull()
            Me(Me.tableICMBIO_TITULO.PTIT_ds_nome_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_local_documentoNull() As Boolean
            Return Me.IsNull(Me.tableICMBIO_TITULO.PTIT_ds_local_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_local_documentoNull()
            Me(Me.tableICMBIO_TITULO.PTIT_ds_local_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_rede_documentoNull() As Boolean
            Return Me.IsNull(Me.tableICMBIO_TITULO.PTIT_ds_rede_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_rede_documentoNull()
            Me(Me.tableICMBIO_TITULO.PTIT_ds_rede_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_path_documentoNull() As Boolean
            Return Me.IsNull(Me.tableICMBIO_TITULO.PTIT_ds_path_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_path_documentoNull()
            Me(Me.tableICMBIO_TITULO.PTIT_ds_path_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PETROBRAS_TITULORow
        Inherits Global.System.Data.DataRow
        
        Private tablePETROBRAS_TITULO As PETROBRAS_TITULODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePETROBRAS_TITULO = CType(Me.Table,PETROBRAS_TITULODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tablePETROBRAS_TITULO.idColumn),Integer)
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_TITULO.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_TITULO.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_nm_titulo() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_TITULO.PTIT_nm_tituloColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.PTIT_nm_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_titulo() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_TITULO.PTIT_ds_tituloColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.PTIT_ds_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTIT_ds_tipo_titulo() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_TITULO.TTIT_ds_tipo_tituloColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.TTIT_ds_tipo_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SITU_ds_situacao_titulo() As String
            Get
                Try 
                    Return CType(Me(Me.tablePETROBRAS_TITULO.SITU_ds_situacao_tituloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SITU_ds_situacao_titulo' in table 'PETROBRAS_TITULO' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.SITU_ds_situacao_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_dt_publicacao() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePETROBRAS_TITULO.PTIT_dt_publicacaoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_dt_publicacao' in table 'PETROBRAS_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.PTIT_dt_publicacaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_dt_vencimento() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePETROBRAS_TITULO.PTIT_dt_vencimentoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_dt_vencimento' in table 'PETROBRAS_TITULO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.PTIT_dt_vencimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_nome_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tablePETROBRAS_TITULO.PTIT_ds_nome_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_nome_documento' in table 'PETROBRAS_TITULO' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.PTIT_ds_nome_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_local_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tablePETROBRAS_TITULO.PTIT_ds_local_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_local_documento' in table 'PETROBRAS_TITULO' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.PTIT_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_rede_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tablePETROBRAS_TITULO.PTIT_ds_rede_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_rede_documento' in table 'PETROBRAS_TITULO' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.PTIT_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_path_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tablePETROBRAS_TITULO.PTIT_ds_path_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_path_documento' in table 'PETROBRAS_TITULO' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.PTIT_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tablePETROBRAS_TITULO.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_TITULO.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tablePETROBRAS_TITULO.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_TITULO.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_TITULO.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSITU_ds_situacao_tituloNull() As Boolean
            Return Me.IsNull(Me.tablePETROBRAS_TITULO.SITU_ds_situacao_tituloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSITU_ds_situacao_tituloNull()
            Me(Me.tablePETROBRAS_TITULO.SITU_ds_situacao_tituloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_dt_publicacaoNull() As Boolean
            Return Me.IsNull(Me.tablePETROBRAS_TITULO.PTIT_dt_publicacaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_dt_publicacaoNull()
            Me(Me.tablePETROBRAS_TITULO.PTIT_dt_publicacaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_dt_vencimentoNull() As Boolean
            Return Me.IsNull(Me.tablePETROBRAS_TITULO.PTIT_dt_vencimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_dt_vencimentoNull()
            Me(Me.tablePETROBRAS_TITULO.PTIT_dt_vencimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_nome_documentoNull() As Boolean
            Return Me.IsNull(Me.tablePETROBRAS_TITULO.PTIT_ds_nome_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_nome_documentoNull()
            Me(Me.tablePETROBRAS_TITULO.PTIT_ds_nome_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_local_documentoNull() As Boolean
            Return Me.IsNull(Me.tablePETROBRAS_TITULO.PTIT_ds_local_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_local_documentoNull()
            Me(Me.tablePETROBRAS_TITULO.PTIT_ds_local_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_rede_documentoNull() As Boolean
            Return Me.IsNull(Me.tablePETROBRAS_TITULO.PTIT_ds_rede_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_rede_documentoNull()
            Me(Me.tablePETROBRAS_TITULO.PTIT_ds_rede_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_path_documentoNull() As Boolean
            Return Me.IsNull(Me.tablePETROBRAS_TITULO.PTIT_ds_path_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_path_documentoNull()
            Me(Me.tablePETROBRAS_TITULO.PTIT_ds_path_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PREFEITURA_TITULORow
        Inherits Global.System.Data.DataRow
        
        Private tablePREFEITURA_TITULO As PREFEITURA_TITULODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePREFEITURA_TITULO = CType(Me.Table,PREFEITURA_TITULODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tablePREFEITURA_TITULO.idColumn),Integer)
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_TITULO.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_TITULO.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_nm_titulo() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_TITULO.PTIT_nm_tituloColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.PTIT_nm_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_titulo() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_TITULO.PTIT_ds_tituloColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.PTIT_ds_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTIT_ds_tipo_titulo() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_TITULO.TTIT_ds_tipo_tituloColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.TTIT_ds_tipo_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SITU_ds_situacao_titulo() As String
            Get
                Try 
                    Return CType(Me(Me.tablePREFEITURA_TITULO.SITU_ds_situacao_tituloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SITU_ds_situacao_titulo' in table 'PREFEITURA_TITULO' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.SITU_ds_situacao_tituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_dt_publicacao() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePREFEITURA_TITULO.PTIT_dt_publicacaoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_dt_publicacao' in table 'PREFEITURA_TITULO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.PTIT_dt_publicacaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_dt_vencimento() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePREFEITURA_TITULO.PTIT_dt_vencimentoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_dt_vencimento' in table 'PREFEITURA_TITULO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.PTIT_dt_vencimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_nome_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tablePREFEITURA_TITULO.PTIT_ds_nome_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_nome_documento' in table 'PREFEITURA_TITULO' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.PTIT_ds_nome_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_local_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tablePREFEITURA_TITULO.PTIT_ds_local_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_local_documento' in table 'PREFEITURA_TITULO' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.PTIT_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_rede_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tablePREFEITURA_TITULO.PTIT_ds_rede_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_rede_documento' in table 'PREFEITURA_TITULO' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.PTIT_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTIT_ds_path_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tablePREFEITURA_TITULO.PTIT_ds_path_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTIT_ds_path_documento' in table 'PREFEITURA_TITULO' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.PTIT_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tablePREFEITURA_TITULO.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_TITULO.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tablePREFEITURA_TITULO.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_TITULO.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_TITULO.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSITU_ds_situacao_tituloNull() As Boolean
            Return Me.IsNull(Me.tablePREFEITURA_TITULO.SITU_ds_situacao_tituloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSITU_ds_situacao_tituloNull()
            Me(Me.tablePREFEITURA_TITULO.SITU_ds_situacao_tituloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_dt_publicacaoNull() As Boolean
            Return Me.IsNull(Me.tablePREFEITURA_TITULO.PTIT_dt_publicacaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_dt_publicacaoNull()
            Me(Me.tablePREFEITURA_TITULO.PTIT_dt_publicacaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_dt_vencimentoNull() As Boolean
            Return Me.IsNull(Me.tablePREFEITURA_TITULO.PTIT_dt_vencimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_dt_vencimentoNull()
            Me(Me.tablePREFEITURA_TITULO.PTIT_dt_vencimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_nome_documentoNull() As Boolean
            Return Me.IsNull(Me.tablePREFEITURA_TITULO.PTIT_ds_nome_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_nome_documentoNull()
            Me(Me.tablePREFEITURA_TITULO.PTIT_ds_nome_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_local_documentoNull() As Boolean
            Return Me.IsNull(Me.tablePREFEITURA_TITULO.PTIT_ds_local_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_local_documentoNull()
            Me(Me.tablePREFEITURA_TITULO.PTIT_ds_local_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_rede_documentoNull() As Boolean
            Return Me.IsNull(Me.tablePREFEITURA_TITULO.PTIT_ds_rede_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_rede_documentoNull()
            Me(Me.tablePREFEITURA_TITULO.PTIT_ds_rede_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTIT_ds_path_documentoNull() As Boolean
            Return Me.IsNull(Me.tablePREFEITURA_TITULO.PTIT_ds_path_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTIT_ds_path_documentoNull()
            Me(Me.tablePREFEITURA_TITULO.PTIT_ds_path_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class CETESB_SDRow
        Inherits Global.System.Data.DataRow
        
        Private tableCETESB_SD As CETESB_SDDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCETESB_SD = CType(Me.Table,CETESB_SDDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableCETESB_SD.idColumn),Integer)
            End Get
            Set
                Me(Me.tableCETESB_SD.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableCETESB_SD.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_SD.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableCETESB_SD.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_SD.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRSD_nm_sd() As String
            Get
                Return CType(Me(Me.tableCETESB_SD.PRSD_nm_sdColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_SD.PRSD_nm_sdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRSD_dt_sd() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_SD.PRSD_dt_sdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRSD_dt_sd' in table 'CETESB_SD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_SD.PRSD_dt_sdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRSD_nm_prc() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_SD.PRSD_nm_prcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRSD_nm_prc' in table 'CETESB_SD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_SD.PRSD_nm_prcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRSD_nm_doc() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_SD.PRSD_nm_docColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRSD_nm_doc' in table 'CETESB_SD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_SD.PRSD_nm_docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRSD_dt_ini() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_SD.PRSD_dt_iniColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRSD_dt_ini' in table 'CETESB_SD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_SD.PRSD_dt_iniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SISD_nm_situacao_sd() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_SD.SISD_nm_situacao_sdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SISD_nm_situacao_sd' in table 'CETESB_SD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_SD.SISD_nm_situacao_sdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OSSD_nm_objeto() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_SD.OSSD_nm_objetoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OSSD_nm_objeto' in table 'CETESB_SD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_SD.OSSD_nm_objetoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableCETESB_SD.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableCETESB_SD.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableCETESB_SD.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_SD.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableCETESB_SD.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableCETESB_SD.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableCETESB_SD.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_SD.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRSD_dt_sdNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_SD.PRSD_dt_sdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRSD_dt_sdNull()
            Me(Me.tableCETESB_SD.PRSD_dt_sdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRSD_nm_prcNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_SD.PRSD_nm_prcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRSD_nm_prcNull()
            Me(Me.tableCETESB_SD.PRSD_nm_prcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRSD_nm_docNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_SD.PRSD_nm_docColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRSD_nm_docNull()
            Me(Me.tableCETESB_SD.PRSD_nm_docColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRSD_dt_iniNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_SD.PRSD_dt_iniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRSD_dt_iniNull()
            Me(Me.tableCETESB_SD.PRSD_dt_iniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSISD_nm_situacao_sdNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_SD.SISD_nm_situacao_sdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSISD_nm_situacao_sdNull()
            Me(Me.tableCETESB_SD.SISD_nm_situacao_sdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOSSD_nm_objetoNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_SD.OSSD_nm_objetoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOSSD_nm_objetoNull()
            Me(Me.tableCETESB_SD.OSSD_nm_objetoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DNPM_DOCRow
        Inherits Global.System.Data.DataRow
        
        Private tableDNPM_DOC As DNPM_DOCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDNPM_DOC = CType(Me.Table,DNPM_DOCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableDNPM_DOC.idColumn),Integer)
            End Get
            Set
                Me(Me.tableDNPM_DOC.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableDNPM_DOC.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_DOC.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableDNPM_DOC.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_DOC.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_nm_documento() As String
            Get
                Return CType(Me(Me.tableDNPM_DOC.PDOC_nm_documentoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_DOC.PDOC_nm_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDNPM_DOC.PDOC_ds_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDOC_ds_documento' in table 'DNPM_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDNPM_DOC.PDOC_ds_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_local_documento() As String
            Get
                Return CType(Me(Me.tableDNPM_DOC.PDOC_ds_local_documentoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_DOC.PDOC_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_rede_documento() As String
            Get
                Return CType(Me(Me.tableDNPM_DOC.PDOC_ds_rede_documentoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_DOC.PDOC_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_path_documento() As String
            Get
                Return CType(Me(Me.tableDNPM_DOC.PDOC_ds_path_documentoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_DOC.PDOC_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableDNPM_DOC.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_DOC.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableDNPM_DOC.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_DOC.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableDNPM_DOC.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableDNPM_DOC.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableDNPM_DOC.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableDNPM_DOC.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPDOC_ds_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDNPM_DOC.PDOC_ds_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPDOC_ds_documentoNull()
            Me(Me.tableDNPM_DOC.PDOC_ds_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class CETESB_DOCRow
        Inherits Global.System.Data.DataRow
        
        Private tableCETESB_DOC As CETESB_DOCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCETESB_DOC = CType(Me.Table,CETESB_DOCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableCETESB_DOC.idColumn),Integer)
            End Get
            Set
                Me(Me.tableCETESB_DOC.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableCETESB_DOC.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_DOC.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableCETESB_DOC.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_DOC.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_nm_documento() As String
            Get
                Return CType(Me(Me.tableCETESB_DOC.PDOC_nm_documentoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_DOC.PDOC_nm_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_DOC.PDOC_ds_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDOC_ds_documento' in table 'CETESB_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_DOC.PDOC_ds_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_local_documento() As String
            Get
                Return CType(Me(Me.tableCETESB_DOC.PDOC_ds_local_documentoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_DOC.PDOC_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_rede_documento() As String
            Get
                Return CType(Me(Me.tableCETESB_DOC.PDOC_ds_rede_documentoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_DOC.PDOC_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_path_documento() As String
            Get
                Return CType(Me(Me.tableCETESB_DOC.PDOC_ds_path_documentoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_DOC.PDOC_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableCETESB_DOC.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableCETESB_DOC.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableCETESB_DOC.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_DOC.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableCETESB_DOC.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableCETESB_DOC.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableCETESB_DOC.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_DOC.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPDOC_ds_documentoNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_DOC.PDOC_ds_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPDOC_ds_documentoNull()
            Me(Me.tableCETESB_DOC.PDOC_ds_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DAEE_DOCRow
        Inherits Global.System.Data.DataRow
        
        Private tableDAEE_DOC As DAEE_DOCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDAEE_DOC = CType(Me.Table,DAEE_DOCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableDAEE_DOC.idColumn),Integer)
            End Get
            Set
                Me(Me.tableDAEE_DOC.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableDAEE_DOC.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_DOC.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableDAEE_DOC.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_DOC.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_nm_documento() As String
            Get
                Return CType(Me(Me.tableDAEE_DOC.PDOC_nm_documentoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_DOC.PDOC_nm_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAEE_DOC.PDOC_ds_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDOC_ds_documento' in table 'DAEE_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAEE_DOC.PDOC_ds_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_local_documento() As String
            Get
                Return CType(Me(Me.tableDAEE_DOC.PDOC_ds_local_documentoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_DOC.PDOC_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_rede_documento() As String
            Get
                Return CType(Me(Me.tableDAEE_DOC.PDOC_ds_rede_documentoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_DOC.PDOC_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_path_documento() As String
            Get
                Return CType(Me(Me.tableDAEE_DOC.PDOC_ds_path_documentoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_DOC.PDOC_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableDAEE_DOC.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableDAEE_DOC.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableDAEE_DOC.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_DOC.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableDAEE_DOC.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableDAEE_DOC.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableDAEE_DOC.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_DOC.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPDOC_ds_documentoNull() As Boolean
            Return Me.IsNull(Me.tableDAEE_DOC.PDOC_ds_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPDOC_ds_documentoNull()
            Me(Me.tableDAEE_DOC.PDOC_ds_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ICMBIO_DOCRow
        Inherits Global.System.Data.DataRow
        
        Private tableICMBIO_DOC As ICMBIO_DOCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableICMBIO_DOC = CType(Me.Table,ICMBIO_DOCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableICMBIO_DOC.idColumn),Integer)
            End Get
            Set
                Me(Me.tableICMBIO_DOC.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableICMBIO_DOC.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_DOC.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableICMBIO_DOC.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_DOC.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_nm_documento() As String
            Get
                Return CType(Me(Me.tableICMBIO_DOC.PDOC_nm_documentoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_DOC.PDOC_nm_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableICMBIO_DOC.PDOC_ds_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDOC_ds_documento' in table 'ICMBIO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableICMBIO_DOC.PDOC_ds_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_local_documento() As String
            Get
                Return CType(Me(Me.tableICMBIO_DOC.PDOC_ds_local_documentoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_DOC.PDOC_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_rede_documento() As String
            Get
                Return CType(Me(Me.tableICMBIO_DOC.PDOC_ds_rede_documentoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_DOC.PDOC_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_path_documento() As String
            Get
                Return CType(Me(Me.tableICMBIO_DOC.PDOC_ds_path_documentoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_DOC.PDOC_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableICMBIO_DOC.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableICMBIO_DOC.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableICMBIO_DOC.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_DOC.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableICMBIO_DOC.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableICMBIO_DOC.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableICMBIO_DOC.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_DOC.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPDOC_ds_documentoNull() As Boolean
            Return Me.IsNull(Me.tableICMBIO_DOC.PDOC_ds_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPDOC_ds_documentoNull()
            Me(Me.tableICMBIO_DOC.PDOC_ds_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PETROBRAS_DOCRow
        Inherits Global.System.Data.DataRow
        
        Private tablePETROBRAS_DOC As PETROBRAS_DOCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePETROBRAS_DOC = CType(Me.Table,PETROBRAS_DOCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tablePETROBRAS_DOC.idColumn),Integer)
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_DOC.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_DOC.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_nm_documento() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_DOC.PDOC_nm_documentoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.PDOC_nm_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tablePETROBRAS_DOC.PDOC_ds_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDOC_ds_documento' in table 'PETROBRAS_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.PDOC_ds_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_local_documento() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_DOC.PDOC_ds_local_documentoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.PDOC_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_rede_documento() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_DOC.PDOC_ds_rede_documentoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.PDOC_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_path_documento() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_DOC.PDOC_ds_path_documentoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.PDOC_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tablePETROBRAS_DOC.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_DOC.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tablePETROBRAS_DOC.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_DOC.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_DOC.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPDOC_ds_documentoNull() As Boolean
            Return Me.IsNull(Me.tablePETROBRAS_DOC.PDOC_ds_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPDOC_ds_documentoNull()
            Me(Me.tablePETROBRAS_DOC.PDOC_ds_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PREFEITURA_DOCRow
        Inherits Global.System.Data.DataRow
        
        Private tablePREFEITURA_DOC As PREFEITURA_DOCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePREFEITURA_DOC = CType(Me.Table,PREFEITURA_DOCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tablePREFEITURA_DOC.idColumn),Integer)
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_DOC.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_DOC.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_nm_documento() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_DOC.PDOC_nm_documentoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.PDOC_nm_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tablePREFEITURA_DOC.PDOC_ds_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDOC_ds_documento' in table 'PREFEITURA_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.PDOC_ds_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_local_documento() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_DOC.PDOC_ds_local_documentoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.PDOC_ds_local_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_rede_documento() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_DOC.PDOC_ds_rede_documentoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.PDOC_ds_rede_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDOC_ds_path_documento() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_DOC.PDOC_ds_path_documentoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.PDOC_ds_path_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tablePREFEITURA_DOC.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_DOC.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tablePREFEITURA_DOC.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_DOC.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_DOC.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPDOC_ds_documentoNull() As Boolean
            Return Me.IsNull(Me.tablePREFEITURA_DOC.PDOC_ds_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPDOC_ds_documentoNull()
            Me(Me.tablePREFEITURA_DOC.PDOC_ds_documentoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class CETESB_NOTARow
        Inherits Global.System.Data.DataRow
        
        Private tableCETESB_NOTA As CETESB_NOTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCETESB_NOTA = CType(Me.Table,CETESB_NOTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableCETESB_NOTA.idColumn),Integer)
            End Get
            Set
                Me(Me.tableCETESB_NOTA.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableCETESB_NOTA.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_NOTA.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableCETESB_NOTA.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_NOTA.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_cd_nota() As Integer
            Get
                Return CType(Me(Me.tableCETESB_NOTA.PNOT_cd_notaColumn),Integer)
            End Get
            Set
                Me(Me.tableCETESB_NOTA.PNOT_cd_notaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_ds_nota() As String
            Get
                Return CType(Me(Me.tableCETESB_NOTA.PNOT_ds_notaColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_NOTA.PNOT_ds_notaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_dt_ocorrencia() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCETESB_NOTA.PNOT_dt_ocorrenciaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNOT_dt_ocorrencia' in table 'CETESB_NOTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCETESB_NOTA.PNOT_dt_ocorrenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableCETESB_NOTA.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableCETESB_NOTA.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableCETESB_NOTA.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_NOTA.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableCETESB_NOTA.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableCETESB_NOTA.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableCETESB_NOTA.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableCETESB_NOTA.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPNOT_dt_ocorrenciaNull() As Boolean
            Return Me.IsNull(Me.tableCETESB_NOTA.PNOT_dt_ocorrenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPNOT_dt_ocorrenciaNull()
            Me(Me.tableCETESB_NOTA.PNOT_dt_ocorrenciaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DAEE_NOTARow
        Inherits Global.System.Data.DataRow
        
        Private tableDAEE_NOTA As DAEE_NOTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDAEE_NOTA = CType(Me.Table,DAEE_NOTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableDAEE_NOTA.idColumn),Integer)
            End Get
            Set
                Me(Me.tableDAEE_NOTA.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableDAEE_NOTA.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_NOTA.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableDAEE_NOTA.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_NOTA.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_cd_nota() As Integer
            Get
                Return CType(Me(Me.tableDAEE_NOTA.PNOT_cd_notaColumn),Integer)
            End Get
            Set
                Me(Me.tableDAEE_NOTA.PNOT_cd_notaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_ds_nota() As String
            Get
                Return CType(Me(Me.tableDAEE_NOTA.PNOT_ds_notaColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_NOTA.PNOT_ds_notaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_dt_ocorrencia() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDAEE_NOTA.PNOT_dt_ocorrenciaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNOT_dt_ocorrencia' in table 'DAEE_NOTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAEE_NOTA.PNOT_dt_ocorrenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableDAEE_NOTA.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableDAEE_NOTA.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableDAEE_NOTA.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_NOTA.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableDAEE_NOTA.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableDAEE_NOTA.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableDAEE_NOTA.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableDAEE_NOTA.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPNOT_dt_ocorrenciaNull() As Boolean
            Return Me.IsNull(Me.tableDAEE_NOTA.PNOT_dt_ocorrenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPNOT_dt_ocorrenciaNull()
            Me(Me.tableDAEE_NOTA.PNOT_dt_ocorrenciaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ICMBIO_NOTARow
        Inherits Global.System.Data.DataRow
        
        Private tableICMBIO_NOTA As ICMBIO_NOTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableICMBIO_NOTA = CType(Me.Table,ICMBIO_NOTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableICMBIO_NOTA.idColumn),Integer)
            End Get
            Set
                Me(Me.tableICMBIO_NOTA.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableICMBIO_NOTA.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_NOTA.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tableICMBIO_NOTA.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_NOTA.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_cd_nota() As Integer
            Get
                Return CType(Me(Me.tableICMBIO_NOTA.PNOT_cd_notaColumn),Integer)
            End Get
            Set
                Me(Me.tableICMBIO_NOTA.PNOT_cd_notaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_ds_nota() As String
            Get
                Return CType(Me(Me.tableICMBIO_NOTA.PNOT_ds_notaColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_NOTA.PNOT_ds_notaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_dt_ocorrencia() As Date
            Get
                Try 
                    Return CType(Me(Me.tableICMBIO_NOTA.PNOT_dt_ocorrenciaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNOT_dt_ocorrencia' in table 'ICMBIO_NOTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableICMBIO_NOTA.PNOT_dt_ocorrenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableICMBIO_NOTA.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableICMBIO_NOTA.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableICMBIO_NOTA.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_NOTA.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableICMBIO_NOTA.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableICMBIO_NOTA.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableICMBIO_NOTA.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableICMBIO_NOTA.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPNOT_dt_ocorrenciaNull() As Boolean
            Return Me.IsNull(Me.tableICMBIO_NOTA.PNOT_dt_ocorrenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPNOT_dt_ocorrenciaNull()
            Me(Me.tableICMBIO_NOTA.PNOT_dt_ocorrenciaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PETROBRAS_NOTARow
        Inherits Global.System.Data.DataRow
        
        Private tablePETROBRAS_NOTA As PETROBRAS_NOTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePETROBRAS_NOTA = CType(Me.Table,PETROBRAS_NOTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tablePETROBRAS_NOTA.idColumn),Integer)
            End Get
            Set
                Me(Me.tablePETROBRAS_NOTA.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_NOTA.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_NOTA.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_NOTA.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_NOTA.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_cd_nota() As Integer
            Get
                Return CType(Me(Me.tablePETROBRAS_NOTA.PNOT_cd_notaColumn),Integer)
            End Get
            Set
                Me(Me.tablePETROBRAS_NOTA.PNOT_cd_notaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_ds_nota() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_NOTA.PNOT_ds_notaColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_NOTA.PNOT_ds_notaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_dt_ocorrencia() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePETROBRAS_NOTA.PNOT_dt_ocorrenciaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNOT_dt_ocorrencia' in table 'PETROBRAS_NOTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePETROBRAS_NOTA.PNOT_dt_ocorrenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tablePETROBRAS_NOTA.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tablePETROBRAS_NOTA.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_NOTA.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_NOTA.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tablePETROBRAS_NOTA.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tablePETROBRAS_NOTA.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tablePETROBRAS_NOTA.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tablePETROBRAS_NOTA.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPNOT_dt_ocorrenciaNull() As Boolean
            Return Me.IsNull(Me.tablePETROBRAS_NOTA.PNOT_dt_ocorrenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPNOT_dt_ocorrenciaNull()
            Me(Me.tablePETROBRAS_NOTA.PNOT_dt_ocorrenciaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PREFEITURA_NOTARow
        Inherits Global.System.Data.DataRow
        
        Private tablePREFEITURA_NOTA As PREFEITURA_NOTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePREFEITURA_NOTA = CType(Me.Table,PREFEITURA_NOTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tablePREFEITURA_NOTA.idColumn),Integer)
            End Get
            Set
                Me(Me.tablePREFEITURA_NOTA.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_NOTA.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_NOTA.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_NOTA.ORGA_nm_orgaoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_NOTA.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_cd_nota() As Integer
            Get
                Return CType(Me(Me.tablePREFEITURA_NOTA.PNOT_cd_notaColumn),Integer)
            End Get
            Set
                Me(Me.tablePREFEITURA_NOTA.PNOT_cd_notaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_ds_nota() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_NOTA.PNOT_ds_notaColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_NOTA.PNOT_ds_notaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PNOT_dt_ocorrencia() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePREFEITURA_NOTA.PNOT_dt_ocorrenciaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNOT_dt_ocorrencia' in table 'PREFEITURA_NOTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePREFEITURA_NOTA.PNOT_dt_ocorrenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tablePREFEITURA_NOTA.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tablePREFEITURA_NOTA.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_NOTA.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_NOTA.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tablePREFEITURA_NOTA.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tablePREFEITURA_NOTA.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tablePREFEITURA_NOTA.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tablePREFEITURA_NOTA.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPNOT_dt_ocorrenciaNull() As Boolean
            Return Me.IsNull(Me.tablePREFEITURA_NOTA.PNOT_dt_ocorrenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPNOT_dt_ocorrenciaNull()
            Me(Me.tablePREFEITURA_NOTA.PNOT_dt_ocorrenciaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TABELA_DOCRow
        Inherits Global.System.Data.DataRow
        
        Private tableTABELA_DOC As TABELA_DOCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTABELA_DOC = CType(Me.Table,TABELA_DOCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_DOC.PROC_cd_processoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_cd_processo' in table 'TABELA_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_DOC.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_DOC.ORGA_nm_orgaoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORGA_nm_orgao' in table 'TABELA_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_DOC.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_nm_tipo_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_DOC.PROC_nm_tipo_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_nm_tipo_documento' in table 'TABELA_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_DOC.PROC_nm_tipo_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_id_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_DOC.PROC_id_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_id_documento' in table 'TABELA_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_DOC.PROC_id_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_titular() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_DOC.PROC_ds_titularColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_titular' in table 'TABELA_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_DOC.PROC_ds_titularColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_link() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_DOC.PROC_ds_linkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_link' in table 'TABELA_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_DOC.PROC_ds_linkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_dt_vencimento() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_DOC.PROC_dt_vencimentoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_dt_vencimento' in table 'TABELA_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_DOC.PROC_dt_vencimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_dt_publicacao() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_DOC.PROC_dt_publicacaoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_dt_publicacao' in table 'TABELA_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_DOC.PROC_dt_publicacaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_qt_dias() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_DOC.PROC_qt_diasColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_qt_dias' in table 'TABELA_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_DOC.PROC_qt_diasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_qt_inicio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_DOC.PROC_qt_inicioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_qt_inicio' in table 'TABELA_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_DOC.PROC_qt_inicioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_cd_processoNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_DOC.PROC_cd_processoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_cd_processoNull()
            Me(Me.tableTABELA_DOC.PROC_cd_processoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsORGA_nm_orgaoNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_DOC.ORGA_nm_orgaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetORGA_nm_orgaoNull()
            Me(Me.tableTABELA_DOC.ORGA_nm_orgaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_nm_tipo_documentoNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_DOC.PROC_nm_tipo_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_nm_tipo_documentoNull()
            Me(Me.tableTABELA_DOC.PROC_nm_tipo_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_id_documentoNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_DOC.PROC_id_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_id_documentoNull()
            Me(Me.tableTABELA_DOC.PROC_id_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_titularNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_DOC.PROC_ds_titularColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_titularNull()
            Me(Me.tableTABELA_DOC.PROC_ds_titularColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_linkNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_DOC.PROC_ds_linkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_linkNull()
            Me(Me.tableTABELA_DOC.PROC_ds_linkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_dt_vencimentoNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_DOC.PROC_dt_vencimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_dt_vencimentoNull()
            Me(Me.tableTABELA_DOC.PROC_dt_vencimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_dt_publicacaoNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_DOC.PROC_dt_publicacaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_dt_publicacaoNull()
            Me(Me.tableTABELA_DOC.PROC_dt_publicacaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_qt_diasNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_DOC.PROC_qt_diasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_qt_diasNull()
            Me(Me.tableTABELA_DOC.PROC_qt_diasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_qt_inicioNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_DOC.PROC_qt_inicioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_qt_inicioNull()
            Me(Me.tableTABELA_DOC.PROC_qt_inicioColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TabelaFiltroRow
        Inherits Global.System.Data.DataRow
        
        Private tableTabelaFiltro As TabelaFiltroDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTabelaFiltro = CType(Me.Table,TabelaFiltroDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Nome() As String
            Get
                Try 
                    Return CType(Me(Me.tableTabelaFiltro.NomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nome' in table 'TabelaFiltro' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTabelaFiltro.NomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Valor() As String
            Get
                Try 
                    Return CType(Me(Me.tableTabelaFiltro.ValorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Valor' in table 'TabelaFiltro' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTabelaFiltro.ValorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNomeNull() As Boolean
            Return Me.IsNull(Me.tableTabelaFiltro.NomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNomeNull()
            Me(Me.tableTabelaFiltro.NomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsValorNull() As Boolean
            Return Me.IsNull(Me.tableTabelaFiltro.ValorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetValorNull()
            Me(Me.tableTabelaFiltro.ValorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class GRAFICO_DOCRow
        Inherits Global.System.Data.DataRow
        
        Private tableGRAFICO_DOC As GRAFICO_DOCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGRAFICO_DOC = CType(Me.Table,GRAFICO_DOCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_cd_processoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_cd_processo' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGA_nm_orgao() As String
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.ORGA_nm_orgaoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORGA_nm_orgao' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.ORGA_nm_orgaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_nm_tipo_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_nm_tipo_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_nm_tipo_documento' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_nm_tipo_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_id_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_id_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_id_documento' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_id_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_titular() As String
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_ds_titularColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_titular' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_ds_titularColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_link() As String
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_ds_linkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_link' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_ds_linkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_dt_vencimento() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_dt_vencimentoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_dt_vencimento' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_dt_vencimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_dt_publicacao() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_dt_publicacaoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_dt_publicacao' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_dt_publicacaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_qt_dias() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_qt_diasColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_qt_dias' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_qt_diasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_qt_inicio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_qt_inicioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_qt_inicio' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_qt_inicioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_qt_dias_passados() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_qt_dias_passadosColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_qt_dias_passados' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_qt_dias_passadosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_qt_dias_total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_qt_dias_totalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_qt_dias_total' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_qt_dias_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_pc_vencto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_pc_venctoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_pc_vencto' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_pc_venctoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_pc_limite() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_pc_limiteColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_pc_limite' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_pc_limiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_pc_total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_pc_totalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_pc_total' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_pc_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_ds_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_documento' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_ds_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_data() As String
            Get
                Try 
                    Return CType(Me(Me.tableGRAFICO_DOC.PROC_ds_dataColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_data' in table 'GRAFICO_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGRAFICO_DOC.PROC_ds_dataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_cd_processoNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_cd_processoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_cd_processoNull()
            Me(Me.tableGRAFICO_DOC.PROC_cd_processoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsORGA_nm_orgaoNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.ORGA_nm_orgaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetORGA_nm_orgaoNull()
            Me(Me.tableGRAFICO_DOC.ORGA_nm_orgaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_nm_tipo_documentoNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_nm_tipo_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_nm_tipo_documentoNull()
            Me(Me.tableGRAFICO_DOC.PROC_nm_tipo_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_id_documentoNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_id_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_id_documentoNull()
            Me(Me.tableGRAFICO_DOC.PROC_id_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_titularNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_ds_titularColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_titularNull()
            Me(Me.tableGRAFICO_DOC.PROC_ds_titularColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_linkNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_ds_linkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_linkNull()
            Me(Me.tableGRAFICO_DOC.PROC_ds_linkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_dt_vencimentoNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_dt_vencimentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_dt_vencimentoNull()
            Me(Me.tableGRAFICO_DOC.PROC_dt_vencimentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_dt_publicacaoNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_dt_publicacaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_dt_publicacaoNull()
            Me(Me.tableGRAFICO_DOC.PROC_dt_publicacaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_qt_diasNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_qt_diasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_qt_diasNull()
            Me(Me.tableGRAFICO_DOC.PROC_qt_diasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_qt_inicioNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_qt_inicioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_qt_inicioNull()
            Me(Me.tableGRAFICO_DOC.PROC_qt_inicioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_qt_dias_passadosNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_qt_dias_passadosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_qt_dias_passadosNull()
            Me(Me.tableGRAFICO_DOC.PROC_qt_dias_passadosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_qt_dias_totalNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_qt_dias_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_qt_dias_totalNull()
            Me(Me.tableGRAFICO_DOC.PROC_qt_dias_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_pc_venctoNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_pc_venctoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_pc_venctoNull()
            Me(Me.tableGRAFICO_DOC.PROC_pc_venctoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_pc_limiteNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_pc_limiteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_pc_limiteNull()
            Me(Me.tableGRAFICO_DOC.PROC_pc_limiteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_pc_totalNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_pc_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_pc_totalNull()
            Me(Me.tableGRAFICO_DOC.PROC_pc_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_documentoNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_ds_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_documentoNull()
            Me(Me.tableGRAFICO_DOC.PROC_ds_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_dataNull() As Boolean
            Return Me.IsNull(Me.tableGRAFICO_DOC.PROC_ds_dataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_dataNull()
            Me(Me.tableGRAFICO_DOC.PROC_ds_dataColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TABELA_PROCRow
        Inherits Global.System.Data.DataRow
        
        Private tableTABELA_PROC As TABELA_PROCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTABELA_PROC = CType(Me.Table,TABELA_PROCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableTABELA_PROC.idColumn),Integer)
            End Get
            Set
                Me(Me.tableTABELA_PROC.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_processo() As String
            Get
                Return CType(Me(Me.tableTABELA_PROC.PROC_cd_processoColumn),String)
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_cd_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_titular() As String
            Get
                Return CType(Me(Me.tableTABELA_PROC.PROC_ds_titularColumn),String)
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_ds_titularColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_vl_ano() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.PROC_vl_anoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_vl_ano' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_vl_anoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_nm_processo() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.PROC_nm_processoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_nm_processo' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_nm_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_id_processo() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.PROC_id_processoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_id_processo' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_id_processoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FASE_cd_fase() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.FASE_cd_faseColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FASE_cd_fase' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.FASE_cd_faseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_ultimo_evento() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.PROC_ds_ultimo_eventoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_ultimo_evento' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_ds_ultimo_eventoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_substancia() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.PROC_ds_substanciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_substancia' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_ds_substanciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_area() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.PROC_ds_areaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_area' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_ds_areaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_uso() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.PROC_ds_usoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_uso' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_ds_usoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_ds_link() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.PROC_ds_linkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_ds_link' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_ds_linkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UNFE_cd_unidade_federativa() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.UNFE_cd_unidade_federativaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNFE_cd_unidade_federativa' in table 'TABELA_PROC' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.UNFE_cd_unidade_federativaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_fl_tipo_inclusao() As String
            Get
                Return CType(Me(Me.tableTABELA_PROC.PROC_fl_tipo_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_fl_tipo_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_inclusao() As Date
            Get
                Return CType(Me(Me.tableTABELA_PROC.AUDT_dt_inclusaoColumn),Date)
            End Get
            Set
                Me(Me.tableTABELA_PROC.AUDT_dt_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_inclusao() As String
            Get
                Return CType(Me(Me.tableTABELA_PROC.AUDT_nm_usuario_inclusaoColumn),String)
            End Get
            Set
                Me(Me.tableTABELA_PROC.AUDT_nm_usuario_inclusaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_dt_alteracao() As Date
            Get
                Return CType(Me(Me.tableTABELA_PROC.AUDT_dt_alteracaoColumn),Date)
            End Get
            Set
                Me(Me.tableTABELA_PROC.AUDT_dt_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUDT_nm_usuario_alteracao() As String
            Get
                Return CType(Me(Me.tableTABELA_PROC.AUDT_nm_usuario_alteracaoColumn),String)
            End Get
            Set
                Me(Me.tableTABELA_PROC.AUDT_nm_usuario_alteracaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FASE_nm_fase() As String
            Get
                Return CType(Me(Me.tableTABELA_PROC.FASE_nm_faseColumn),String)
            End Get
            Set
                Me(Me.tableTABELA_PROC.FASE_nm_faseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UNFE_nm_unidade_federativa() As String
            Get
                Return CType(Me(Me.tableTABELA_PROC.UNFE_nm_unidade_federativaColumn),String)
            End Get
            Set
                Me(Me.tableTABELA_PROC.UNFE_nm_unidade_federativaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MUNI_nm_municipio() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.MUNI_nm_municipioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MUNI_nm_municipio' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.MUNI_nm_municipioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_prioridade() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.PROC_cd_prioridadeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_cd_prioridade' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_cd_prioridadeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROC_cd_ds_prioridade() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABELA_PROC.PROC_cd_ds_prioridadeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROC_cd_ds_prioridade' in table 'TABELA_PROC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABELA_PROC.PROC_cd_ds_prioridadeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_vl_anoNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.PROC_vl_anoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_vl_anoNull()
            Me(Me.tableTABELA_PROC.PROC_vl_anoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_nm_processoNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.PROC_nm_processoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_nm_processoNull()
            Me(Me.tableTABELA_PROC.PROC_nm_processoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_id_processoNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.PROC_id_processoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_id_processoNull()
            Me(Me.tableTABELA_PROC.PROC_id_processoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFASE_cd_faseNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.FASE_cd_faseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFASE_cd_faseNull()
            Me(Me.tableTABELA_PROC.FASE_cd_faseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_ultimo_eventoNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.PROC_ds_ultimo_eventoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_ultimo_eventoNull()
            Me(Me.tableTABELA_PROC.PROC_ds_ultimo_eventoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_substanciaNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.PROC_ds_substanciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_substanciaNull()
            Me(Me.tableTABELA_PROC.PROC_ds_substanciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_areaNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.PROC_ds_areaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_areaNull()
            Me(Me.tableTABELA_PROC.PROC_ds_areaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_usoNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.PROC_ds_usoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_usoNull()
            Me(Me.tableTABELA_PROC.PROC_ds_usoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_ds_linkNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.PROC_ds_linkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_ds_linkNull()
            Me(Me.tableTABELA_PROC.PROC_ds_linkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUNFE_cd_unidade_federativaNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.UNFE_cd_unidade_federativaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUNFE_cd_unidade_federativaNull()
            Me(Me.tableTABELA_PROC.UNFE_cd_unidade_federativaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMUNI_nm_municipioNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.MUNI_nm_municipioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMUNI_nm_municipioNull()
            Me(Me.tableTABELA_PROC.MUNI_nm_municipioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_cd_prioridadeNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.PROC_cd_prioridadeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_cd_prioridadeNull()
            Me(Me.tableTABELA_PROC.PROC_cd_prioridadeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROC_cd_ds_prioridadeNull() As Boolean
            Return Me.IsNull(Me.tableTABELA_PROC.PROC_cd_ds_prioridadeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROC_cd_ds_prioridadeNull()
            Me(Me.tableTABELA_PROC.PROC_cd_ds_prioridadeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class GERAL_PROCESSORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GERAL_PROCESSORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As GERAL_PROCESSORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As GERAL_PROCESSORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DNPM_ASSOCIADOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DNPM_ASSOCIADOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DNPM_ASSOCIADOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DNPM_ASSOCIADOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DNPM_CONDICAORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DNPM_CONDICAORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DNPM_CONDICAORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DNPM_CONDICAORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class INFO_DAEERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INFO_DAEERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As INFO_DAEERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As INFO_DAEERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DNPM_MUNICIPIORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DNPM_MUNICIPIORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DNPM_MUNICIPIORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DNPM_MUNICIPIORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class CETESB_GERALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CETESB_GERALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As CETESB_GERALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As CETESB_GERALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class INFO_ICMBIORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INFO_ICMBIORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As INFO_ICMBIORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As INFO_ICMBIORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class INFO_PETROBRASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INFO_PETROBRASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As INFO_PETROBRASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As INFO_PETROBRASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class INFO_PREFEITURARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INFO_PREFEITURARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As INFO_PREFEITURARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As INFO_PREFEITURARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class GERAL_EVENTOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GERAL_EVENTOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As GERAL_EVENTOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As GERAL_EVENTOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class CETESB_MPRIMA_PRODUTORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CETESB_MPRIMA_PRODUTORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As CETESB_MPRIMA_PRODUTORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As CETESB_MPRIMA_PRODUTORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DNPM_SUBSTANCIARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DNPM_SUBSTANCIARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DNPM_SUBSTANCIARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DNPM_SUBSTANCIARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DNPM_TITULORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DNPM_TITULORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DNPM_TITULORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DNPM_TITULORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DAEE_TITULORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DAEE_TITULORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DAEE_TITULORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DAEE_TITULORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ICMBIO_TITULORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ICMBIO_TITULORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ICMBIO_TITULORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ICMBIO_TITULORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PETROBRAS_TITULORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PETROBRAS_TITULORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PETROBRAS_TITULORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PETROBRAS_TITULORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PREFEITURA_TITULORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PREFEITURA_TITULORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PREFEITURA_TITULORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PREFEITURA_TITULORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class CETESB_SDRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CETESB_SDRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As CETESB_SDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As CETESB_SDRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DNPM_DOCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DNPM_DOCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DNPM_DOCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DNPM_DOCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class CETESB_DOCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CETESB_DOCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As CETESB_DOCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As CETESB_DOCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DAEE_DOCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DAEE_DOCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DAEE_DOCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DAEE_DOCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ICMBIO_DOCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ICMBIO_DOCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ICMBIO_DOCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ICMBIO_DOCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PETROBRAS_DOCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PETROBRAS_DOCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PETROBRAS_DOCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PETROBRAS_DOCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PREFEITURA_DOCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PREFEITURA_DOCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PREFEITURA_DOCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PREFEITURA_DOCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class CETESB_NOTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CETESB_NOTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As CETESB_NOTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As CETESB_NOTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DAEE_NOTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DAEE_NOTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DAEE_NOTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DAEE_NOTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ICMBIO_NOTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ICMBIO_NOTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ICMBIO_NOTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ICMBIO_NOTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PETROBRAS_NOTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PETROBRAS_NOTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PETROBRAS_NOTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PETROBRAS_NOTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PREFEITURA_NOTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PREFEITURA_NOTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PREFEITURA_NOTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PREFEITURA_NOTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TABELA_DOCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TABELA_DOCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TABELA_DOCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TABELA_DOCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TabelaFiltroRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TabelaFiltroRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TabelaFiltroRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TabelaFiltroRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class GRAFICO_DOCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GRAFICO_DOCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As GRAFICO_DOCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As GRAFICO_DOCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TABELA_PROCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TABELA_PROCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TABELA_PROCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TABELA_PROCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
